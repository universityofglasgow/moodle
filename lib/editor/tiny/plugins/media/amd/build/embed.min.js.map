{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {\n    get_string as getString,\n    get_strings as getStrings,\n} from 'core/str';\nimport * as ModalFactory from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport {getCurrentLanguage, getMoodleLang} from 'editor_tiny/options';\nimport {component} from \"./common\";\nimport Modal from './embedmodal';\nimport Selectors from './selectors';\nimport {getEmbedPermissions} from './options';\n\nexport const MediaEmbed = class {\n    editor = null;\n    canShowFilePicker = false;\n\n    /**\n     * @property {Object} The names of the alignment options.\n     */\n    helpStrings = null;\n\n    /**\n     * @property {boolean} Indicate that the user is updating the media or not.\n     */\n    isUpdating = false;\n\n    constructor(editor) {\n        const permissions = getEmbedPermissions(editor);\n        this.canShowFilePicker = permissions.filepicker;\n        this.editor = editor;\n    }\n\n    async getHelpStrings() {\n        if (!this.helpStrings) {\n            const [addSource, tracks, subtitles, captions, descriptions, chapters, metadata] = await getStrings([\n                'addsource_help',\n                'tracks_help',\n                'subtitles_help',\n                'captions_help',\n                'descriptions_help',\n                'chapters_help',\n                'metadata_help',\n            ].map((key) => ({\n                key,\n                component,\n            })));\n\n            this.helpStrings = {addSource, tracks, subtitles, captions, descriptions, chapters, metadata};\n        }\n\n        return this.helpStrings;\n    }\n\n    async getTemplateContext(data) {\n        const languages = this.prepareMoodleLang();\n\n        const helpIcons = Array.from(Object.entries(await this.getHelpStrings())).forEach(([key, text]) => {\n            data[`${key.toLowerCase()}helpicon`] = {text};\n        });\n\n        return Object.assign({}, {\n            elementid: this.editor.getElement().id,\n            showfilepicker: this.canShowFilePicker,\n            langsinstalled: languages.installed,\n            langsavailable: languages.available,\n            link: true,\n            video: false,\n            audio: false,\n            isupdating: this.isUpdating,\n        }, data, helpIcons);\n    }\n\n    async displayDialogue() {\n        const data = Object.assign({}, this.getCurrentEmbedData());\n        this.isUpdating = Object.keys(data).length !== 0;\n\n        const modal = await ModalFactory.create({\n            type: Modal.TYPE,\n            title: getString('createmedia', 'tiny_media'),\n            templateContext: await this.getTemplateContext(data),\n            removeOnClose: true,\n            large: true,\n        });\n\n        this.currentModal = modal;\n        await this.registerEventListeners(modal);\n        modal.show();\n    }\n\n    getCurrentEmbedData() {\n        const properties = this.getMediumProperties();\n        if (!properties) {\n            return {};\n        }\n\n        const processedProperties = {};\n        processedProperties[properties.type.toLowerCase()] = properties;\n        processedProperties.link = false;\n\n        return processedProperties;\n    }\n\n    getSelectedMedia() {\n        const mediaElm = this.editor.selection.getNode();\n\n        if (!mediaElm) {\n            return null;\n        }\n\n        if (mediaElm.nodeName.toLowerCase() === 'video' || mediaElm.nodeName.toLowerCase() === 'audio') {\n            return mediaElm;\n        }\n\n        if (mediaElm.querySelector('video')) {\n            return mediaElm.querySelector('video');\n        }\n\n        if (mediaElm.querySelector('audio')) {\n            return mediaElm.querySelector('audio');\n        }\n\n        return null;\n    }\n\n    getMediumProperties() {\n        const boolAttr = (elem, attr) => {\n            // As explained in MDL-64175, some OS (like Ubuntu), are removing the value for these attributes.\n            // So in order to check if attr=\"true\", we need to check if the attribute exists and if the value is empty or true.\n            return (elem.hasAttribute(attr) && (elem.getAttribute(attr) || elem.getAttribute(attr) === ''));\n        };\n\n        const tracks = {\n            subtitles: [],\n            captions: [],\n            descriptions: [],\n            chapters: [],\n            metadata: []\n        };\n        const sources = [];\n\n        const medium = this.getSelectedMedia();\n        if (!medium) {\n            return null;\n        }\n        medium.querySelectorAll('track').forEach((track) => {\n            tracks[track.getAttribute('kind')].push({\n                src: track.getAttribute('src'),\n                srclang: track.getAttribute('srclang'),\n                label: track.getAttribute('label'),\n                defaultTrack: boolAttr(track, 'default')\n            });\n        });\n\n        medium.querySelectorAll('source').forEach((source) => {\n            sources.push(source.src);\n        });\n\n        return {\n            type: medium.nodeName.toLowerCase() === 'video' ? Selectors.EMBED.mediaTypes.video : Selectors.EMBED.mediaTypes.audio,\n            sources,\n            poster: medium.getAttribute('poster'),\n            title: medium.getAttribute('title'),\n            width: medium.getAttribute('width'),\n            height: medium.getAttribute('height'),\n            autoplay: boolAttr(medium, 'autoplay'),\n            loop: boolAttr(medium, 'loop'),\n            muted: boolAttr(medium, 'muted'),\n            controls: boolAttr(medium, 'controls'),\n            tracks,\n        };\n    }\n\n    prepareMoodleLang() {\n        const moodleLangs = getMoodleLang(this.editor);\n        const currentLanguage = getCurrentLanguage(this.editor);\n\n        const installed = Object.entries(moodleLangs.installed).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        const available = Object.entries(moodleLangs.available).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        return {\n            installed,\n            available,\n        };\n    }\n\n    getMoodleLangObj(subtitleLang) {\n        const {available} = getMoodleLang(this.editor);\n\n        if (available[subtitleLang]) {\n            return {\n                lang: subtitleLang,\n                code: available[subtitleLang],\n            };\n        }\n\n        return null;\n    }\n\n    filePickerCallback(params, element, fpType) {\n        if (params.url !== '') {\n            const tabPane = element.closest('.tab-pane');\n            element.closest(Selectors.EMBED.elements.source).querySelector(Selectors.EMBED.elements.url).value = params.url;\n\n            if (tabPane.id === this.editor.getElement().id + '_' + Selectors.EMBED.mediaTypes.link.toLowerCase()) {\n                tabPane.querySelector(Selectors.EMBED.elements.name).value = params.file;\n            }\n\n            if (fpType === 'subtitle') {\n                // If the file is subtitle file. We need to match the language and label for that file.\n                const subtitleLang = params.file.split('.vtt')[0].split('-').slice(-1)[0];\n                const langObj = this.getMoodleLangObj(subtitleLang);\n                if (langObj) {\n                    const track = element.closest(Selectors.EMBED.elements.track);\n                    track.querySelector(Selectors.EMBED.elements.trackLabel).value = langObj.lang.trim();\n                    track.querySelector(Selectors.EMBED.elements.trackLang).value = langObj.code;\n                }\n            }\n        }\n    }\n\n    addMediaSourceComponent(element, callback) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        const clone = sourceElement.cloneNode(true);\n\n        sourceElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        sourceElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        sourceElement.parentNode.insertBefore(clone, sourceElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeMediaSourceComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        sourceElement.remove();\n    }\n\n    addTrackComponent(element, callback) {\n        const trackElement = element.closest(Selectors.EMBED.elements.track);\n        const clone = trackElement.cloneNode(true);\n\n        trackElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        trackElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        trackElement.parentNode.insertBefore(clone, trackElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeTrackComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.track);\n        sourceElement.remove();\n    }\n\n    getMediumTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-medium-type');\n    }\n\n    getTrackTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-track-kind');\n    }\n\n    getMediaHTML(form) {\n        const mediumType = this.getMediumTypeFromTabPane(form.querySelector('.root.tab-content > .tab-pane.active'));\n        const tabContent = form.querySelector(Selectors.EMBED.elements[mediumType.toLowerCase() + 'Pane']);\n\n        return this['getMediaHTML' + mediumType[0].toUpperCase() + mediumType.substr(1)](tabContent);\n    }\n\n    getMediaHTMLLink(tab) {\n        const context = {\n            url: tab.querySelector(Selectors.EMBED.elements.url).value,\n            name: tab.querySelector(Selectors.EMBED.elements.name).value || false\n        };\n\n        return context.url ? Templates.renderForPromise('tiny_media/embed_media_link', context) : '';\n    }\n\n    getMediaHTMLVideo(tab) {\n        const context = this.getContextForMediaHTML(tab);\n        context.width = tab.querySelector(Selectors.EMBED.elements.width).value || false;\n        context.height = tab.querySelector(Selectors.EMBED.elements.height).value || false;\n        context.poster = tab.querySelector(\n            `${Selectors.EMBED.elements.posterSource} ${Selectors.EMBED.elements.url}`\n        ).value || false;\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_video', context) : '';\n    }\n\n    getMediaHTMLAudio(tab) {\n        const context = this.getContextForMediaHTML(tab);\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_audio', context) : '';\n    }\n\n    getContextForMediaHTML(tab) {\n        const tracks = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.track)).map(track => ({\n            track: track.querySelector(Selectors.EMBED.elements.trackSource + ' ' + Selectors.EMBED.elements.url).value,\n            kind: this.getTrackTypeFromTabPane(track.closest('.tab-pane')),\n            label: track.querySelector(Selectors.EMBED.elements.trackLabel).value ||\n                track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            srclang: track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            defaultTrack: track.querySelector(Selectors.EMBED.elements.trackDefault).checked ? \"true\" : null\n        })).filter((track) => !!track.track);\n\n        const sources = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.mediaSource + ' '\n            + Selectors.EMBED.elements.url))\n                .filter((source) => !!source.value)\n                .map((source) => source.value);\n\n        return {\n            sources,\n            description: tab.querySelector(Selectors.EMBED.elements.mediaSource + ' '\n                + Selectors.EMBED.elements.url).value || false,\n            tracks,\n            showControls: tab.querySelector(Selectors.EMBED.elements.mediaControl).checked,\n            autoplay: tab.querySelector(Selectors.EMBED.elements.mediaAutoplay).checked,\n            muted: tab.querySelector(Selectors.EMBED.elements.mediaMute).checked,\n            loop: tab.querySelector(Selectors.EMBED.elements.mediaLoop).checked,\n            title: tab.querySelector(Selectors.EMBED.elements.title).value || false\n        };\n    }\n\n    getFilepickerTypeFromElement(element) {\n        if (element.closest(Selectors.EMBED.elements.posterSource)) {\n            return 'image';\n        }\n        if (element.closest(Selectors.EMBED.elements.trackSource)) {\n            return 'subtitle';\n        }\n\n        return 'media';\n    }\n\n    async clickHandler(e) {\n        const element = e.target;\n\n        const mediaBrowser = element.closest(Selectors.EMBED.actions.mediaBrowser);\n        if (mediaBrowser) {\n            e.preventDefault();\n            const fpType = this.getFilepickerTypeFromElement(element);\n            const params = await displayFilepicker(this.editor, fpType);\n            this.filePickerCallback(params, element, fpType);\n        }\n\n        const addComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .addcomponent');\n        if (addComponentSourceAction) {\n            e.preventDefault();\n            this.addMediaSourceComponent(element);\n        }\n\n        const removeComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .removecomponent');\n        if (removeComponentSourceAction) {\n            e.preventDefault();\n            this.removeMediaSourceComponent(element);\n        }\n\n        const addComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .addcomponent');\n        if (addComponentTrackAction) {\n            e.preventDefault();\n            this.addTrackComponent(element);\n        }\n\n        const removeComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .removecomponent');\n        if (removeComponentTrackAction) {\n            e.preventDefault();\n            this.removeTrackComponent(element);\n        }\n\n        // Only allow one track per tab to be selected as \"default\".\n        const trackDefaultAction = element.closest(Selectors.EMBED.elements.trackDefault);\n        if (trackDefaultAction && trackDefaultAction.checked) {\n            const getKind = (el) => this.getTrackTypeFromTabPane(el.parentElement.closest('.tab-pane'));\n\n            element.parentElement\n                .closest('.root.tab-content')\n                .querySelectorAll(Selectors.EMBED.elements.trackDefault)\n                .forEach((select) => {\n                    if (select !== element && getKind(element) === getKind(select)) {\n                        select.checked = false;\n                    }\n                });\n        }\n    }\n\n    async handleDialogueSubmission(event, modal) {\n        const {html} = await this.getMediaHTML(modal.getRoot()[0]);\n        if (html) {\n            if (this.isUpdating) {\n                const selectedNode = this.getSelectedMedia();\n                selectedNode.outerHTML = html;\n                this.isUpdating = false;\n            } else {\n                this.editor.insertContent(html);\n            }\n        }\n    }\n\n    async registerEventListeners(modal) {\n        await modal.getBody();\n        const $root = modal.getRoot();\n        const root = $root[0];\n        if (this.canShowFilePicker) {\n            root.addEventListener('click', this.clickHandler.bind(this));\n        }\n\n        $root.on(ModalEvents.save, this.handleDialogueSubmission.bind(this));\n        $root.on(ModalEvents.hidden, () => {\n            this.currentModal.destroy();\n        });\n        $root.on(ModalEvents.shown, () => {\n            root.querySelectorAll(Selectors.EMBED.elements.trackLang).forEach((dropdown) => {\n                const defaultVal = dropdown.getAttribute('data-value');\n                if (defaultVal) {\n                    dropdown.value = defaultVal;\n                }\n            });\n        });\n    }\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_defineProperty","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","_templates","ModalFactory","ModalEvents","_embedmodal","_selectors","_exports","MediaEmbed","constructor","editor","permissions","getEmbedPermissions","this","canShowFilePicker","filepicker","async","helpStrings","addSource","tracks","subtitles","captions","descriptions","chapters","metadata","getStrings","map","component","data","languages","prepareMoodleLang","helpIcons","Array","from","entries","getHelpStrings","forEach","_ref","text","concat","toLowerCase","assign","elementid","getElement","id","showfilepicker","langsinstalled","installed","langsavailable","available","link","video","audio","isupdating","isUpdating","getCurrentEmbedData","keys","length","modal","create","type","Modal","TYPE","title","getString","templateContext","getTemplateContext","removeOnClose","large","currentModal","registerEventListeners","show","properties","getMediumProperties","processedProperties","getSelectedMedia","mediaElm","selection","getNode","nodeName","querySelector","boolAttr","elem","attr","hasAttribute","getAttribute","sources","medium","querySelectorAll","track","push","src","srclang","label","defaultTrack","source","Selectors","EMBED","mediaTypes","poster","width","height","autoplay","loop","muted","controls","moodleLangs","getMoodleLang","currentLanguage","getCurrentLanguage","_ref2","lang","code","_ref3","getMoodleLangObj","subtitleLang","filePickerCallback","params","element","fpType","url","tabPane","closest","elements","name","file","split","slice","langObj","trackLabel","trim","trackLang","addMediaSourceComponent","callback","sourceElement","mediaSource","clone","cloneNode","classList","remove","add","parentNode","insertBefore","nextSibling","removeMediaSourceComponent","addTrackComponent","trackElement","removeTrackComponent","getMediumTypeFromTabPane","getTrackTypeFromTabPane","getMediaHTML","form","mediumType","tabContent","toUpperCase","substr","getMediaHTMLLink","tab","context","Templates","renderForPromise","getMediaHTMLVideo","getContextForMediaHTML","posterSource","getMediaHTMLAudio","trackSource","kind","trackDefault","checked","filter","description","showControls","mediaControl","mediaAutoplay","mediaMute","mediaLoop","getFilepickerTypeFromElement","e","target","actions","mediaBrowser","preventDefault","displayFilepicker","trackDefaultAction","getKind","el","parentElement","select","event","html","getRoot","outerHTML","insertContent","getBody","$root","root","addEventListener","clickHandler","bind","on","save","handleDialogueSubmission","hidden","destroy","shown","dropdown","defaultVal"],"mappings":"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"}