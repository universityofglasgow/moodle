{"version":3,"file":"navigation.min.js","sources":["../src/navigation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class provides functionality for the keyboard navigation.\n *\n * @copyright  2019 Marcus Green\n * @author     Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    /**\n     * @alias qtype_wordselect/navigation\n     */\n    var t = {\n\n        /**\n         * CSS selector.\n         */\n        CSS: {\n            QUESTION_CONTENT: '.qtext',\n            SELECTABLE_WORD: 'span.selectable'\n        },\n\n        /**\n         * List of rows and columns of words.\n         */\n        tableMatrix: [],\n\n        /**\n         * Initialise the navigation.\n         */\n        init: function() {\n            var questionContent = $(t.CSS.QUESTION_CONTENT);\n            var words = questionContent.find(t.CSS.SELECTABLE_WORD);\n            if (words.length === 0) {\n                // Question must be in read-only mode.\n                return;\n            }\n\n            var lineCounter = 0;\n            var previousY = parseInt($(words[0]).position().top, 10);\n            var columnCounter = 0;\n            var rows = [];\n\n            for (var i = 0; i < words.length; i++) {\n                var wordEle = $(words[i]);\n                var isTable = wordEle.parent().closest('table').length;\n                var currentTableColNo = 0;\n                if (isTable) {\n                    currentTableColNo = wordEle.parent().closest('table').find('tr:first td').length;\n                }\n                if (parseInt(wordEle.position().top, 10) !== previousY || (isTable && columnCounter === currentTableColNo)) {\n                    // Next line or next row.\n                    columnCounter = 0;\n                    lineCounter++;\n                }\n                if (typeof rows[lineCounter] === 'undefined') {\n                    rows[lineCounter] = [];\n                }\n                var currentItem = [];\n                currentItem.id = wordEle.attr('id');\n                currentItem.value = wordEle.text();\n                rows[lineCounter][columnCounter] = currentItem;\n                previousY = parseInt(wordEle.position().top, 10);\n                columnCounter++;\n            }\n            t.tableMatrix = rows;\n\n            $(t.CSS.SELECTABLE_WORD).on('keydown', function(e) {\n                if (e.keyCode === 37 || e.keyCode === 38 || e.keyCode === 39 || e.keyCode === 40) {\n                    e.preventDefault();\n                    var currentWordPos = t.getWordPosition($(this).attr('id'));\n                    t.navigateToWord(currentWordPos.row, currentWordPos.col, e.keyCode);\n                }\n            });\n\n            $(t.CSS.SELECTABLE_WORD).on('keyup', function(e) {\n                // Handle keyboard focus.\n                if ($(this).hasClass('selected') && (\n                    e.keyCode === 9 || (e.shiftKey && (e.which === 9)) ||\n                    e.keyCode === 37 || e.keyCode === 38 || e.keyCode === 39 || e.keyCode === 40)) {\n                    e.preventDefault();\n                    $(this).addClass('keyboard_focus');\n                }\n            });\n\n            $(t.CSS.SELECTABLE_WORD).focusout(function() {\n                if ($(this).hasClass('selected') && $(this).hasClass('keyboard_focus')) {\n                    $(this).removeClass('keyboard_focus');\n                }\n            });\n        },\n\n        /**\n         *\n         * Get the given word position.\n         *\n         * @param {String} id Id of word need to get the position\n         * @returns {boolean|{col: number, row: number}}\n         */\n        getWordPosition: function(id) {\n            for (var i = 0; i < t.tableMatrix.length; i++) {\n                var currentRow = t.tableMatrix[i];\n                for (var j = 0; j < currentRow.length; j++) {\n                    if (currentRow[j].id === id) {\n                        return {\n                            'row': i,\n                            'col': j\n                        };\n                    }\n                }\n            }\n            return false;\n        },\n\n        /**\n         *\n         * Calculate and set keyboard focus to specific word.\n         *\n         * @param {int} row Current focus row index\n         * @param {int} col Current focus column index\n         * @param {int} keyCode Code of keypress\n         */\n        navigateToWord: function(row, col, keyCode) {\n            if (typeof t.tableMatrix[row] !== 'undefined' && typeof t.tableMatrix[row][col] !== 'undefined') {\n                var nextCellId = '';\n                if (keyCode === 37) {\n                    // Left arrow.\n                    if (typeof t.tableMatrix[row][col - 1] !== 'undefined') {\n                        nextCellId = t.tableMatrix[row][col - 1].id;\n                    } else if (typeof t.tableMatrix[row - 1] !== 'undefined' &&\n                        typeof t.tableMatrix[row - 1][t.tableMatrix[row - 1].length - 1] !== 'undefined') {\n                        // Previous line, last word.\n                        nextCellId = t.tableMatrix[row - 1][t.tableMatrix[row - 1].length - 1].id;\n                    }\n                } else if (keyCode === 38) {\n                    // Up arrow.\n                    if (typeof t.tableMatrix[row - 1] !== 'undefined' && typeof t.tableMatrix[row - 1][0] !== 'undefined') {\n                        nextCellId = t.tableMatrix[row - 1][0].id;\n                    }\n                } else if (keyCode === 39) {\n                    // Right arrow.\n                    if (typeof t.tableMatrix[row][col + 1] !== 'undefined') {\n                        nextCellId = t.tableMatrix[row][col + 1].id;\n                    } else if (typeof t.tableMatrix[row + 1] !== 'undefined' && typeof t.tableMatrix[row + 1][0] !== 'undefined') {\n                        // Next line, first word.\n                        nextCellId = t.tableMatrix[row + 1][0].id;\n                    }\n                } else if (keyCode === 40) {\n                    // Down arrow.\n                    if (typeof t.tableMatrix[row + 1] !== 'undefined' && typeof t.tableMatrix[row + 1][0] !== 'undefined') {\n                        // Next line, first word.\n                        nextCellId = t.tableMatrix[row + 1][0].id;\n                    }\n                }\n                $(\"span[name='\" + nextCellId + \"']\").focus();\n            }\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","t","CSS","QUESTION_CONTENT","SELECTABLE_WORD","tableMatrix","init","words","find","length","lineCounter","previousY","parseInt","position","top","columnCounter","rows","i","wordEle","isTable","parent","closest","currentTableColNo","currentItem","id","attr","value","text","on","e","keyCode","preventDefault","currentWordPos","getWordPosition","this","navigateToWord","row","col","hasClass","shiftKey","which","addClass","focusout","removeClass","currentRow","j","nextCellId","focus"],"mappings":"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"}