{"version":3,"file":"imagecover.min.js","sources":["../src/imagecover.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Library to add image covers to prevent seizure inducing images from showing.\n *\n * @package\n * @author    Guy Thomas\n * @copyright Copyright (c) 2016 Open LMS\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'filter_ally/util'], function($, Util) {\n    return new function() {\n\n        var applySizing = function() {\n            $('.ally-image-wrapper').each(function(){\n                var wrapper = this;\n                var img = $(wrapper).find('img');\n                var cover = $(wrapper).find('.ally-image-cover');\n                var feedback = $(wrapper).find('.ally-feedback');\n                var marginTop = parseInt($(img).css('marginTop'));\n                var marginLeft = parseInt($(img).css('marginLeft'));\n\n                var debounceCoordsChanged = Util.debounce(function(coords) {\n                    var width = (coords.right - coords.left);\n                    var height = (coords.bottom - coords.top);\n                    $(cover)\n                        .css('width', width + 'px')\n                        .css('height', height + 'px');\n                    var topPos = $(img).position().top + marginTop;\n                    var leftPos = $(img).position().left + marginLeft;\n                    $(cover)\n                        .css('top', topPos + 'px')\n                        .css('left', leftPos + 'px');\n                    if (feedback.length) {\n                        feedback\n                            .css('top', (topPos + height - feedback.height()) + 'px')\n                            .css('left', leftPos + 'px');\n                    }\n                }, 1000);\n\n                Util.onCoordsChange(img, function(coords) {\n                    debounceCoordsChanged(coords);\n                });\n            });\n        };\n\n        this.init = function() {\n            $(document).ready(applySizing);\n            var targetNode = document;\n            var observerOptions = {\n                childList: true,\n                attributes: true,\n                subtree: true\n            };\n            /**\n             *  By using the an event combined with a mutation observer that disconnects itself,\n             *  we can manage to have a mutation observer that works after page content lazy loaded by loaded in snap.\n             *  the interval is added as a redundancy to prevent calculation errors by correcting the indicator position.\n             * */\n            $(document).on('snap-course-content-loaded', function() {\n                var observer = new MutationObserver(() => {\n                    let count = 0;\n                    let interval = setInterval(function(){\n                        if (count < 5) {\n                            applySizing();\n                            count++;\n                        } else {\n                            clearTimeout(interval);\n                        }\n                    },500);\n                    observer.disconnect();\n                });\n                observer.observe(targetNode, observerOptions);\n            });\n        };\n    };\n});\n"],"names":["define","$","Util","applySizing","each","img","this","find","cover","feedback","marginTop","parseInt","css","marginLeft","debounceCoordsChanged","debounce","coords","width","right","left","height","bottom","top","topPos","position","leftPos","length","onCoordsChange","init","document","ready","targetNode","observerOptions","childList","attributes","subtree","on","observer","MutationObserver","count","interval","setInterval","clearTimeout","disconnect","observe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBAA,gCAAO,CAAC,SAAU,qBAAqB,SAASC,EAAGC,aACxC,IAAI,eAEHC,YAAc,WACdF,EAAE,uBAAuBG,MAAK,eAEtBC,IAAMJ,EADIK,MACOC,KAAK,OACtBC,MAAQP,EAFEK,MAESC,KAAK,qBACxBE,SAAWR,EAHDK,MAGYC,KAAK,kBAC3BG,UAAYC,SAASV,EAAEI,KAAKO,IAAI,cAChCC,WAAaF,SAASV,EAAEI,KAAKO,IAAI,eAEjCE,sBAAwBZ,KAAKa,UAAS,SAASC,YAC3CC,MAASD,OAAOE,MAAQF,OAAOG,KAC/BC,OAAUJ,OAAOK,OAASL,OAAOM,IACrCrB,EAAEO,OACGI,IAAI,QAASK,MAAQ,MACrBL,IAAI,SAAUQ,OAAS,UACxBG,OAAStB,EAAEI,KAAKmB,WAAWF,IAAMZ,UACjCe,QAAUxB,EAAEI,KAAKmB,WAAWL,KAAON,WACvCZ,EAAEO,OACGI,IAAI,MAAOW,OAAS,MACpBX,IAAI,OAAQa,QAAU,MACvBhB,SAASiB,QACTjB,SACKG,IAAI,MAAQW,OAASH,OAASX,SAASW,SAAY,MACnDR,IAAI,OAAQa,QAAU,QAEhC,KAEHvB,KAAKyB,eAAetB,KAAK,SAASW,QAC9BF,sBAAsBE,oBAK7BY,KAAO,WACR3B,EAAE4B,UAAUC,MAAM3B,iBACd4B,WAAaF,SACbG,gBAAkB,CAClBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAOblC,EAAE4B,UAAUO,GAAG,8BAA8B,eACrCC,SAAW,IAAIC,kBAAiB,SAC5BC,MAAQ,EACRC,SAAWC,aAAY,WACnBF,MAAQ,GACRpC,cACAoC,SAEAG,aAAaF,YAEnB,KACFH,SAASM,gBAEbN,SAASO,QAAQb,WAAYC"}