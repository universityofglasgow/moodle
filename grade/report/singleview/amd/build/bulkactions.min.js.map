{"version":3,"file":"bulkactions.min.js","sources":["../src/bulkactions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for bulk actions.\n *\n * @module      gradereport_singleview/bulkactions\n * @copyright   2022 Ilya Tregubov <ilya@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport CustomEvents from \"core/custom_interaction_events\";\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\nimport Notification from 'core/notification';\nimport selectors from 'gradereport_singleview/selectors';\n\n/**\n * Initialize module.\n */\nexport const init = () => {\n    const pendingPromise = new Pending();\n    registerListenerEvents();\n    pendingPromise.resolve();\n};\n\n/**\n * Register bulk actions related event listeners.\n *\n * @method registerListenerEvents\n */\nconst registerListenerEvents = () => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n    CustomEvents.define(document, events);\n\n    // Register events.\n    events.forEach((event) => {\n        document.addEventListener(event, async(e) => {\n            const trigger = e.target.closest(selectors.actions.bulkaction);\n\n            if (trigger) {\n                if ((trigger.dataset.action === 'overrideallgrades') || (trigger.dataset.action === 'overridenonegrades')) {\n                    const override = document.querySelectorAll(selectors.elements.override);\n\n                    if (trigger.dataset.action === 'overridenonegrades') {\n                        // Alert for removing all grade overrides on page.\n                        Str.get_strings([\n                            {key: 'removeoverride', component: 'gradereport_singleview'},\n                            {key: 'overridenoneconfirm', component: 'gradereport_singleview'},\n                            {key: 'removeoverridesave', component: 'gradereport_singleview'},\n                            {key: 'cancel', component: 'moodle'},\n                        ]).done((strings) => {\n                            Notification.confirm(\n                                strings[0],\n                                strings[1],\n                                strings[2],\n                                strings[3],\n                                () => {\n                                    // Uncheck each override checkbox - this will make grade and feedback input fields disabled.\n                                    override.forEach((el) => {\n                                        if (el.checked) {\n                                            el.click();\n                                        }\n                                    });\n                                });\n                        }).fail(Notification.exception);\n\n                    } else {\n                        // Check each override checkbox - this will make grade and feedback input fields enabled.\n                        override.forEach((el) => {\n                            if (!el.checked) {\n                                el.click();\n                            }\n                        });\n                    }\n                } else if ((trigger.dataset.action === 'excludeallgrades') || (trigger.dataset.action === 'excludenonegrades')) {\n                    const exclude = document.querySelectorAll(selectors.elements.exclude);\n                    const checked = (trigger.dataset.action === 'excludeallgrades');\n                    // Uncheck or check each exclude checkbox.\n                    exclude.forEach((el) => {\n                        el.checked = checked;\n                    });\n                } else if (trigger.dataset.action === 'bulklegend') {\n                    // Modal for bulk insert grades.\n                    Str.get_strings([\n                        {key: 'bulklegend', component: 'gradereport_singleview'},\n                        {key: 'save', component: 'moodle'},\n                    ]).done((strings) => {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: Templates.render('gradereport_singleview/bulkinsert', {\n                                id: 'bulkinsertmodal',\n                                name: 'bulkinsertmodal'\n                            }),\n                            title: strings[0],\n                        }).then((modal) => {\n                            modal.setSaveButtonText(strings[1]);\n                            modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\n\n                            modal.getRoot().on(ModalEvents.hidden, () => {\n                                modal.getRoot().remove();\n                            });\n\n                            // We need to acknowledge that we understand risks of loosing data.\n                            // Only when acknowledge checkbox is checked we allow selecting insert options.\n                            modal.getRoot().on('change', selectors.elements.warningcheckbox,\n                                (e) => {\n                                    e.preventDefault();\n                                    if (e.target.checked) {\n                                        modal.getRoot().find(selectors.elements.modalformdata).removeClass('dimmed_text');\n                                        modal.getRoot().find(selectors.elements.modalradio).removeAttr('disabled');\n                                        modal.getRoot().find(selectors.elements.modalinput).removeAttr('disabled');\n\n                                        const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\n                                        // We allow saving grades only when all needed data present on form.\n                                        if (formRadioData) {\n                                            modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\n                                        }\n                                    } else {\n                                        modal.getRoot().find(selectors.elements.modalformdata).addClass('dimmed_text');\n                                        modal.getRoot().find(selectors.elements.modalradio).attr('disabled', true);\n                                        modal.getRoot().find(selectors.elements.modalinput).attr('disabled', true);\n                                        modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\n                                    }\n                                });\n\n                            // We allow saving grades only when all needed data present on form.\n                            modal.getRoot().on('change', selectors.elements.modalradio,\n                                (e) => {\n                                    e.preventDefault();\n                                    modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\n                                });\n\n                            modal.getRoot().on(ModalEvents.save, () => {\n                                // When save button is clicked in modal form we insert data from modal\n                                // into preexisted hidden bulk insert form and Save button for table form.\n                                document.querySelector(selectors.elements.enablebulkinsert).checked = true;\n                                const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\n                                const $select = document.querySelector(selectors.elements.formradio);\n                                $select.value = formRadioData;\n\n                                const formData = modal.getRoot().find(selectors.elements.modalgrade).val();\n                                document.querySelector(selectors.elements.formgrade).value = formData;\n                                document.querySelector(selectors.elements.formsave).click();\n                            });\n\n                            modal.show();\n\n                            return modal;\n                        }).fail(Notification.exception);\n                    }).fail(Notification.exception);\n                }\n            }\n        });\n    });\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_pending","_custom_interaction_events","_modal_factory","_templates","_modal_events","Str","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_notification","_selectors","_exports","init","pendingPromise","Pending","registerListenerEvents","resolve","events","CustomEvents","activate","keyboardActivate","define","document","forEach","event","addEventListener","async","trigger","e","target","closest","selectors","actions","bulkaction","dataset","action","override","querySelectorAll","elements","get_strings","component","done","strings","Notification","confirm","el","checked","click","fail","exception","exclude","ModalFactory","create","type","types","SAVE_CANCEL","body","Templates","render","id","name","title","then","modal","setSaveButtonText","getFooter","find","modalsave","attr","getRoot","on","ModalEvents","hidden","remove","warningcheckbox","preventDefault","modalformdata","removeClass","modalradio","removeAttr","modalinput","modalradiochecked","val","addClass","save","querySelector","enablebulkinsert","formRadioData","formradio","value","formData","modalgrade","formgrade","formsave","show"],"mappings":"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"}