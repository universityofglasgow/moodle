{"version":3,"file":"logviewer.min.js","sources":["../src/logviewer.js"],"sourcesContent":["define(\n    [\n        'jquery',\n        'tool_ally/main',\n        'core/ajax',\n        'tool_ally/vuecomp/th-Filter',\n        'tool_ally/vuecomp/td-HTML',\n        'tool_ally/vuecomp/td-LogDetails'\n\n    ],\n    function($, main, ajax, thFilter, tdHTML, tdLogDetails) {\n    return {\n        Vue: null,\n        globalComponents: {}, // Additional global components to be registered by main bootstrapper.\n        init: function() {\n\n            var self = this;\n            var logData = null;\n\n            // Routing components.\n            var dataTableTemplate = function(id) {\n                return '<div id=\"' + id + '\"><datatable v-bind=\"data\">'\n                    + '</datatable></div>';\n            };\n\n            var dumpList = { props: ['data'], template: dataTableTemplate('dt-allylog')};\n\n            // Register th, td components.\n            this.globalComponents.thFilter = thFilter;\n            this.globalComponents.tdHTML = tdHTML;\n            this.globalComponents.tdLogDetails = tdLogDetails;\n\n            ajax.call([{\n                methodname: 'tool_ally_get_logs',\n                args: {\n                    query: null\n                }\n            }])[0].then(function(data) {\n                logData = data;\n                var routes = [\n                    {path: '/', redirect: '/logView'},\n                    {path: '/logView', component: dumpList, props: {data: logData}},\n                ];\n\n                main.init({\n                    data: {logData: logData},\n                    routes: routes,\n\n                    globalComponents: self.globalComponents,\n                    watch: {\n                        'logData.query': {\n                            handler: function(query) {\n                                ajax.call([{\n                                    methodname: 'tool_ally_get_logs',\n                                    args: {\n                                        query: JSON.stringify(query)\n                                    }\n                                }])[0].then(function(data) {\n                                    logData = data;\n                                    // We don't need to update the columns or the query - just the data and pagination.\n                                    // Updating the query would put us in a watch loop!\n                                    self.Vue.logData.data = logData.data;\n                                    self.Vue.logData.total = logData.total;\n                                });\n                            },\n                            deep: true\n                        }\n                    }\n                }).then(function(Vue) {\n                    self.Vue = Vue;\n                });\n\n            });\n        }\n    };\n});"],"names":["define","$","main","ajax","thFilter","tdHTML","tdLogDetails","Vue","globalComponents","init","id","self","this","logData","dumpList","props","template","call","methodname","args","query","then","data","routes","path","redirect","component","watch","handler","JSON","stringify","total","deep"],"mappings":"AAAAA,6BACI,CACI,SACA,iBACA,YACA,8BACA,4BACA,oCAGJ,SAASC,EAAGC,KAAMC,KAAMC,SAAUC,OAAQC,oBACnC,CACHC,IAAK,KACLC,iBAAkB,GAClBC,KAAM,eAM+BC,GAJ7BC,KAAOC,KACPC,QAAU,KAQVC,SAAW,CAAEC,MAAO,CAAC,QAASC,UALDN,GAK6B,aAJnD,YAAcA,GAAd,uDAONF,iBAAiBJ,SAAWA,cAC5BI,iBAAiBH,OAASA,YAC1BG,iBAAiBF,aAAeA,aAErCH,KAAKc,KAAK,CAAC,CACPC,WAAY,qBACZC,KAAM,CACFC,MAAO,SAEX,GAAGC,MAAK,SAASC,UAEbC,OAAS,CACT,CAACC,KAAM,IAAKC,SAAU,YACtB,CAACD,KAAM,WAAYE,UAAWZ,SAAUC,MAAO,CAACO,KAHpDT,QAAUS,QAMVpB,KAAKO,KAAK,CACNa,KAAM,CAACT,QAASA,SAChBU,OAAQA,OAERf,iBAAkBG,KAAKH,iBACvBmB,MAAO,iBACc,CACbC,QAAS,SAASR,OACdjB,KAAKc,KAAK,CAAC,CACPC,WAAY,qBACZC,KAAM,CACFC,MAAOS,KAAKC,UAAUV,WAE1B,GAAGC,MAAK,SAASC,MACjBT,QAAUS,KAGVX,KAAKJ,IAAIM,QAAQS,KAAOT,QAAQS,KAChCX,KAAKJ,IAAIM,QAAQkB,MAAQlB,QAAQkB,UAGzCC,MAAM,MAGfX,MAAK,SAASd,KACbI,KAAKJ,IAAMA"}