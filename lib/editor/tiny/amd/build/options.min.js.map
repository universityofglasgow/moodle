{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Option helper for TinyMCE Editor Manager.\n *\n * @module editor_tiny/options\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst optionContextId = 'moodle:contextid';\nconst optionDraftItemId = 'moodle:draftitemid';\nconst filePickers = 'moodle:filepickers';\nconst optionsMoodleLang = 'moodle:language';\nconst currentLanguage = 'moodle:currentLanguage';\nconst optionPlaceholderSelectors = 'moodle:placeholderSelectors';\nconst nestedMenu = 'moodle:nestedmenu';\n\nexport const register = (editor, options) => {\n    const registerOption = editor.options.register;\n    const setOption = editor.options.set;\n\n    registerOption(optionContextId, {\n        processor: 'number',\n        \"default\": 0,\n    });\n    setOption(optionContextId, options.context);\n\n    registerOption(filePickers, {\n        processor: 'object',\n        \"default\": {},\n    });\n    setOption(filePickers, options.filepicker);\n\n    registerOption(optionDraftItemId, {\n        processor: 'number',\n        \"default\": 0,\n    });\n    setOption(optionDraftItemId, options.draftitemid);\n\n    registerOption(currentLanguage, {\n        processor: 'string',\n        \"default\": 'en',\n    });\n    setOption(currentLanguage, options.currentLanguage);\n\n    // This is primarily used by the media plugin, but it may be re-used elsewhere so is included here as it is large.\n    registerOption(optionsMoodleLang, {\n        processor: 'object',\n        \"default\": {},\n    });\n    setOption(optionsMoodleLang, options.language);\n\n    registerOption(optionPlaceholderSelectors, {\n        processor: 'array',\n        \"default\": [],\n    });\n    setOption(optionPlaceholderSelectors, options.placeholderSelectors);\n\n    registerOption(nestedMenu, {\n        processor: 'boolean',\n        \"default\": false,\n    });\n    setOption(nestedMenu, options.nestedmenu);\n};\n\nexport const getContextId = (editor) => editor.options.get(optionContextId);\nexport const getDraftItemId = (editor) => editor.options.get(optionDraftItemId);\nexport const getFilepickers = (editor) => editor.options.get(filePickers);\nexport const getFilePicker = (editor, type) => getFilepickers(editor)[type];\nexport const getMoodleLang = (editor) => editor.options.get(optionsMoodleLang);\nexport const getCurrentLanguage = (editor) => editor.options.get(currentLanguage);\nexport const getNestedMenu = (editor) => editor.options.get(nestedMenu);\n\n/**\n * Get a set of namespaced options for all defined plugins.\n *\n * @param {object} options\n * @returns {object}\n */\nexport const getInitialPluginConfiguration = (options) => {\n    const config = {};\n\n    Object.entries(options.plugins).forEach(([pluginName, pluginConfig]) => {\n        const values = Object.entries(pluginConfig.config ?? {});\n        values.forEach(([optionName, value]) => {\n            config[getPluginOptionName(pluginName, optionName)] = value;\n        });\n    });\n\n    return config;\n};\n\n/**\n * Get the namespaced option name for a plugin.\n *\n * @param {string} pluginName\n * @param {string} optionName\n * @returns {string}\n */\nexport const getPluginOptionName = (pluginName, optionName) => `${pluginName}:${optionName}`;\n\n/**\n * Get the placeholder selectors.\n *\n * @param {TinyMCE} editor\n * @returns {array}\n */\nexport const getPlaceholderSelectors = (editor) => editor.options.get(optionPlaceholderSelectors);\n\n/**\n * Register placeholder selectos.\n *\n * @param {TinyMCE} editor\n * @param {array} selectors\n */\nexport const registerPlaceholderSelectors = (editor, selectors) => {\n    if (selectors.length) {\n        let existingData = getPlaceholderSelectors(editor);\n        existingData = existingData.concat(selectors);\n        editor.options.set(optionPlaceholderSelectors, existingData);\n    }\n};\n"],"names":["_exports","register","editor","options","registerOption","setOption","set","processor","default","context","filepicker","draftitemid","currentLanguage","language","placeholderSelectors","nestedmenu","getContextId","get","getDraftItemId","getFilepickers","getFilePicker","type","getMoodleLang","getCurrentLanguage","getNestedMenu","getInitialPluginConfiguration","config","Object","entries","plugins","forEach","_ref","_pluginConfig$config","pluginName","pluginConfig","_ref2","optionName","value","getPluginOptionName","concat","getPlaceholderSelectors","registerPlaceholderSelectors","selectors","length","existingData"],"mappings":"gcA6EEA,SAAAC,SA9CsBA,CAACC,OAAQC,WAC7B,MAAMC,eAAiBF,OAAOC,QAAQF,SAChCI,UAAYH,OAAOC,QAAQG,IAEjCF,eAZoB,mBAYY,CAC5BG,UAAW,SACXC,QAAW,IAEfH,UAhBoB,mBAgBOF,QAAQM,SAEnCL,eAhBgB,qBAgBY,CACxBG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UApBgB,qBAoBOF,QAAQO,YAE/BN,eAvBsB,qBAuBY,CAC9BG,UAAW,SACXC,QAAW,IAEfH,UA3BsB,qBA2BOF,QAAQQ,aAErCP,eA1BoB,yBA0BY,CAC5BG,UAAW,SACXC,QAAW,OAEfH,UA9BoB,yBA8BOF,QAAQS,iBAGnCR,eAlCsB,kBAkCY,CAC9BG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UAtCsB,kBAsCOF,QAAQU,UAErCT,eAtC+B,8BAsCY,CACvCG,UAAW,QACXC,QAAW,KAEfH,UA1C+B,8BA0COF,QAAQW,sBAE9CV,eA3Ce,oBA2CY,CACvBG,UAAW,UACXC,SAAW,IAEfH,UA/Ce,oBA+COF,QAAQY,WAAW,EAG+Bf,SAAAgB,aAA/Cd,QAAWA,OAAOC,QAAQc,IAxD/B,oBAyDwDjB,SAAAkB,eAAjDhB,QAAWA,OAAOC,QAAQc,IAxD/B,sBAyDnB,MAAME,eAAkBjB,QAAWA,OAAOC,QAAQc,IAxDrC,sBAwDsDjB,SAAAmB,eAAAA,eACEnB,SAAAoB,cAA/CA,CAAClB,OAAQmB,OAASF,eAAejB,QAAQmB,MACSrB,SAAAsB,cAAjDpB,QAAWA,OAAOC,QAAQc,IAzD9B,mBA0DwDjB,SAAAuB,mBAA/CrB,QAAWA,OAAOC,QAAQc,IAzDrC,0BA0DgDjB,SAAAwB,cAA1CtB,QAAWA,OAAOC,QAAQc,IAxDrC,qBA2EjBjB,SAAAyB,8BAX4CtB,UAC1C,MAAMuB,OAAS,CAAA,EASf,OAPAC,OAAOC,QAAQzB,QAAQ0B,SAASC,SAAQC,OAAgC,IAAAC,qBAAA,IAA9BC,WAAYC,cAAaH,KAChDJ,OAAOC,gBAAOI,qBAACE,aAAaR,cAAM,IAAAM,qBAAAA,qBAAI,CAAE,GAChDF,SAAQK,QAAyB,IAAvBC,WAAYC,OAAMF,MAC/BT,OAAOY,oBAAoBL,WAAYG,aAAeC,KAAK,GAC7D,IAGCX,MAAM,EAUV,MAAMY,oBAAsBA,CAACL,WAAYG,aAAU,GAAAG,OAAQN,WAAU,KAAAM,OAAIH,YAAapC,SAAAsC,oBAAAA,oBAQtF,MAAME,wBAA2BtC,QAAWA,OAAOC,QAAQc,IA7F/B,+BA6F+DjB,SAAAwC,wBAAAA,wBAchGxC,SAAAyC,6BAN0CA,CAACvC,OAAQwC,aACjD,GAAIA,UAAUC,OAAQ,CAClB,IAAIC,aAAeJ,wBAAwBtC,QAC3C0C,aAAeA,aAAaL,OAAOG,WACnCxC,OAAOC,QAAQG,IAzGY,8BAyGoBsC,aACnD,EACF"}