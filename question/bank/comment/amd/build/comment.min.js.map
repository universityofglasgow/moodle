{"version":3,"file":"comment.min.js","sources":["../src/comment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Column selector js.\n *\n * @module    qbank_comment/comment\n * @copyright 2021 Catalyst IT Australia Pty Ltd\n * @author    Safat Shahin <safatshahin@catalyst-au.net>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from 'core/fragment';\nimport * as Str from 'core/str';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\n\n/**\n * Event listeners for the module.\n *\n * @method clickEvent\n * @param {Number} questionId\n * @param {Number} courseID\n * @param {Number} contextId\n */\nconst commentEvent = (questionId, courseID, contextId) => {\n    let args = {\n        questionid: questionId,\n        courseid: courseID\n    };\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: Str.get_string('commentheader', 'qbank_comment'),\n        body: Fragment.loadFragment('qbank_comment', 'question_comment', contextId, args),\n        large: true,\n    }).then((modal) => {\n        let root = modal.getRoot();\n\n        // Don't display the default add comment link in the modal.\n        root.on(ModalEvents.bodyRendered, function() {\n            const submitlink = document.querySelectorAll(\"div.comment-area a\")[0];\n            submitlink.style.display = 'none';\n        });\n\n        // Version selection event.\n        root.on('change', '#question_comment_version_dropdown', function(e) {\n            args.questionid = e.target.value;\n            modal.setBody(Fragment.loadFragment('qbank_comment', 'question_comment', contextId, args));\n        });\n\n        // Get the required strings and updated the modal button text labels.\n        Str.get_strings([\n            {key: 'addcomment', component: 'qbank_comment'},\n            {key: 'close', component: 'qbank_comment'},\n        ]).then((strings) => {\n            modal.setButtonText('save', strings[0]);\n            modal.setButtonText('cancel', strings[1]);\n            return;\n        }).fail(Notification.exception);\n\n        root.on(ModalEvents.cancel, function() {\n            location.reload();\n            modal.hide();\n        });\n\n        // Handle adding the comment when the button in the modal is clicked.\n        root.on(ModalEvents.save, function(e) {\n            e.preventDefault();\n            const submitlink = document.querySelectorAll(\"div.comment-area a\")[0];\n            const textarea = document.querySelectorAll(\"div.comment-area textarea\")[0];\n\n            // Check there is a valid comment to add, and trigger adding if there is.\n            if (textarea.value != textarea.getAttribute('aria-label') && textarea.value != '') {\n                submitlink.click();\n            }\n\n        });\n        root.on('click', 'button[data-action=\"hide\"]', () => {\n            location.reload();\n            modal.hide();\n        });\n        modal.show();\n        return modal;\n    }).fail(Notification.exception);\n};\n\n/**\n * Entrypoint of the js.\n *\n * @method init\n * @param {string} questionSelector the question comment identifier.\n */\nexport const init = (questionSelector) => {\n    const target = document.querySelector(questionSelector);\n    target.addEventListener('click', () => {\n        // Call for the event listener to listed for clicks in any comment count row.\n        commentEvent(target.dataset.questionid, target.dataset.courseid, target.dataset.contextid);\n    });\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_fragment","Str","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_modal_events","_modal_factory","_notification","_exports","init","questionSelector","target","document","querySelector","addEventListener","commentEvent","questionId","courseID","contextId","args","questionid","courseid","ModalFactory","create","type","types","SAVE_CANCEL","title","get_string","body","Fragment","loadFragment","large","then","modal","root","getRoot","on","ModalEvents","bodyRendered","querySelectorAll","style","display","e","value","setBody","get_strings","component","strings","setButtonText","fail","Notification","exception","cancel","location","reload","hide","save","preventDefault","submitlink","textarea","getAttribute","click","show","dataset","contextid"],"mappings":"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"}