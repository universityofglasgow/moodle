{"version":3,"file":"columns.min.js","sources":["../../../src/local/editor/columns.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder columns editor\n *\n * @module      core_reportbuilder/local/editor/columns\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {publish} from 'core/pubsub';\nimport SortableList from 'core/sortable_list';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addColumn, deleteColumn, reorderColumn} from 'core_reportbuilder/local/repository/columns';\nimport {getColumnSorting} from 'core_reportbuilder/local/repository/sorting';\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'columnadded',\n        'columnaggregated',\n        'columndeleted',\n        'columnmoved',\n        'deletecolumn',\n        'deletecolumnconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    if (initialized) {\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Add column to report.\n        const reportAddColumn = event.target.closest(reportSelectors.actions.reportAddColumn);\n        if (reportAddColumn) {\n            event.preventDefault();\n\n            const pendingPromise = new Pending('core_reportbuilder/columns:add');\n            const reportElement = reportAddColumn.closest(reportSelectors.regions.report);\n\n            addColumn(reportElement.dataset.reportId, reportAddColumn.dataset.uniqueIdentifier)\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => getString('columnadded', 'core_reportbuilder', reportAddColumn.dataset.name))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Remove column from report.\n        const reportRemoveColumn = event.target.closest(reportSelectors.actions.reportRemoveColumn);\n        if (reportRemoveColumn) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveColumn.closest(reportSelectors.regions.report);\n            const columnHeader = reportRemoveColumn.closest(reportSelectors.regions.columnHeader);\n            const columnName = columnHeader.dataset.columnName;\n\n            Notification.saveCancelPromise(\n                getString('deletecolumn', 'core_reportbuilder', columnName),\n                getString('deletecolumnconfirm', 'core_reportbuilder', columnName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveColumn}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/columns:remove');\n\n                return deleteColumn(reportElement.dataset.reportId, columnHeader.dataset.columnId)\n                    .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                    .then(() => addToast(getString('columndeleted', 'core_reportbuilder', columnName)))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle column moving (note JQuery dependency, see MDL-72293 for resolution).\n    var columnSortableList = new SortableList(`${reportSelectors.regions.reportTable} thead tr`, {isHorizontal: true});\n    columnSortableList.getElementName = element => Promise.resolve(element.data('columnName'));\n\n    $(document).on(SortableList.EVENTS.DRAG, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        const reportElement = event.target.closest(reportSelectors.regions.report);\n        const columnPosition = info.element.data('columnPosition');\n        const targetColumnPosition = info.targetNextElement.data('columnPosition');\n\n        $(reportElement).find('tbody tr').each(function() {\n            const cell = $(this).children(`td.c${columnPosition - 1}`)[0];\n            if (targetColumnPosition) {\n                var beforeCell = $(this).children(`td.c${targetColumnPosition - 1}`)[0];\n                this.insertBefore(cell, beforeCell);\n            } else {\n                this.appendChild(cell);\n            }\n        });\n    });\n\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const columnId = info.element.data('columnId');\n            const columnName = info.element.data('columnName');\n            const columnPosition = info.element.data('columnPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetColumnPosition = info.targetNextElement.data('columnPosition') || info.element.siblings().length + 2;\n            if (targetColumnPosition > columnPosition) {\n                targetColumnPosition--;\n            }\n\n            reorderColumn(reportElement.dataset.reportId, columnId, targetColumnPosition)\n                .then(() => getString('columnmoved', 'core_reportbuilder', columnName))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n\n    // Initialize inplace editable listeners for column aggregation.\n    document.addEventListener(inplaceEditableEvents.elementUpdated, event => {\n\n        const columnAggregation = event.target.closest('[data-itemtype=\"columnaggregation\"]');\n        if (columnAggregation) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:aggregate');\n            const reportElement = columnAggregation.closest(reportSelectors.regions.report);\n            const columnHeader = columnAggregation.closest(reportSelectors.regions.columnHeader);\n\n            getString('columnaggregated', 'core_reportbuilder', columnHeader.dataset.columnName)\n                .then(addToast)\n                .then(() => {\n                    // Pass preserveTriggerElement parameter so columnAggregationLink will be focused after the report reload.\n                    const columnAggregationLink = `[data-itemtype=\"columnaggregation\"][data-itemid=\"`\n                        + `${columnAggregation.dataset.itemid}\"] > a`;\n\n                    // Now reload the table, and notify listeners that columns have been updated.\n                    dispatchEvent(reportEvents.tableReload, {preserveTriggerElement: columnAggregationLink}, reportElement);\n                    return getColumnSorting(reportElement.dataset.reportId);\n                })\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_exports","value","init","_jquery","_notification","_pending","_sortable_list","reportEvents","reportSelectors","initialized","prefetchStrings","document","addEventListener","event","reportAddColumn","target","closest","actions","preventDefault","pendingPromise","Pending","reportElement","regions","report","addColumn","dataset","reportId","uniqueIdentifier","then","data","publish","reportColumnsUpdated","getString","name","addToast","dispatchEvent","tableReload","preservePagination","resolve","catch","Notification","exception","reportRemoveColumn","columnHeader","columnName","saveCancelPromise","get_string","triggerElement","deleteColumn","columnId","SortableList","concat","reportTable","isHorizontal","getElementName","element","Promise","$","on","EVENTS","DRAG","info","columnPosition","targetColumnPosition","targetNextElement","find","each","cell","this","children","beforeCell","insertBefore","appendChild","DROP","positionChanged","siblings","length","reorderColumn","add","inplaceEditableEvents","elementUpdated","columnAggregation","columnAggregationLink","itemid","preserveTriggerElement","getColumnSorting"],"mappings":"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"}