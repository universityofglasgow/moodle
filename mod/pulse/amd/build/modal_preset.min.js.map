{"version":3,"sources":["../src/modal_preset.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","PresetEvents","registered","SELECTORS","SAVE_BUTTON","CUSTOMIZE_BUTTON","CANCEL_BUTTON","ModalPreset","root","call","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","formData","registerEventListeners","getModal","on","events","activate","event","data","document","querySelectorAll","forEach","form","importmethod","value","addEventListener","e","preventDefault","click","approveEvent","Event","save","getRoot","trigger","isDefaultPrevented","destroy","originalEvent","bind","customizeEvent","customize","register"],"mappings":"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","sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry', 'mod_pulse/events'],\n        function($, Notification, CustomEvents, Modal, ModalRegistry, PresetEvents) {\n\n    var registered = false;\n    var SELECTORS = {\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        CUSTOMIZE_BUTTON: '[data-action=\"customize\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalPreset = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\n            Notification.exception({message: 'No \"Apply and save\" button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CUSTOMIZE_BUTTON).length) {\n            Notification.exception({message: 'No \"Apply and customize\" button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    };\n\n    ModalPreset.TYPE = 'PresetModal';\n    ModalPreset.prototype = Object.create(Modal.prototype);\n    ModalPreset.prototype.constructor = ModalPreset;\n    ModalPreset.prototype.formData = '';\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalPreset.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(event, data) {\n            // Load the backupfile.\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\n                form.importmethod.value = 'save';\n                form.addEventListener('submit', function(e) {\n                    e.preventDefault();\n                });\n            });\n            document.querySelectorAll('.preset-config-params [data-fieldtype=\"submit\"] input')[0].click();\n\n            var approveEvent = $.Event(PresetEvents.save);\n            this.getRoot().trigger(approveEvent, this);\n\n            if (!approveEvent.isDefaultPrevented()) {\n                this.destroy();\n                data.originalEvent.preventDefault();\n            }\n            event.preventDefault();\n        }.bind(this));\n\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CUSTOMIZE_BUTTON, function(event, data) {\n            // Add your logic for when the login button is clicked. This could include the form validation,\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\n                form.importmethod.value = 'customize';\n            });\n\n            var customizeEvent = $.Event(PresetEvents.customize);\n            this.getRoot().trigger(customizeEvent, this);\n\n            if (!customizeEvent.isDefaultPrevented()) {\n                data.originalEvent.preventDefault();\n            }\n            event.preventDefault();\n\n        }.bind(this));\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\n            this.destroy();\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalPreset.TYPE, ModalPreset, 'mod_pulse/modal_preset');\n        registered = true;\n    }\n\n    return ModalPreset;\n});"],"file":"modal_preset.min.js"}