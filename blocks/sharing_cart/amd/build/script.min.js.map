{"version":3,"file":"script.min.js","sources":["../src/script.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *  Sharing Cart\n *\n *  @package    block_sharing_cart\n *  @copyright  2017 (C) VERSION2, INC.\n *  @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\n/**\n * @param {string} addMethod\n */\nexport const init = function(addMethod) {\n    $(document).ready(function() {\n        let isDragging = false;\n\n        /**\n         *  Returns a localized string\n         *\n         *  @param {String} identifier\n         *  @return {String}\n         */\n        function str(identifier) {\n            return M.str.block_sharing_cart[identifier] || M.str.moodle[identifier];\n        }\n\n        /**\n         *  Get an action URL\n         *\n         *  @param {String} name   The action name\n         *  @param {Object} [args] The action parameters\n         *  @return {String}\n         */\n        function get_action_url(name, args) {\n            let url = M.cfg.wwwroot + '/blocks/sharing_cart/' + name + '.php';\n            if (args) {\n                const q = [];\n                for (let k in args) {\n                    q.push(k + '=' + encodeURIComponent(args[k]));\n                }\n                url += '?' + q.join('&');\n            }\n            return url;\n        }\n\n        /**\n         *  Shake the basket to indicate cancel/submit\n         */\n        function shake_basket() {\n            if (addMethod === 'drag_and_drop') {\n                const sharingCartBasket = document.querySelector('button.sharing_cart_basket');\n                sharingCartBasket?.classList.add('shake_basket');\n            }\n        }\n\n        /**\n         *  Remove the shake effect and basket icon\n         */\n        function remove_basket() {\n            if (addMethod === 'drag_and_drop' && !isDragging) {\n                const footer = document.getElementById('page-footer');\n                const footerIconContainer = footer.querySelector('div[data-region=\"footer-container-popover\"]');\n                const sharingCartBasket = document.querySelector('button.sharing_cart_basket');\n\n                if (sharingCartBasket) {\n                    footerIconContainer?.removeChild(sharingCartBasket);\n                    sharingCartBasket.classList.remove('shake_basket');\n                }\n            }\n        }\n\n        /**\n         * Modal called when confirming an action.\n         *\n         * @param obj\n         */\n        function confirm_modal(obj) {\n\n            // Checkbox for copying userdata confirmation.\n            if (obj.checkbox) {\n                obj.body +=\n                    '<div class=\"modal-checbox-wrapper modal-sharing_cart\">' +\n                    '<div class=\"form-check\">' +\n                    '<input type=\"checkbox\" id=\"modal-userdata-checkbox\" class=\"form-check-input\">' +\n                    '<label for=\"modal-userdata-checkbox\" class=\"form-check-label\">' + str('modal_checkbox') + '</label>' +\n                    '</div>' +\n                    '<div class=\"form-check\">' +\n                    '<input type=\"checkbox\" id=\"modal-anonymize-checkbox\" class=\"form-check-input\" disabled>' +\n                    '<label for=\"modal-anonymize-checkbox\" class=\"form-check-label\">' + str('modal_checkbox_anonymize') + '</label>' +\n                    '</div>' +\n                    '</div>';\n            }\n\n\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: obj.title,\n                body: obj.body,\n            }).done(function(modal) {\n                let is_submitted = false;\n                modal.setSaveButtonText(obj.save_button);\n\n                const userdata_checkbox = $(modal.getRoot()).find('#modal-userdata-checkbox');\n                const anonymize_checkbox = $(modal.getRoot()).find('#modal-anonymize-checkbox');\n\n                userdata_checkbox.on('change', (e) => {\n                    if (e.currentTarget.checked) {\n                        anonymize_checkbox.attr('disabled', null);\n                    } else {\n                        anonymize_checkbox.prop('checked', false).attr('disabled', true);\n                    }\n                });\n\n                // On save save check - if checkbox is checked.\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    const response = {\n                        'userdata': userdata_checkbox.is(':checked'),\n                        'anonymize': anonymize_checkbox.is(':checked'),\n                    };\n\n                    obj.next(response);\n                    is_submitted = true;\n                });\n\n                modal.getRoot().on(ModalEvents.cancel, function() {\n                    remove_basket();\n                });\n\n                // Remove modal from html.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    $('body').removeClass('modal-open');\n\n                    if (!is_submitted) {\n                        remove_basket();\n                    }\n                });\n\n                modal.show();\n            });\n        }\n\n        /**\n         * Get the section name from the section when\n         * it's changed with the in place editor\n         *\n         * @param $section\n         * @returns {*}\n         */\n        function in_place_edit_section_name($section) {\n            let sectionName = '';\n            const $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable');\n            if ($inPlaceEditable.length) {\n                sectionName = $inPlaceEditable.data('value');\n            }\n            return sectionName;\n        }\n\n        /**\n         * @param post_data\n         * @param title_str\n         * @param body_str\n         * @param isSection\n         */\n        function on_backup_modal(post_data, title_str, body_str, isSection) {\n            (function(on_success) {\n                $.post(get_action_url('rest'), post_data,\n                    function(response) {\n                        on_success(response);\n                    }, \"text\")\n                    .fail(function(response) {\n                        show_error(response);\n                    });\n            })(function(response) {\n                const copyable = response === '1';\n                let checkbox = false;\n\n                if (copyable) {\n                    checkbox = true;\n                }\n\n                confirm_modal({\n                    'title': title_str,\n                    'body': body_str,\n                    'save_button': str('modal_confirm_backup'),\n                    'checkbox': checkbox,\n                    'next': function(data) {\n                        if (isSection === true) {\n                            backup_section(post_data.sectionid, post_data.sectionnumber, post_data.courseid, data.userdata, data.anonymize);\n                        } else {\n                            backup(post_data.cmid, data.userdata, data.anonymize);\n                        }\n\n                        shake_basket();\n                    }\n                });\n            });\n        }\n\n        /** @var {Object}  The icon configurations */\n        const icon = {\n            // Actions\n            'backup': {\n                css: 'editing_backup',\n                iconClass: 'fa fa-frown-o',\n            },\n            'movedir': {\n                css: 'editing_right',\n                iconClass: 'fa fa-arrow-right',\n            },\n            'move': {\n                css: 'editing_move_',\n                iconClass: 'fa fa-arrows-v',\n            },\n            'edit': {\n                css: 'editing_update',\n                iconClass: 'fa fa-pencil',\n            },\n            'cancel': {\n                css: 'editing_cancel',\n                iconClass: 'fa fa-ban',\n            },\n            'delete': {\n                css: 'editing_update',\n                iconClass: 'fa fa-trash',\n            },\n            'restore': {\n                css: 'editing_restore',\n                iconClass: 'fa fa-clone',\n            },\n            // Directories\n            'dir-open': {\n                iconClass: 'fa fa-folder-open-o'\n            },\n            'dir-closed': {\n                iconClass: 'fa fa-folder-o'\n            },\n        };\n\n        /** @var {Node}  The Sharing Cart block container node */\n        const $block = $('.block_sharing_cart');\n\n        /** @var {Object}  The current course */\n        const course = new function () {\n            const body = $('body');\n            this.id = body.attr('class').match(/course-(\\d+)/)[1];\n            this.is_frontpage = body.hasClass('pagelayout-frontpage');\n        }();\n\n        /**\n         *  Shows an error message with given Ajax error\n         *\n         *  @param {Object} response  The Ajax response\n         */\n        function show_error(response) {\n            try {\n                const ex = JSON.parse(response.responseText);\n                new M.core.exception({\n                    name: str('pluginname') + ' - ' + str('error'),\n                    message: ex.message\n                });\n            } catch (e) {\n                new M.core.exception({\n                    name: str('pluginname') + ' - ' + str('error'),\n                    message: response.responseText\n                });\n            }\n        }\n\n        /**\n         *  Check special layout (theme boost)\n         *\n         *  @return {Boolean}\n         */\n        function verify_layout() {\n            const menuelement = $block.find('.menubar .dropdown .dropdown-menu');\n            return (menuelement.length);\n        }\n\n        /**\n         * Set Cookie\n         * @param name\n         * @param value\n         * @param expireTimeInMillisecond\n         */\n        function setCookie(name, value, expireTimeInMillisecond) {\n            const d = new Date();\n            d.setTime(d.getTime() + expireTimeInMillisecond);\n            const expires = 'expires=' + d.toUTCString();\n            document.cookie = name + '=' + value + ';' + expires + '';\n        }\n\n        /**\n         * Get Cookie Value\n         * @param param\n         * @returns {*}\n         */\n        function getCookieValue(param) {\n            const readCookie = document.cookie.match('(^|;)\\\\s*' + param + '\\\\s*=\\\\s*([^;]+)');\n            return readCookie ? readCookie.pop() : '';\n        }\n\n        /**\n         * Create a command icon\n         *\n         *  @param {String} name  The command name, predefined in icon\n         *  @param {String} [pix] The icon pix name to override\n         */\n        function create_command(name) {\n            const iconElement = $('<i/>')\n                .attr('alt', str(name))\n                .attr('class', icon[name].iconClass);\n            // If (verify_layout()) {\n            //     iconElement.addClass('iconcustom');\n            // }\n\n            return $('<a href=\"javascript:void(0)\"/>')\n                .addClass(icon[name].css)\n                .attr('title', str(name))\n                .append(iconElement);\n        }\n\n        /**\n         * Create a spinner\n         * @param $node\n         * @returns {*|jQuery}\n         */\n        function add_spinner() {\n            const $spinner = ($('<div class=\"block_spinner\"><i class=\"fa fa-shopping-basket sharing_cart_basket shake_basket fa-2x\"></i></div>'));\n            $('section.block_sharing_cart').append($spinner);\n            return $spinner;\n        }\n\n        /**\n         *\n         * @param $node\n         * @returns {jQuery.fn.init}\n         */\n        function add_node_spinner($node) {\n            const $node_spinner = $('<i class=\"fa fa-circle-o-notch fa-spin node_spinner node_spinner-sharing_cart\"></i>');\n            $node.append($node_spinner);\n            return $node_spinner;\n        }\n\n        $(document).on('click', 'a.restore', function() {\n            add_spinner();\n        });\n\n        /**\n         *\n         *  Reload the Sharing Cart item tree\n         */\n        function reload_tree() {\n            $.post(get_action_url(\"rest\"),\n                {\n                    \"action\": \"render_tree\",\n                    \"courseid\": course.id\n                },\n                function(response) {\n                    $block.find(\".tree\").replaceWith($(response));\n                    $.init_item_tree();\n                }, \"html\")\n                .fail(function(response) {\n                    show_error(response);\n                });\n        }\n\n        /**\n         *  Backup an activity\n         *\n         *  @param {int} cmid\n         *  @param {Boolean} userdata\n         *  @param {Boolean} anonymize\n         */\n        function backup(cmid, userdata, anonymize) {\n            let $commands = $('#module-' + cmid + ' .actions');\n            if (!$commands.length) {\n                $commands = $('[data-owner=\"#module-' + cmid + '\"]');\n            }\n\n            const $spinner = add_spinner();\n            const $node_spinner = add_node_spinner($commands);\n\n            $.post(get_action_url(\"rest\"),\n                {\n                    \"action\": \"backup\",\n                    \"cmid\": cmid,\n                    \"userdata\": userdata,\n                    \"anonymize\": anonymize,\n                    \"sesskey\": M.cfg.sesskey,\n                    \"courseid\": course.id\n                },\n                function() {\n                    reload_tree();\n                })\n                .fail(function(response) {\n                    show_error(response);\n                })\n                .always(function() {\n                    $node_spinner.hide();\n                    $spinner.hide();\n                    remove_basket();\n                });\n        }\n\n        /**\n         *  Backup an activities in a section\n         *\n         *  @param {int} sectionId\n         *  @param {int} sectionNumber\n         *  @param {int} courseId\n         *  @param {Boolean} userdata\n         *  @param {Boolean} anonymize\n         */\n        function backup_section(sectionId, sectionNumber, courseId, userdata, anonymize) {\n            const $commands = $('span.inplaceeditable[data-itemtype=sectionname][data-itemid=' + sectionId + ']');\n            const $section = $commands.closest(\"li.section.main\");\n            let sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n            if (sectionName === null) {\n                sectionName = String($('#region-main .section_action_menu[data-sectionid=\\'' + sectionId + '\\']')\n                    .parent().parent().find('h3.sectionname').text());\n            }\n\n            const inPlaceEditSectionName = in_place_edit_section_name($section);\n            sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n\n            const $spinner = add_spinner();\n            const $node_spinner = add_node_spinner($commands);\n\n            $.post(get_action_url(\"rest\"),\n                {\n                    \"action\": \"backup_section\",\n                    \"sectionid\": sectionId,\n                    \"sectionnumber\": sectionNumber,\n                    \"courseid\": courseId,\n                    \"sectionname\": sectionName,\n                    \"userdata\": userdata,\n                    \"anonymize\": anonymize,\n                    \"sesskey\": M.cfg.sesskey\n                },\n                function() {\n                    reload_tree();\n                })\n                .fail(function(response) {\n                    show_error(response);\n                })\n                .always(function() {\n                    $spinner.hide();\n                    $node_spinner.hide();\n                    remove_basket();\n                });\n        }\n\n\n        // /////// CLASSES /////////\n\n        /**\n         *  @class Directory states manager\n         */\n        const directories = new function () {\n            const KEY = 'block_sharing_cart-dirs';\n\n            let opens = getCookieValue(KEY).split(',').map(function (v) {\n                return parseInt(v);\n            });\n\n            function save() {\n                const expires = new Date();\n                expires.setDate(expires.getDate() + 30);\n                setCookie(KEY, opens.join(','), expires);\n            }\n\n            function open($dir, visible) {\n                const iconIndex = visible ? 'dir-open' : 'dir-closed';\n                const iconElement = icon[iconIndex].iconClass;\n                $dir.find('> div i.icon').attr('class', 'icon ' + iconElement);\n                $dir.find('> ul.list')[visible ? 'show' : 'hide']();\n            }\n\n            function toggle(e) {\n                const $dir = $(e.target).closest('li.directory');\n                const i = $dir.attr('id').match(/(\\d+)$/)[1];\n                const v = $dir.find('> ul.list').css('display') === 'none';\n\n                open($dir, v);\n                opens[i] = v ? 1 : 0;\n                save();\n            }\n\n            /**\n             *  Initialize directory states\n             */\n            this.init = function () {\n                let i = 0;\n                $block.find('li.directory').each(function (index, dir) {\n                    const $dir = $(dir);\n                    $dir.attr('id', 'block_sharing_cart-dir-' + i);\n                    if (i >= opens.length) {\n                        opens.push(0);\n                    } else if (opens[i]) {\n                        open($dir, true);\n                    }\n                    $dir.find('> div div.toggle-wrapper').css('cursor', 'pointer').on('click', function (e) {\n                        toggle(e);\n                    });\n                    i++;\n                });\n            };\n\n            /**\n             *  Reset directory states\n             */\n            this.reset = function () {\n                opens = [];\n                this.init();\n                save();\n            };\n        }();\n\n        /**\n         *  @class Targets for moving an item directory\n         */\n        const move_targets = new function () {\n            let $cancel = null,\n                targets = [];\n\n            /**\n             *  Hide move targets\n             */\n            this.hide = function () {\n                if ($cancel !== null) {\n                    const $commands = $cancel.closest('.commands');\n                    $cancel.remove();\n                    $cancel = null;\n                    $commands.closest('li.activity').css('opacity', 1.0);\n                    $commands.find('a').each(function () {\n                        $(this).show();\n                    });\n                    $.each(targets, function (index, $target) {\n                        $target.remove();\n                    });\n                    targets = [];\n                }\n            };\n\n            /**\n             *  Show move targets for a given item\n             *\n             *  @param {int} id  The item ID\n             */\n            this.show = function (item_id) {\n                this.hide();\n\n                function move(e) {\n\n                    const m = $(e.target).closest('a').attr('class').match(/move-(\\d+)-to-(\\d+)/);\n                    const item_id = m[1],\n                        area_to = m[2];\n\n                    const $spinner = add_spinner();\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"move\",\n                            \"item_id\": item_id,\n                            \"area_to\": area_to,\n                            \"sesskey\": M.cfg.sesskey\n                        },\n                        function () {\n                            reload_tree();\n                        })\n                        .fail(function (response) {\n                            show_error(response);\n                        })\n                        .always(function () {\n                            $spinner.hide();\n                        });\n                }\n\n                const $current = $block.find('#block_sharing_cart-item-' + item_id);\n                const $next = $current.next();\n                const $list = $current.closest('ul');\n\n                let next_id = 0;\n                if ($next.length) {\n                    next_id = $next.attr('id').match(/item-(\\d+)$/)[1];\n                }\n\n                /**\n                 *\n                 * @param item_id\n                 * @param area_to\n                 * @returns {jQuery}\n                 */\n                function create_target(item_id, area_to) {\n                    const $anchor = $('<a href=\"javascript:void(0)\"/>')\n                        .addClass('move-' + item_id + '-to-' + area_to)\n                        .attr('title', str('movehere'))\n                        .append(\n                            $('<p>' + str('clicktomove') + '</p>')\n                                .attr('alt', str('movehere'))\n                        );\n\n                    const $target = $('<li class=\"activity move-to\"/>')\n                        .append($anchor);\n                    $anchor.on('click', function (e) {\n                        move(e);\n                    });\n\n                    return $target;\n                }\n\n                $list.find('> li.activity').each(function (index, item) {\n                    const $item = $(item);\n                    const to = $item.attr('id').match(/item-(\\d+)$/)[1];\n                    if (to === item_id) {\n                        $cancel = create_command('cancel', 't/left');\n                        $cancel.on('click', function () {\n                            move_targets.hide();\n                        });\n                        const $commands = $item.find('.commands');\n                        $commands.find('a').each(function () {\n                            $(this).hide();\n                        });\n                        $commands.append($cancel);\n                        $item.css('opacity', 0.5);\n                    } else if (to !== next_id) {\n                        const $target = create_target(item_id, to);\n                        $item.before($target);\n                        targets.push($target);\n                    }\n                }, this);\n\n                if ($next) {\n                    var $target = create_target(item_id, 0);\n                    $list.append($target);\n                    targets.push($target);\n                }\n            };\n        }();\n\n        /**\n         *  @class Targets for restoring an item\n         */\n        const restore_targets = new function () {\n            this.is_directory = null;\n            let $clipboard = null,\n                targets = [];\n\n            /**\n             *\n             * @param id\n             * @param section\n             * @returns {jQuery}\n             */\n\n            function create_target(id, section) {\n                const href = get_action_url('restore', {\n                    'directory': (restore_targets.is_directory === true),\n                    'target': id,\n                    'course': course.id,\n                    'section': section,\n                    'in_section': $('#copy-section-form').data('in-section'),\n                    'sesskey': M.cfg.sesskey,\n                    'returnurl': document.URL,\n                });\n\n                let $target = $('<a/>').attr('href', href).attr('title', str('copyhere')).append(\n                    $('<img class=\"move_target\"/>').attr('alt', str('copyhere')).attr('src', M.util.image_url('dropzone_arrow', 'block_sharing_cart'))\n                );\n\n                targets.push($target);\n\n                return $target;\n            }\n\n            /**\n             *  Hide restore targets\n             */\n            this.hide = function () {\n                if ($clipboard !== null) {\n                    $clipboard.remove();\n                    $clipboard = null;\n                    $.each(targets, function (index, $target) {\n                        $target.remove();\n                    });\n                    targets = [];\n                }\n            };\n\n            /**\n             *\n             *\n             *  @param {int} id  The item ID\n             */\n            this.show = function (id) {\n                this.hide();\n\n                let $view = $(\"<span/>\");\n\n                if (this.is_directory) {\n                    $view.html(id).css('display', 'inline');\n                    $view.prepend(\n                        $(\"<i/>\").addClass(\"icon\")\n                            .attr(\"alt\", id)\n                        // .attr(\"src\", M.util.image_url(icon['dir-closed'].pix, null))\n                    );\n                } else {\n                    const $item = $block.find('#block_sharing_cart-item-' + id);\n                    $view = $($item.find('div')[0].cloneNode(true)).css('display', 'inline');\n                    $view.attr('class', $view.attr('class').replace(/mod-indent-\\d+/, ''));\n                    $view.find('.commands').remove();\n                }\n\n                const $cancel = create_command('cancel');\n\n                $cancel.on('click', this.hide);\n\n                $clipboard = $('<div class=\"clipboard\"/>');\n                $clipboard.append(str('clipboard') + \": \").append($view).append($cancel);\n\n                if (course.is_frontpage) {\n                    const $sitetopic = $('.sitetopic');\n                    const $mainmenu = $('.block_site_main_menu');\n                    if ($sitetopic) {\n                        $sitetopic.find('*').before($clipboard);\n                    } else if ($mainmenu) {\n                        $mainmenu.find('.content').before($clipboard);\n                    }\n\n                    // Mainmenu = section #0, sitetopic = section #1\n                    if ($mainmenu) {\n                        $mainmenu.find('.footer').before(create_target(id, 0));\n                    }\n                    if ($sitetopic) {\n                        $sitetopic.find('ul.section').append(create_target(id, 1));\n                    }\n                } else {\n                    const $container = $('.course-content');\n                    $container.prepend($clipboard);\n                    $container.find('[data-for=\"section\"]').each(function (index, sectionDOM) {\n                        const $section = $(sectionDOM);\n                        const section = $section.attr('id').match(/(\\d+)$/)[1];\n                        $section.find('ul.section').first().append(create_target(id, section));\n                    }, this);\n                }\n            };\n        }();\n\n        // /////// INITIALIZATION /////////\n\n        /**\n         *\n         * @returns {string|*}\n         */\n        $.get_plugin_name = function() {\n            let $blockheader = $block.find(\"h2\");\n\n            if (!$blockheader.length) {\n                $blockheader = $block.find(\"h3\");\n\n                if ($blockheader.length) {\n                    return $blockheader.html();\n                }\n            } else {\n                return $blockheader.html();\n            }\n\n            return \"\";\n        };\n\n        /**\n         *\n         * @param e\n         * @param activityName\n         * @param {int} cmId\n         */\n        $.on_backup = function(e, activityName, cmId = 0) {\n            if (cmId === 0) {\n                cmId = (function ($backup) {\n                    const $activity = $backup.closest('li.activity');\n                    if ($activity.length) {\n                        return $activity.attr('id').match(/(\\d+)$/)[1];\n                    }\n                    const $commands = $backup.closest('.commands');\n                    const dataowner = $commands.attr('data-owner');\n                    if (dataowner.length) {\n                        return dataowner.match(/(\\d+)$/)[1];\n                    }\n                    return $commands.find('a.editing_delete').attr('href').match(/delete=(\\d+)/)[1];\n                })($(e.target));\n            }\n\n            const data =\n                {\n                    \"action\": \"is_userdata_copyable\",\n                    \"cmid\": cmId\n                };\n\n            on_backup_modal(data, activityName, str('confirm_backup'), false);\n        };\n\n        /**\n         *  On movedir command clicked\n         *\n         *  @param {DOMEventFacade} e\n         */\n        $.on_movedir = function(e) {\n            const $commands = $(e.target).closest('.commands');\n\n            const $current_dir = $commands.closest('li.directory');\n            const current_path = $current_dir.length ? $current_dir.attr('directory-path') : '/';\n\n            const item_id = $(e.target).closest('li.activity').attr('id').match(/(\\d+)$/)[1];\n\n            const dirs = [];\n            $block.find('li.directory').each(function() {\n                dirs.push($(this).attr('directory-path'));\n            });\n\n            const $form = $('<form/>');\n            // eslint-disable-next-line no-script-url\n            $form.attr('action', 'javascript:void(0)');\n\n            function submit() {\n                const folder_to = $form.find('[name=\"to\"]').val();\n                const $spinner = add_spinner();\n                $.post(get_action_url('rest'),\n                    {\n                        \"action\": \"movedir\",\n                        \"item_id\": item_id,\n                        \"folder_to\": folder_to,\n                        \"sesskey\": M.cfg.sesskey\n                    },\n                    function() {\n                        reload_tree();\n                        directories.reset();\n                    })\n                    .fail(function(response) {\n                        show_error(response);\n                    })\n                    .always(function() {\n                        $spinner.hide();\n                    });\n            }\n\n            $form.submit(submit);\n\n            if (dirs.length === 0) {\n                var $input = $('<input class=\"form-control\" type=\"text\" name=\"to\"/>').val(current_path);\n                setTimeout(function() {\n                    $input.focus();\n                }, 1);\n                $form.append($input);\n            } else {\n                dirs.unshift('/');\n\n                const $select = $('<select class=\"custom-select\" name=\"to\"/>');\n                for (let i = 0; i < dirs.length; i++) {\n                    $select.append($('<option/>').val(dirs[i]).append(dirs[i]));\n                }\n                $select.val(current_path);\n                $select.change(submit);\n                $form.append($select);\n\n                const $edit = create_command('edit');\n\n                $edit.on('click', function() {\n                    const $input = $('<input type=\"text\" name=\"to\"/>').val(current_path);\n                    $select.remove();\n                    $edit.replaceWith($input);\n                    $input.focus();\n                });\n\n                $form.append($edit);\n            }\n\n            const $cancel = create_command('cancel');\n            $cancel.on('click', function() {\n                $form.remove();\n                $commands.find('a').show();\n            });\n            $form.append($cancel);\n\n            $commands.find('a').each(function() {\n                $(this).hide();\n            });\n            $commands.append($form);\n        };\n\n        /**\n         *  On move command clicked\n         *\n         *  @param {DOMEventFacade} e\n         */\n        $.on_move = function(e) {\n            const $item = $(e.target).closest('li.activity');\n            const id = $item.attr('id').match(/(\\d+)$/)[1];\n\n            move_targets.show(id);\n        };\n\n        /**\n         *  On delete command clicked\n         *\n         *  @param {DOMEventFacade} e\n         */\n        $.on_delete = function(e) {\n            const $item = $(e.target).closest('li');\n            const liText = $item[0].innerText;\n\n            let isDirectory = false;\n            let modalBody;\n            let item;\n            let description_text = '';\n\n            if ($item.hasClass(\"directory\")) {\n                isDirectory = true;\n                item = str('folder_string');\n                description_text = str('delete_folder');\n            } else {\n                item = str('activity_string');\n            }\n\n            modalBody = '<p class=\"delete-item\">' + item + ' ' + liText + description_text + '</p>';\n\n            confirm_modal({\n                'title': str('confirm_delete'),\n                'body': modalBody,\n                'save_button': str('modal_confirm_delete'),\n                'checkbox': false,\n                'next': function() {\n\n                    let data = {};\n\n                    if (isDirectory === true) {\n                        data = {\n                            \"action\": \"delete_directory\",\n                            \"path\": $item.attr(\"directory-path\"),\n                            \"sesskey\": M.cfg.sesskey\n                        };\n                    } else if ($item.hasClass(\"activity\")) {\n                        data = {\n                            \"action\": \"delete\",\n                            \"id\": $item.attr('id').match(/(\\d+)$/)[1],\n                            \"sesskey\": M.cfg.sesskey\n                        };\n                    }\n\n                    const $spinner = add_spinner();\n\n                    $.post(get_action_url(\"rest\"), data,\n                        function() {\n                            reload_tree();\n                        })\n                        .fail(function(response) {\n                            show_error(response);\n                        })\n                        .always(function() {\n                            $spinner.hide();\n                        });\n\n                    e.stopPropagation();\n                }\n            });\n        };\n\n        /**\n         *  On restore command clicked\n         *\n         *  @param {DOMEventFacade} e\n         */\n        $.on_restore = function(e) {\n            const $item = $(e.target).closest('li');\n            let id = null;\n\n            if ($item.hasClass(\"directory\")) {\n                id = $item.attr(\"directory-path\");\n                restore_targets.is_directory = true;\n            } else if ($item.hasClass(\"activity\")) {\n                id = $item.attr('id').match(/(\\d+)$/)[1];\n                restore_targets.is_directory = false;\n            }\n\n            restore_targets.show(id);\n        };\n\n        /**\n         * On backup the whole section as a folder\n         *\n         * @param {int} sectionId\n         * @param {int} sectionNumber\n         * @param {int} courseId\n         * @param {string} sectionName\n         */\n        $.on_section_backup = function(sectionId, sectionNumber, courseId, sectionName) {\n            const data =\n                {\n                    \"action\": \"is_userdata_copyable_section\",\n                    \"sectionid\": sectionId,\n                    \"sectionnumber\": sectionNumber,\n                    \"courseid\": courseId,\n                };\n\n            const body_html = '<p class=\"alert alert-danger mt-3\">' + str('backup_heavy_load_warning_message') +\n                '</p>' + str('confirm_backup_section');\n\n            on_backup_modal(data, sectionName, body_html, true);\n        };\n\n        /**\n         *  Initialize the delete bulk\n         */\n        $.init_bulk_delete = function(isspeciallayout) {\n            const bulkdelete = $block.find('.editing_bulkdelete');\n            if (bulkdelete.length) {\n                if (isspeciallayout) {\n                    bulkdelete.attr('role', 'menuitem').addClass('dropdown-item menu-action');\n                    bulkdelete.append($(\"<span class='menu-action-text'/>\").append(bulkdelete.attr('title')));\n\n                    $block.find('.menubar .dropdown .dropdown-menu').append(bulkdelete);\n                } else {\n                    $block.find('.header .commands').append(bulkdelete);\n                }\n            }\n        };\n\n        /**\n         *  Initialize the help icon\n         */\n        $.init_help_icon = function(isspeciallayout) {\n            const helpicon = $block.find('.header-commands > .help-icon');\n\n            if (isspeciallayout) {\n                $block.find('.header-commands').parent().css('display', 'block');\n            } else {\n                $block.find('.header .commands').append(helpicon);\n            }\n        };\n\n        /**\n         *  Initialize the Sharing Cart block header\n         */\n        $.init_block_header = function() {\n            const isspeciallayout = verify_layout();\n            $.init_bulk_delete(isspeciallayout);\n            $.init_help_icon(isspeciallayout);\n        };\n\n        /**\n         *  Initialize the Sharing Cart item tree\n         */\n        $.init_item_tree = function() {\n            function add_actions(item, actions) {\n                const $item = $(item);\n                const isCopying = $item.attr('data-is-copying') === '1';\n                const $commands = $item.find('.commands').first();\n\n                $.each(actions, function(index, action) {\n                    if (action === 'restore' && isCopying) {\n                        return;\n                    }\n                    const $command = create_command(action);\n                    $command.on('click', function(e) {\n                        $['on_' + action](e);\n                    });\n                    $commands.append($command);\n                }, this);\n            }\n\n            const activity_actions = ['movedir', 'move', 'delete'];\n            if (course) {\n                activity_actions.push('restore');\n            }\n\n            const directory_actions = ['delete', 'restore'];\n\n            // Initialize items\n            $block.find('li.activity').each(function(index, item) {\n                if($(item).attr('data-disable-copy') == 1) {\n                    add_actions(item, ['movedir', 'move', 'delete']);\n                    return;\n                }\n                add_actions(item, activity_actions);\n            });\n\n            // Initialize directory items\n            $block.find('li.directory').each(function(index, item) {\n                add_actions(item, directory_actions);\n            });\n\n            // Initialize directories\n            directories.init();\n        };\n\n        /**\n         * Extract html object from area where moodle ajax was called.\n         *\n         * Call add_activity_backup_control to re append sharing cart icon.\n         */\n        $.init_activity_commands = function() {\n            $(document).ajaxComplete(function(event, xhr, settings) {\n\n                const url = settings.url;\n                const lastslashindex = url.lastIndexOf('=');\n                const result = url.substring(lastslashindex + 1);\n\n                if (result === 'core_course_edit_module' || result === 'core_course_get_module') {\n\n                    const data = JSON.parse(settings.data);\n                    const action = data[0].args.action;\n\n                    // Don't try to add icon if activity has been deleted.\n                    if (action === 'delete') {\n                        return;\n                    }\n\n                    setTimeout(function() {\n                        const activity_id = data[0].args.id;\n                        const activity = $('#module-' + activity_id);\n                        add_activity_backup_control(activity);\n\n                        if (action === 'duplicate') {\n                            const duplicated = activity.next();\n                            add_activity_backup_control(duplicated);\n                        }\n                    }, 1);\n                }\n            });\n\n            /**\n             * Create the backup icon\n             *\n             * @returns $backupIcon\n             */\n            function create_backup_icon() {\n\n                const $backupIcon = $('<a href=\"javascript:void(0)\" class=\"add-to-sharing-cart\" />')\n                    .append($('<i class=\"fa fa-shopping-basket icon\"></i>'))\n                    .attr('title', str('backup'));\n\n                if (addMethod !== 'click_to_add') {\n                    $backupIcon.addClass('d-none');\n                }\n\n                return $backupIcon;\n            }\n\n            /**\n             * Add backup control with a click event to an activity\n             * Added fix for copying an activity without backup routine\n             *\n             * @param $activity\n             */\n            function add_activity_backup_control($activity) {\n\n                const activityClass = $activity[0].className;\n\n                // Selecting modtype without prefix.\n                const modtype = activityClass.substr(activityClass.indexOf('modtype_') + 8);\n\n                // Default activity name.\n                let activityName = str('activity_string');\n\n                // Label is using a different html / css layout, so it's needed to get the name by using another $find.\n                if (modtype !== 'label') {\n                    activityName = $('.activity#' + $activity[0].id)\n                        .find('.mod-indent-outer .activityinstance span.instancename')\n                        .html();\n                }\n\n                const $backupIcon = create_backup_icon();\n\n                $backupIcon.on('click', function(e) {\n                    $.on_backup(e, activityName);\n                });\n\n                const $actionMenuItem = $activity.find('.action-menu.section-cm-edit-actions').parent('.actions');\n\n                if (!$actionMenuItem.find('.add-to-sharing-cart').length) {\n                    $actionMenuItem.append($backupIcon);\n                }\n            }\n\n            /**\n             * Add backup control with a click event to a section\n             *\n             * @param $section\n             */\n            function add_section_backup_control($section) {\n\n                let sectionId = $section.find('.section_action_menu').data('sectionid');\n                const sectionNumber = parseInt(String($section.attr('id')).match(/\\d+/)[0]);\n                let sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n                const isFlexibleCourseFormat = $('body[id$=flexsections]').length;\n\n                // Extract the section ID from the section if this is a Flexible\n                // course format (since this format doesn't have an action menu)\n                if (isFlexibleCourseFormat && (typeof sectionId === 'undefined' || sectionId === null)) {\n                    sectionId = $section.data('section-id');\n                }\n\n                // A bit unsafe to extract the course ID from the body but it's the best option we got at the moment\n                const courseId = parseInt(String($('body').attr('class')).match(/course-([0-9]*)( |$)/)[1]);\n\n                const $backupIcon = create_backup_icon();\n\n                $backupIcon.on('click', function() {\n                    const inPlaceEditSectionName = in_place_edit_section_name($section);\n                    sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n                    $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n                });\n\n                let $sectionTitle = $section.find('h3.sectionname').first().find('a').last();\n\n                const $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable').first();\n                if ($inPlaceEditable.length) {\n                    $sectionTitle = $inPlaceEditable;\n                }\n\n                // Add the backup icon after the cog wheel if this is a Flexible course format\n                if (isFlexibleCourseFormat && sectionNumber === 0) {\n                    $sectionTitle = $section.find('> .controls');\n                    $sectionTitle.prepend($backupIcon);\n                } else {\n                    $backupIcon.insertAfter($sectionTitle);\n                }\n\n                const activitySelector = 'li.activity';\n\n                const $activities = $section.find(activitySelector);\n\n                $($activities).each(function() {\n                    add_activity_backup_control($(this));\n                });\n            }\n\n            $(\"body.editing .course-content li.section\").each(function() {\n                add_section_backup_control($(this));\n            });\n        };\n\n        /**\n         *  Initialize the Sharing Cart footer basket for 4.0+.\n         */\n        function init_footer_basket() {\n            let currentDragging;\n            const activities = document.querySelectorAll(\".activity.activity-wrapper\");\n            const sections = document.querySelectorAll(\".course-section-header\");\n            const sharingCartBlock = document.querySelector('section[data-block=\"sharing_cart\"]');\n\n            add_draggable_to_first_section();\n\n            const footer = document.getElementById('page-footer');\n            const footerIconContainer = footer.querySelector('div[data-region=\"footer-container-popover\"]');\n\n            const basket = document.createElement('i');\n            basket.setAttribute('class', 'fa fa-shopping-basket');\n\n            const basketButton = document.createElement('button');\n            basketButton.setAttribute('class', 'btn btn-icon bg-secondary icon-no-margin btn-footer-popover sharing_cart_basket');\n            basketButton.setAttribute('style', 'z-index: 1001;');\n            basketButton.append(basket);\n\n            const dropAreaText = document.createElement('p');\n            dropAreaText.setAttribute('class', 'font-weight-bold text-white');\n            dropAreaText.innerText = str('drop_here');\n\n            const dropArea = document.createElement('div');\n            dropArea.setAttribute('class',\n                'h-100 w-100 position-absolute d-flex justify-content-center align-items-center');\n            dropArea.append(dropAreaText);\n\n            sections.forEach(section => {\n                drag_event_listeners(section);\n            });\n\n            activities.forEach(activity => {\n                drag_event_listeners(activity);\n            });\n\n            /**\n             *  Initialize events for dragging\n             * @param {object} draggable\n             */\n            function drag_event_listeners(draggable) {\n                draggable.addEventListener('dragstart', (e) => {\n                    basketButton.classList.remove('shake_basket');\n\n                    footerIconContainer?.prepend(basketButton);\n                    sharingCartBlock.children[0].classList.add('dragging_item');\n                    sharingCartBlock.append(dropArea);\n                    currentDragging = e.target;\n                    isDragging = true;\n                });\n\n                draggable.addEventListener('dragend', () => {\n                    if (currentDragging instanceof HTMLElement) {\n                        footerIconContainer?.removeChild(basketButton);\n                    }\n\n                    sharingCartBlock.children[0].classList.remove('dragging_item');\n                    sharingCartBlock.removeChild(dropArea);\n                    isDragging = false;\n                });\n            }\n\n            [basketButton, sharingCartBlock].forEach((dropzone) => {\n                dropzone.addEventListener(\"dragover\", (e) => {\n                    e.preventDefault();\n                    dropzone.classList.add('drag_over');\n                });\n\n                dropzone.addEventListener(\"dragenter\", (e) => {\n                    e.preventDefault();\n                    dropzone.classList.add('drag_over');\n                });\n\n                dropzone.addEventListener(\"dragleave\", () => {\n                    dropzone.classList.remove('drag_over');\n                });\n\n                dropzone.addEventListener(\"drop\", () => {\n                    if (currentDragging instanceof HTMLElement) {\n                        currentDragging.querySelector('.add-to-sharing-cart').click();\n                    }\n\n                    dropzone.classList.remove('drag_over');\n                    currentDragging = undefined;\n                    isDragging = false;\n                });\n            });\n        }\n\n        /**\n         *  Make the first section (General) draggable\n         */\n        function add_draggable_to_first_section() {\n            const courseSectionHeader = document.getElementsByClassName(\"course-section-header\")[0] ?? null;\n\n            if (courseSectionHeader instanceof HTMLElement) {\n                courseSectionHeader.classList.add('draggable');\n                courseSectionHeader.setAttribute('draggable', true);\n            }\n        }\n\n        /**\n         * Initialize the Sharing Cart block\n         */\n        $.init = function() {\n            M.str.block_sharing_cart.pluginname = this.get_plugin_name();\n\n            // Arrange header icons (bulkdelete, help)\n            $.init_block_header();\n            $.init_item_tree();\n            $.init_activity_commands();\n\n            if (addMethod === 'drag_and_drop') {\n                init_footer_basket();\n            }\n        };\n        var $spinner = $('<i/>').addClass('spinner fa fa-3x fa-circle-o-notch fa-spin');\n        $('div#sharing-cart-spinner-modal div.spinner-container').prepend($spinner);\n\n        $.init();\n    });\n\n    $('.copy_section').on('click', function() {\n\n        const $section_selected = ($('.section-dropdown option:selected'));\n        const sectionId = $section_selected.data('section-id');\n        const sectionNumber = $section_selected.data('section-number');\n        const courseId = $section_selected.data('course-id');\n        const sectionName = $section_selected.data('section-name');\n\n        $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n    });\n\n    $('.copy_activity').on('click', function(e) {\n        const activitySelected = ($('.activity-dropdown option:selected'));\n        const activityId = activitySelected.data('activity-id');\n        const activityName = activitySelected.data('activity-name');\n\n        $.on_backup(e, activityName, activityId);\n    });\n};\n"],"names":["addMethod","document","ready","isDragging","str","identifier","M","block_sharing_cart","moodle","get_action_url","name","args","url","cfg","wwwroot","q","k","push","encodeURIComponent","join","remove_basket","footerIconContainer","getElementById","querySelector","sharingCartBasket","removeChild","classList","remove","confirm_modal","obj","checkbox","body","create","type","ModalFactory","types","SAVE_CANCEL","title","done","modal","is_submitted","setSaveButtonText","save_button","userdata_checkbox","getRoot","find","anonymize_checkbox","on","e","currentTarget","checked","attr","prop","ModalEvents","save","response","is","next","cancel","hidden","removeClass","show","in_place_edit_section_name","$section","sectionName","$inPlaceEditable","length","data","on_backup_modal","post_data","title_str","body_str","isSection","post","sectionId","sectionNumber","courseId","userdata","anonymize","$commands","closest","text","trim","String","parent","inPlaceEditSectionName","$spinner","add_spinner","$node_spinner","add_node_spinner","sesskey","reload_tree","fail","show_error","always","hide","backup_section","sectionid","sectionnumber","courseid","cmid","course","id","backup","add","shake_basket","on_success","icon","css","iconClass","$block","match","is_frontpage","hasClass","ex","JSON","parse","responseText","core","exception","message","create_command","iconElement","addClass","append","$node","replaceWith","init_item_tree","directories","KEY","opens","param","readCookie","cookie","pop","getCookieValue","split","map","v","parseInt","expires","Date","setDate","getDate","value","expireTimeInMillisecond","d","setTime","getTime","toUTCString","setCookie","open","$dir","visible","init","i","each","index","dir","target","toggle","reset","move_targets","$cancel","targets","this","$target","item_id","$current","$next","$list","next_id","create_target","area_to","$anchor","m","move","item","$item","to","before","restore_targets","is_directory","$clipboard","section","href","URL","util","image_url","$view","html","prepend","cloneNode","replace","$sitetopic","$mainmenu","$container","sectionDOM","first","init_footer_basket","currentDragging","activities","querySelectorAll","sections","sharingCartBlock","courseSectionHeader","getElementsByClassName","HTMLElement","setAttribute","add_draggable_to_first_section","basket","createElement","basketButton","dropAreaText","innerText","dropArea","drag_event_listeners","draggable","addEventListener","children","forEach","activity","dropzone","preventDefault","click","undefined","get_plugin_name","$blockheader","on_backup","activityName","cmId","$backup","$activity","dataowner","on_movedir","$current_dir","current_path","dirs","$form","submit","folder_to","val","$input","setTimeout","focus","unshift","$select","change","$edit","on_move","on_delete","liText","modalBody","isDirectory","description_text","stopPropagation","on_restore","on_section_backup","init_bulk_delete","isspeciallayout","bulkdelete","init_help_icon","helpicon","init_block_header","add_actions","actions","isCopying","action","$command","activity_actions","directory_actions","init_activity_commands","create_backup_icon","$backupIcon","add_activity_backup_control","activityClass","className","modtype","substr","indexOf","$actionMenuItem","ajaxComplete","event","xhr","settings","lastslashindex","lastIndexOf","result","substring","activity_id","isFlexibleCourseFormat","$sectionTitle","last","insertAfter","$activities","add_section_backup_control","pluginname","$section_selected","activitySelected","activityId"],"mappings":"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"}