define("tiny_kalturamedia/commands",["exports","editor_tiny/utils","core/str","./common","./options"],(function(_exports,_utils,_str,_common,_options){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_kalturamedia plugin.
   *
   * @module      tiny_kalturmedia/commands
   * @copyright   2023 Roi Levi <roi.levi@kaltura.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const handleAction=(editor,title)=>{editor.windowManager.openUrl({title:title,width:1200,height:700,url:M.cfg.wwwroot+"/lib/editor/tiny/plugins/kalturamedia/ltibrowse.php?lang="+editor.getParam("language")+"&contextid="+(0,_options.getContextId)(editor),buttons:[{type:"cancel",text:"Cancel"}]})};_exports.getSetup=async()=>{const[buttonText,buttonImage]=await Promise.all([(0,_str.get_string)("buttontitle",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.buttonName,{icon:_common.icon,tooltip:buttonText,onAction:()=>handleAction(editor,buttonText)}),editor.ui.registry.addMenuItem(_common.buttonName,{icon:_common.icon,text:buttonText,onAction:()=>handleAction(editor,buttonText)})}}}));

//# sourceMappingURL=commands.min.js.map