{{!
    db/upgrade.php

    * component
    * component_type
    * component_name
    * copyright
    * component_type_is_mod
}}
{{< common/boilerplate_php }}
{{$ description }}Plugin upgrade steps are defined here.{{/ description }}
{{$ package }}{{ component }}{{/ package }}
{{$ extratags }}
 * @category    upgrade
{{/ extratags }}
{{$ copyright }}{{ copyright }}{{/ copyright }}
{{/ common/boilerplate_php }}
{{# self.has_upgradelib}}

require_once(__DIR__.'/upgradelib.php');
{{/ self.has_upgradelib}}

/**
 * Execute {{ component }} upgrade from the given old version.
 *
 * @param int $oldversion
 * @return bool
 */
function xmldb_{{^ component_type_is_mod }}{{ component_type }}_{{/ component_type_is_mod }}{{ component_name }}_upgrade($oldversion) {
    global $DB;

    $dbman = $DB->get_manager();

    // For further information please read the Upgrade API documentation:
    // https://docs.moodle.org/dev/Upgrade_API
    //
    // You will also have to create the db/install.xml file by using the XMLDB Editor.
    // Documentation for the XMLDB Editor can be found at:
    // https://docs.moodle.org/dev/XMLDB_editor

    return true;
}
