{"version":3,"file":"modal.min.js","sources":["../src/modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for modals.\n *\n * @module core/modal\n * @class core/modal\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/templates',\n    'core/notification',\n    'core/key_codes',\n    'core/custom_interaction_events',\n    'core/modal_backdrop',\n    'core_filters/events',\n    'core/modal_events',\n    'core/local/aria/focuslock',\n    'core/pending',\n    'core/aria',\n    'core/fullscreen'\n], function(\n    $,\n    Templates,\n    Notification,\n    KeyCodes,\n    CustomEvents,\n    ModalBackdrop,\n    FilterEvents,\n    ModalEvents,\n    FocusLock,\n    Pending,\n    Aria,\n    Fullscreen\n) {\n\n    var SELECTORS = {\n        CONTAINER: '[data-region=\"modal-container\"]',\n        MODAL: '[data-region=\"modal\"]',\n        HEADER: '[data-region=\"header\"]',\n        TITLE: '[data-region=\"title\"]',\n        BODY: '[data-region=\"body\"]',\n        FOOTER: '[data-region=\"footer\"]',\n        HIDE: '[data-action=\"hide\"]',\n        DIALOG: '[role=dialog]',\n        FORM: 'form',\n        MENU_BAR: '[role=menubar]',\n        HAS_Z_INDEX: '.moodle-has-zindex',\n        CAN_RECEIVE_FOCUS: 'input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]',\n    };\n\n    var TEMPLATES = {\n        LOADING: 'core/loading',\n        BACKDROP: 'core/modal_backdrop',\n    };\n\n    /**\n     * Module singleton for the backdrop to be reused by all Modal instances.\n     */\n    var backdropPromise;\n\n    /**\n     * A counter that gets incremented for each modal created. This can be\n     * used to generate unique values for the modals.\n     */\n    var modalCounter = 0;\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var Modal = function(root) {\n        this.root = $(root);\n        this.modal = this.root.find(SELECTORS.MODAL);\n        this.header = this.modal.find(SELECTORS.HEADER);\n        this.headerPromise = $.Deferred();\n        this.title = this.header.find(SELECTORS.TITLE);\n        this.titlePromise = $.Deferred();\n        this.body = this.modal.find(SELECTORS.BODY);\n        this.bodyPromise = $.Deferred();\n        this.footer = this.modal.find(SELECTORS.FOOTER);\n        this.footerPromise = $.Deferred();\n        this.hiddenSiblings = [];\n        this.isAttached = false;\n        this.bodyJS = null;\n        this.footerJS = null;\n        this.modalCount = modalCounter++;\n        this.attachmentPoint = document.createElement('div');\n        document.body.append(this.attachmentPoint);\n        this.focusOnClose = null;\n\n        if (!this.root.is(SELECTORS.CONTAINER)) {\n            Notification.exception({message: 'Element is not a modal container'});\n        }\n\n        if (!this.modal.length) {\n            Notification.exception({message: 'Container does not contain a modal'});\n        }\n\n        if (!this.header.length) {\n            Notification.exception({message: 'Modal is missing a header region'});\n        }\n\n        if (!this.title.length) {\n            Notification.exception({message: 'Modal header is missing a title region'});\n        }\n\n        if (!this.body.length) {\n            Notification.exception({message: 'Modal is missing a body region'});\n        }\n\n        if (!this.footer.length) {\n            Notification.exception({message: 'Modal is missing a footer region'});\n        }\n\n        this.registerEventListeners();\n    };\n\n    /**\n     * Attach the modal to the correct part of the page.\n     *\n     * If it hasn't already been added it runs any\n     * javascript that has been cached until now.\n     *\n     * @method attachToDOM\n     */\n    Modal.prototype.attachToDOM = function() {\n        this.getAttachmentPoint().append(this.root);\n\n        if (this.isAttached) {\n            return;\n        }\n\n        FocusLock.trapFocus(this.root[0]);\n\n        // If we'd cached any JS then we can run it how that the modal is\n        // attached to the DOM.\n        if (this.bodyJS) {\n            Templates.runTemplateJS(this.bodyJS);\n            this.bodyJS = null;\n        }\n\n        if (this.footerJS) {\n            Templates.runTemplateJS(this.footerJS);\n            this.footerJS = null;\n        }\n\n        this.isAttached = true;\n    };\n\n    /**\n     * Count the number of other visible modals (not including this one).\n     *\n     * @method countOtherVisibleModals\n     * @return {int}\n     */\n    Modal.prototype.countOtherVisibleModals = function() {\n        var count = 0;\n        $('body').find(SELECTORS.CONTAINER).each(function(index, element) {\n            element = $(element);\n\n            // If we haven't found ourself and the element is visible.\n            if (!this.root.is(element) && element.hasClass('show')) {\n                count++;\n            }\n        }.bind(this));\n\n        return count;\n    };\n\n    /**\n     * Get the modal backdrop.\n     *\n     * @method getBackdrop\n     * @return {object} jQuery promise\n     */\n    Modal.prototype.getBackdrop = function() {\n        if (!backdropPromise) {\n            backdropPromise = Templates.render(TEMPLATES.BACKDROP, {})\n                .then(function(html) {\n                    var element = $(html);\n\n                    return new ModalBackdrop(element);\n                })\n                .fail(Notification.exception);\n        }\n\n        return backdropPromise;\n    };\n\n    /**\n     * Get the root element of this modal.\n     *\n     * @method getRoot\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getRoot = function() {\n        return this.root;\n    };\n\n    /**\n     * Get the modal element of this modal.\n     *\n     * @method getModal\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getModal = function() {\n        return this.modal;\n    };\n\n    /**\n     * Get the modal title element.\n     *\n     * @method getTitle\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getTitle = function() {\n        return this.title;\n    };\n\n    /**\n     * Get the modal body element.\n     *\n     * @method getBody\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getBody = function() {\n        return this.body;\n    };\n\n    /**\n     * Get the modal footer element.\n     *\n     * @method getFooter\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getFooter = function() {\n        return this.footer;\n    };\n\n    /**\n     * Get a promise resolving to the title region.\n     *\n     * @method getTitlePromise\n     * @return {Promise}\n     */\n    Modal.prototype.getTitlePromise = function() {\n        return this.titlePromise;\n    };\n\n    /**\n     * Get a promise resolving to the body region.\n     *\n     * @method getBodyPromise\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getBodyPromise = function() {\n        return this.bodyPromise;\n    };\n\n    /**\n     * Get a promise resolving to the footer region.\n     *\n     * @method getFooterPromise\n     * @return {object} jQuery object\n     */\n    Modal.prototype.getFooterPromise = function() {\n        return this.footerPromise;\n    };\n\n    /**\n     * Get the unique modal count.\n     *\n     * @method getModalCount\n     * @return {int}\n     */\n    Modal.prototype.getModalCount = function() {\n        return this.modalCount;\n    };\n\n    /**\n     * Set the modal title element.\n     *\n     * This method is overloaded to take either a string value for the title or a jQuery promise that is resolved with\n     * HTML most commonly from a Str.get_string call.\n     *\n     * @method setTitle\n     * @param {(string|object)} value The title string or jQuery promise which resolves to the title.\n     */\n    Modal.prototype.setTitle = function(value) {\n        var title = this.getTitle();\n        this.titlePromise = $.Deferred();\n\n        this.asyncSet(value, title.html.bind(title))\n        .then(function() {\n            this.titlePromise.resolve(title);\n        }.bind(this))\n        .catch(Notification.exception);\n    };\n\n    /**\n     * Set the modal body element.\n     *\n     * This method is overloaded to take either a string value for the body or a jQuery promise that is resolved with\n     * HTML and Javascript most commonly from a Templates.render call.\n     *\n     * @method setBody\n     * @param {(string|object)} value The body string or jQuery promise which resolves to the body.\n     * @fires event:filterContentUpdated\n     */\n    Modal.prototype.setBody = function(value) {\n        this.bodyPromise = $.Deferred();\n\n        var body = this.getBody();\n\n        if (typeof value === 'string') {\n            // Just set the value if it's a string.\n            body.html(value);\n            FilterEvents.notifyFilterContentUpdated(body);\n            this.getRoot().trigger(ModalEvents.bodyRendered, this);\n            this.bodyPromise.resolve(body);\n        } else {\n            var jsPendingId = 'amd-modal-js-pending-id-' + this.getModalCount();\n            M.util.js_pending(jsPendingId);\n            // Otherwise we assume it's a promise to be resolved with\n            // html and javascript.\n            var contentPromise = null;\n            body.css('overflow', 'hidden');\n\n            // Ensure that the `value` is a jQuery Promise.\n            value = $.when(value);\n\n            if (value.state() == 'pending') {\n                // We're still waiting for the body promise to resolve so\n                // let's show a loading icon.\n                var height = body.innerHeight();\n                if (height < 100) {\n                    height = 100;\n                }\n\n                body.animate({height: height + 'px'}, 150);\n\n                body.html('');\n                contentPromise = Templates.render(TEMPLATES.LOADING, {})\n                    .then(function(html) {\n                        var loadingIcon = $(html).hide();\n                        body.html(loadingIcon);\n                        loadingIcon.fadeIn(150);\n\n                        // We only want the loading icon to fade out\n                        // when the content for the body has finished\n                        // loading.\n                        return $.when(loadingIcon.promise(), value);\n                    })\n                    .then(function(loadingIcon) {\n                        // Once the content has finished loading and\n                        // the loading icon has been shown then we can\n                        // fade the icon away to reveal the content.\n                        return loadingIcon.fadeOut(100).promise();\n                    })\n                    .then(function() {\n                        return value;\n                    });\n            } else {\n                // The content is already loaded so let's just display\n                // it to the user. No need for a loading icon.\n                contentPromise = value;\n            }\n\n            // Now we can actually display the content.\n            contentPromise.then(function(html, js) {\n                var result = null;\n\n                if (this.isVisible()) {\n                    // If the modal is visible then we should display\n                    // the content gracefully for the user.\n                    body.css('opacity', 0);\n                    var currentHeight = body.innerHeight();\n                    body.html(html);\n                    // We need to clear any height values we've set here\n                    // in order to measure the height of the content being\n                    // added. This then allows us to animate the height\n                    // transition.\n                    body.css('height', '');\n                    var newHeight = body.innerHeight();\n                    body.css('height', currentHeight + 'px');\n                    result = body.animate(\n                        {height: newHeight + 'px', opacity: 1},\n                        {duration: 150, queue: false}\n                    ).promise();\n                } else {\n                    // Since the modal isn't visible we can just immediately\n                    // set the content. No need to animate it.\n                    body.html(html);\n                }\n\n                if (js) {\n                    if (this.isAttached) {\n                        // If we're in the DOM then run the JS immediately.\n                        Templates.runTemplateJS(js);\n                    } else {\n                        // Otherwise cache it to be run when we're attached.\n                        this.bodyJS = js;\n                    }\n                }\n\n                return result;\n            }.bind(this))\n            .then(function(result) {\n                FilterEvents.notifyFilterContentUpdated(body);\n                this.getRoot().trigger(ModalEvents.bodyRendered, this);\n                return result;\n            }.bind(this))\n            .then(function() {\n                this.bodyPromise.resolve(body);\n                return;\n            }.bind(this))\n            .fail(Notification.exception)\n            .always(function() {\n                // When we're done displaying all of the content we need\n                // to clear the custom values we've set here.\n                body.css('height', '');\n                body.css('overflow', '');\n                body.css('opacity', '');\n                M.util.js_complete(jsPendingId);\n\n                return;\n            })\n            .fail(Notification.exception);\n        }\n    };\n\n    /**\n     * Alternative to setBody() that can be used from non-Jquery modules\n     *\n     * @param {Promise} promise promise that returns {html, js} object\n     * @return {Promise}\n     */\n    Modal.prototype.setBodyContent = function(promise) {\n        // Call the leegacy API for now and pass it a jQuery Promise.\n        // This is a non-spec feature of jQuery and cannot be produced with spec promises.\n        // We can encourage people to migrate to this approach, and in future we can swap\n        // it so that setBody() calls setBodyPromise().\n        return promise.then(({html, js}) => this.setBody($.when(html, js)))\n            .catch(exception => {\n                this.hide();\n                throw exception;\n            });\n    };\n\n    /**\n     * Set the modal footer element. The footer element is made visible, if it\n     * isn't already.\n     *\n     * This method is overloaded to take either a string\n     * value for the body or a jQuery promise that is resolved with HTML and Javascript\n     * most commonly from a Templates.render call.\n     *\n     * @method setFooter\n     * @param {(string|object)} value The footer string or jQuery promise\n     */\n    Modal.prototype.setFooter = function(value) {\n        // Make sure the footer is visible.\n        this.showFooter();\n        this.footerPromise = $.Deferred();\n\n        var footer = this.getFooter();\n\n        if (typeof value === 'string') {\n            // Just set the value if it's a string.\n            footer.html(value);\n            this.footerPromise.resolve(footer);\n        } else {\n            // Otherwise we assume it's a promise to be resolved with\n            // html and javascript.\n            Templates.render(TEMPLATES.LOADING, {})\n            .then(function(html) {\n                footer.html(html);\n\n                return value;\n            })\n            .then(function(html, js) {\n                footer.html(html);\n\n                if (js) {\n                    if (this.isAttached) {\n                        // If we're in the DOM then run the JS immediately.\n                        Templates.runTemplateJS(js);\n                    } else {\n                        // Otherwise cache it to be run when we're attached.\n                        this.footerJS = js;\n                    }\n                }\n\n                return footer;\n            }.bind(this))\n            .then(function(footer) {\n                this.footerPromise.resolve(footer);\n                return;\n            }.bind(this))\n            .catch(Notification.exception);\n        }\n    };\n\n    /**\n     * Check if the footer has any content in it.\n     *\n     * @method hasFooterContent\n     * @return {bool}\n     */\n    Modal.prototype.hasFooterContent = function() {\n        return this.getFooter().children().length ? true : false;\n    };\n\n    /**\n     * Hide the footer element.\n     *\n     * @method hideFooter\n     */\n    Modal.prototype.hideFooter = function() {\n        this.getFooter().addClass('hidden');\n    };\n\n    /**\n     * Show the footer element.\n     *\n     * @method showFooter\n     */\n    Modal.prototype.showFooter = function() {\n        this.getFooter().removeClass('hidden');\n    };\n\n    /**\n     * Mark the modal as a large modal.\n     *\n     * @method setLarge\n     */\n    Modal.prototype.setLarge = function() {\n        if (this.isLarge()) {\n            return;\n        }\n\n        this.getModal().addClass('modal-lg');\n    };\n\n    /**\n     * Check if the modal is a large modal.\n     *\n     * @method isLarge\n     * @return {bool}\n     */\n    Modal.prototype.isLarge = function() {\n        return this.getModal().hasClass('modal-lg');\n    };\n\n    /**\n     * Mark the modal as a small modal.\n     *\n     * @method setSmall\n     */\n    Modal.prototype.setSmall = function() {\n        if (this.isSmall()) {\n            return;\n        }\n\n        this.getModal().removeClass('modal-lg');\n    };\n\n    /**\n     * Check if the modal is a small modal.\n     *\n     * @method isSmall\n     * @return {bool}\n     */\n    Modal.prototype.isSmall = function() {\n        return !this.getModal().hasClass('modal-lg');\n    };\n\n    /**\n     * Set this modal to be scrollable or not.\n     *\n     * @method setScrollable\n     * @param {bool} value Whether the modal is scrollable or not\n     */\n    Modal.prototype.setScrollable = function(value) {\n        if (!value) {\n            this.getModal()[0].classList.remove('modal-dialog-scrollable');\n            return;\n        }\n\n        this.getModal()[0].classList.add('modal-dialog-scrollable');\n    };\n\n\n    /**\n     * Determine the highest z-index value currently on the page.\n     *\n     * @method calculateZIndex\n     * @return {int}\n     */\n    Modal.prototype.calculateZIndex = function() {\n        var items = $(SELECTORS.DIALOG + ', ' + SELECTORS.MENU_BAR + ', ' + SELECTORS.HAS_Z_INDEX);\n        var zIndex = parseInt(this.root.css('z-index'));\n\n        items.each(function(index, item) {\n            item = $(item);\n            // Note that webkit browsers won't return the z-index value from the CSS stylesheet\n            // if the element doesn't have a position specified. Instead it'll return \"auto\".\n            var itemZIndex = item.css('z-index') ? parseInt(item.css('z-index')) : 0;\n\n            if (itemZIndex > zIndex) {\n                zIndex = itemZIndex;\n            }\n        });\n\n        return zIndex;\n    };\n\n    /**\n     * Check if this modal is visible.\n     *\n     * @method isVisible\n     * @return {bool}\n     */\n    Modal.prototype.isVisible = function() {\n        return this.root.hasClass('show');\n    };\n\n    /**\n     * Check if this modal has focus.\n     *\n     * @method hasFocus\n     * @return {bool}\n     */\n    Modal.prototype.hasFocus = function() {\n        var target = $(document.activeElement);\n        return this.root.is(target) || this.root.has(target).length;\n    };\n\n    /**\n     * Check if this modal has CSS transitions applied.\n     *\n     * @method hasTransitions\n     * @return {bool}\n     */\n    Modal.prototype.hasTransitions = function() {\n        return this.getRoot().hasClass('fade');\n    };\n\n    /**\n     * Gets the jQuery wrapped node that the Modal should be attached to.\n     *\n     * @returns {jQuery}\n     */\n    Modal.prototype.getAttachmentPoint = function() {\n        return $(Fullscreen.getElement() || this.attachmentPoint);\n    };\n\n    /**\n     * Display this modal. The modal will be attached to the DOM if it hasn't\n     * already been.\n     *\n     * @method show\n     * @returns {Promise}\n     */\n    Modal.prototype.show = function() {\n        if (this.isVisible()) {\n            return $.Deferred().resolve();\n        }\n\n        var pendingPromise = new Pending('core/modal:show');\n\n        if (this.hasFooterContent()) {\n            this.showFooter();\n        } else {\n            this.hideFooter();\n        }\n\n        this.attachToDOM();\n\n        // If the focusOnClose was not set. Set the focus back to triggered element.\n        if (!this.focusOnClose && document.activeElement) {\n            this.focusOnClose = document.activeElement;\n        }\n\n        return this.getBackdrop()\n        .then(function(backdrop) {\n            var currentIndex = this.calculateZIndex();\n            var newIndex = currentIndex + 2;\n            var newBackdropIndex = newIndex - 1;\n            this.root.css('z-index', newIndex);\n            backdrop.setZIndex(newBackdropIndex);\n            backdrop.show();\n\n            this.root.removeClass('hide').addClass('show');\n            this.accessibilityShow();\n            this.getModal().focus();\n            $('body').addClass('modal-open');\n            this.root.trigger(ModalEvents.shown, this);\n\n            return;\n        }.bind(this))\n        .then(pendingPromise.resolve);\n    };\n\n    /**\n     * Hide this modal if it does not contain a form.\n     *\n     * @method hideIfNotForm\n     */\n    Modal.prototype.hideIfNotForm = function() {\n        var formElement = this.modal.find(SELECTORS.FORM);\n        if (formElement.length == 0) {\n            this.hide();\n        }\n    };\n\n    /**\n     * Hide this modal.\n     *\n     * @method hide\n     */\n    Modal.prototype.hide = function() {\n        this.getBackdrop().done(function(backdrop) {\n            FocusLock.untrapFocus();\n\n            if (!this.countOtherVisibleModals()) {\n                // Hide the backdrop if we're the last open modal.\n                backdrop.hide();\n                $('body').removeClass('modal-open');\n            }\n\n            var currentIndex = parseInt(this.root.css('z-index'));\n            this.root.css('z-index', '');\n            backdrop.setZIndex(currentIndex - 3);\n\n            this.accessibilityHide();\n\n            if (this.hasTransitions()) {\n                // Wait for CSS transitions to complete before hiding the element.\n                this.getRoot().one('transitionend webkitTransitionEnd oTransitionEnd', function() {\n                    this.getRoot().removeClass('show').addClass('hide');\n                }.bind(this));\n            } else {\n                this.getRoot().removeClass('show').addClass('hide');\n            }\n\n            // Ensure the modal is moved onto the body node if it is still attached to the DOM.\n            if ($(document.body).find(this.getRoot()).length) {\n                $(document.body).append(this.getRoot());\n            }\n\n            this.root.trigger(ModalEvents.hidden, this);\n        }.bind(this));\n    };\n\n    /**\n     * Remove this modal from the DOM.\n     *\n     * @method destroy\n     */\n    Modal.prototype.destroy = function() {\n        this.hide();\n        this.root.remove();\n        this.root.trigger(ModalEvents.destroyed, this);\n        this.attachmentPoint.remove();\n    };\n\n    /**\n     * Sets the appropriate aria attributes on this dialogue and the other\n     * elements in the DOM to ensure that screen readers are able to navigate\n     * the dialogue popup correctly.\n     *\n     * @method accessibilityShow\n     */\n    Modal.prototype.accessibilityShow = function() {\n        // Make us visible to screen readers.\n        Aria.unhide(this.root.get());\n\n        // Hide siblings.\n        Aria.hideSiblings(this.root.get()[0]);\n    };\n\n    /**\n     * Restores the aria visibility on the DOM elements changed when displaying\n     * the dialogue popup and makes the dialogue aria hidden to allow screen\n     * readers to navigate the main page correctly when the dialogue is closed.\n     *\n     * @method accessibilityHide\n     */\n    Modal.prototype.accessibilityHide = function() {\n        // Unhide siblings.\n        Aria.unhideSiblings(this.root.get()[0]);\n\n        // Hide this modal.\n        Aria.hide(this.root.get());\n    };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    Modal.prototype.registerEventListeners = function() {\n        this.getRoot().on('keydown', function(e) {\n            if (!this.isVisible()) {\n                return;\n            }\n\n            if (e.keyCode == KeyCodes.escape) {\n                if (this.removeOnClose) {\n                    this.destroy();\n                } else {\n                    this.hide();\n                }\n            }\n        }.bind(this));\n\n        // Listen for clicks on the modal container.\n        this.getRoot().click(function(e) {\n            // If the click wasn't inside the modal element then we should\n            // hide the modal.\n            if (!$(e.target).closest(SELECTORS.MODAL).length) {\n                // The check above fails to detect the click was inside the modal when the DOM tree is already changed.\n                // So, we check if we can still find the container element or not. If not, then the DOM tree is changed.\n                // It's best not to hide the modal in that case.\n                if ($(e.target).closest(SELECTORS.CONTAINER).length) {\n                    var outsideClickEvent = $.Event(ModalEvents.outsideClick);\n                    this.getRoot().trigger(outsideClickEvent, this);\n\n                    if (!outsideClickEvent.isDefaultPrevented()) {\n                        this.hideIfNotForm();\n                    }\n                }\n            }\n        }.bind(this));\n\n        CustomEvents.define(this.getModal(), [CustomEvents.events.activate]);\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.HIDE, function(e, data) {\n            this.hide();\n            data.originalEvent.preventDefault();\n        }.bind(this));\n\n        this.getRoot().on(ModalEvents.hidden, () => {\n            if (this.focusOnClose) {\n                // Focus on the element that actually triggers the modal.\n                this.focusOnClose.focus();\n            }\n        });\n    };\n\n    /**\n     * Register a listener to close the dialogue when the cancel button is pressed.\n     *\n     * @method registerCloseOnCancel\n     */\n    Modal.prototype.registerCloseOnCancel = function() {\n        // Handle the clicking of the Cancel button.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('cancel'), function(e, data) {\n            var cancelEvent = $.Event(ModalEvents.cancel);\n            this.getRoot().trigger(cancelEvent, this);\n\n            if (!cancelEvent.isDefaultPrevented()) {\n                data.originalEvent.preventDefault();\n\n                if (this.removeOnClose) {\n                    this.destroy();\n                } else {\n                    this.hide();\n                }\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Register a listener to close the dialogue when the save button is pressed.\n     *\n     * @method registerCloseOnSave\n     */\n    Modal.prototype.registerCloseOnSave = function() {\n        // Handle the clicking of the Cancel button.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('save'), function(e, data) {\n            var saveEvent = $.Event(ModalEvents.save);\n            this.getRoot().trigger(saveEvent, this);\n\n            if (!saveEvent.isDefaultPrevented()) {\n                data.originalEvent.preventDefault();\n\n                if (this.removeOnClose) {\n                    this.destroy();\n                } else {\n                    this.hide();\n                }\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Set or resolve and set the value using the function.\n     *\n     * @method asyncSet\n     * @param {(string|object)} value The string or jQuery promise.\n     * @param {function} setFunction The setter\n     * @return {Promise}\n     */\n    Modal.prototype.asyncSet = function(value, setFunction) {\n        var p = value;\n        if (typeof value !== 'object' || !value.hasOwnProperty('then')) {\n            p = $.Deferred();\n            p.resolve(value);\n        }\n\n        p.then(function(content) {\n            setFunction(content);\n\n            return;\n        })\n        .fail(Notification.exception);\n\n        return p;\n    };\n\n    /**\n     * Set the title text of a button.\n     *\n     * This method is overloaded to take either a string value for the button title or a jQuery promise that is resolved with\n     * text most commonly from a Str.get_string call.\n     *\n     * @param {DOMString} action The action of the button\n     * @param {(String|object)} value The button text, or a promise which will resolve to it\n     * @returns {Promise}\n     */\n    Modal.prototype.setButtonText = function(action, value) {\n        const button = this.getFooter().find(this.getActionSelector(action));\n\n        if (!button) {\n            throw new Error(\"Unable to find the '\" + action + \"' button\");\n        }\n\n        return this.asyncSet(value, button.text.bind(button));\n    };\n\n    /**\n     * Get the Selector for an action.\n     *\n     * @param {String} action\n     * @returns {DOMString}\n     */\n    Modal.prototype.getActionSelector = function(action) {\n        return \"[data-action='\" + action + \"']\";\n    };\n\n    /**\n     * Set the flag to remove the modal from the DOM on close.\n     *\n     * @param {Boolean} remove\n     */\n    Modal.prototype.setRemoveOnClose = function(remove) {\n        this.removeOnClose = remove;\n    };\n\n    /**\n     * Set the return element for the modal.\n     *\n     * @param {Element|jQuery} element Element to focus when the modal is closed\n     */\n    Modal.prototype.setReturnElement = function(element) {\n        this.focusOnClose = element;\n    };\n\n    return Modal;\n});\n"],"names":["define","$","Templates","Notification","KeyCodes","CustomEvents","ModalBackdrop","FilterEvents","ModalEvents","FocusLock","Pending","Aria","Fullscreen","backdropPromise","SELECTORS","TEMPLATES","modalCounter","Modal","root","this","modal","find","header","headerPromise","Deferred","title","titlePromise","body","bodyPromise","footer","footerPromise","hiddenSiblings","isAttached","bodyJS","footerJS","modalCount","attachmentPoint","document","createElement","append","focusOnClose","is","exception","message","length","registerEventListeners","prototype","attachToDOM","getAttachmentPoint","trapFocus","runTemplateJS","countOtherVisibleModals","count","each","index","element","hasClass","bind","getBackdrop","render","then","html","fail","getRoot","getModal","getTitle","getBody","getFooter","getTitlePromise","getBodyPromise","getFooterPromise","getModalCount","setTitle","value","asyncSet","resolve","catch","setBody","notifyFilterContentUpdated","trigger","bodyRendered","jsPendingId","M","util","js_pending","contentPromise","css","when","state","height","innerHeight","animate","loadingIcon","hide","fadeIn","promise","fadeOut","js","result","isVisible","currentHeight","newHeight","opacity","duration","queue","always","js_complete","setBodyContent","_ref","setFooter","showFooter","hasFooterContent","children","hideFooter","addClass","removeClass","setLarge","isLarge","setSmall","isSmall","setScrollable","classList","add","remove","calculateZIndex","items","zIndex","parseInt","item","itemZIndex","hasFocus","target","activeElement","has","hasTransitions","getElement","show","pendingPromise","backdrop","newIndex","newBackdropIndex","setZIndex","accessibilityShow","focus","shown","hideIfNotForm","done","untrapFocus","currentIndex","accessibilityHide","one","hidden","destroy","destroyed","unhide","get","hideSiblings","unhideSiblings","on","e","keyCode","escape","removeOnClose","click","closest","outsideClickEvent","Event","outsideClick","isDefaultPrevented","events","activate","data","originalEvent","preventDefault","registerCloseOnCancel","getActionSelector","cancelEvent","cancel","registerCloseOnSave","saveEvent","save","setFunction","p","hasOwnProperty","content","setButtonText","action","button","Error","text","setRemoveOnClose","setReturnElement"],"mappings":"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"}