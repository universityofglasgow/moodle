{"version":3,"file":"status_field.min.js","sources":["../src/status_field.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for the user enrolment status field in the course participants page.\n *\n * @module     core_user/status_field\n * @copyright  2017 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Repository from './repository';\nimport * as Str from 'core/str';\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport {add as notifyUser} from 'core/toast';\n\nconst Selectors = {\n    editEnrolment: '[data-action=\"editenrolment\"]',\n    showDetails: '[data-action=\"showdetails\"]',\n    unenrol: '[data-action=\"unenrol\"]',\n    statusElement: '[data-status]',\n};\n\n/**\n * Get the dynamic table from the specified link.\n *\n * @param {HTMLElement} link\n * @returns {HTMLElement}\n */\nconst getDynamicTableFromLink = link => link.closest(DynamicTableSelectors.main.region);\n\n/**\n * Get the status container from the specified link.\n *\n * @param {HTMLElement} link\n * @returns {HTMLElement}\n */\nconst getStatusContainer = link => link.closest(Selectors.statusElement);\n\n/**\n * Get user enrolment id from the specified link\n *\n * @param {HTMLElement} link\n * @returns {Number}\n */\nconst getUserEnrolmentIdFromLink = link => link.getAttribute('rel');\n\n/**\n * Register all event listeners for the status fields.\n *\n * @param {Number} contextId\n * @param {Number} uniqueId\n */\nconst registerEventListeners = (contextId, uniqueId) => {\n    const getBodyFunction = (userEnrolmentId, formData) => getBody(contextId, userEnrolmentId, formData);\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(DynamicTableSelectors.main.fromRegionId(uniqueId));\n        if (!tableRoot) {\n            return;\n        }\n\n        const editLink = e.target.closest(Selectors.editEnrolment);\n        if (editLink) {\n            e.preventDefault();\n\n            showEditDialogue(editLink, getBodyFunction);\n        }\n\n        const unenrolLink = e.target.closest(Selectors.unenrol);\n        if (unenrolLink) {\n            e.preventDefault();\n\n            showUnenrolConfirmation(unenrolLink);\n        }\n\n        const showDetailsLink = e.target.closest(Selectors.showDetails);\n        if (showDetailsLink) {\n            e.preventDefault();\n\n            showStatusDetails(showDetailsLink);\n        }\n    });\n};\n\n/**\n * Show the edit dialogue.\n *\n * @param {HTMLElement} link\n * @param {Function} getBody Function to get the body for the specified user enrolment\n */\nconst showEditDialogue = (link, getBody) => {\n    const container = getStatusContainer(link);\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\n\n    ModalFactory.create({\n        large: true,\n        title: Str.get_string('edituserenrolment', 'enrol', container.dataset.fullname),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: getBody(userEnrolmentId)\n    })\n    .then(modal => {\n        // Handle save event.\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Don't close the modal yet.\n            e.preventDefault();\n\n            // Submit form data.\n            submitEditFormAjax(link, getBody, modal, userEnrolmentId, container.dataset);\n        });\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Show the modal.\n        modal.show();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Show and handle the unenrolment confirmation dialogue.\n *\n * @param {HTMLElement} link\n */\nconst showUnenrolConfirmation = link => {\n    const container = getStatusContainer(link);\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\n\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n    })\n    .then(modal => {\n        // Handle confirm event.\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Don't close the modal yet.\n            e.preventDefault();\n\n            // Submit data.\n            submitUnenrolFormAjax(\n                link,\n                modal,\n                {\n                    ueid: userEnrolmentId,\n                },\n                container.dataset\n            );\n        });\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Display the delete confirmation modal.\n        modal.show();\n\n        const stringData = [\n            {\n                key: 'unenrol',\n                component: 'enrol',\n            },\n            {\n                key: 'unenrolconfirm',\n                component: 'enrol',\n                param: {\n                    user: container.dataset.fullname,\n                    course: container.dataset.coursename,\n                    enrolinstancename: container.dataset.enrolinstancename,\n                }\n            }\n        ];\n\n        return Promise.all([Str.get_strings(stringData), modal]);\n    })\n    .then(([strings, modal]) => {\n        modal.setTitle(strings[0]);\n        modal.setSaveButtonText(strings[0]);\n        modal.setBody(strings[1]);\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Show the user details dialogue.\n *\n * @param {HTMLElement} link\n */\nconst showStatusDetails = link => {\n    const container = getStatusContainer(link);\n\n    const context = {\n        editenrollink: '',\n        statusclass: container.querySelector('span.badge').getAttribute('class'),\n        ...container.dataset,\n    };\n\n    // Find the edit enrolment link.\n    const editEnrolLink = container.querySelector(Selectors.editEnrolment);\n    if (editEnrolLink) {\n        // If there's an edit enrolment link for this user, clone it into the context for the modal.\n        context.editenrollink = editEnrolLink.outerHTML;\n    }\n\n    ModalFactory.create({\n        large: true,\n        type: ModalFactory.types.CANCEL,\n        title: Str.get_string('enroldetails', 'enrol'),\n        body: Templates.render('core_user/status_details', context),\n    })\n    .then(modal => {\n        if (editEnrolLink) {\n            modal.getRoot().on('click', Selectors.editEnrolment, e => {\n                e.preventDefault();\n                modal.hide();\n\n                // Trigger click event for the edit enrolment link to show the edit enrolment modal.\n                editEnrolLink.click();\n            });\n        }\n\n        modal.show();\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => modal.destroy());\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the edit dialogue.\n *\n * @param {HTMLElement} clickedLink\n * @param {Function} getBody\n * @param {Object} modal\n * @param {Number} userEnrolmentId\n * @param {Object} userData\n */\nconst submitEditFormAjax = (clickedLink, getBody, modal, userEnrolmentId, userData) => {\n    const form = modal.getRoot().find('form');\n\n    Repository.submitUserEnrolmentForm(form.serialize())\n    .then(data => {\n        if (!data.result) {\n            throw data.result;\n        }\n\n        // Dismiss the modal.\n        modal.hide();\n        modal.destroy();\n\n        return data;\n    })\n    .then(() => {\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\n        .catch(Notification.exception);\n\n        return Str.get_string('enrolmentupdatedforuser', 'core_enrol', userData);\n    })\n    .then(notificationString => {\n        notifyUser(notificationString);\n\n        return;\n    })\n    .catch(() => {\n        modal.setBody(getBody(userEnrolmentId, JSON.stringify(form.serialize())));\n\n        return modal;\n    });\n};\n\n/**\n * Submit the unenrolment form.\n *\n * @param {HTMLElement} clickedLink\n * @param {Object} modal\n * @param {Object} args\n * @param {Object} userData\n */\nconst submitUnenrolFormAjax = (clickedLink, modal, args, userData) => {\n    Repository.unenrolUser(args.ueid)\n    .then(data => {\n        if (!data.result) {\n            // Display an alert containing the error message\n            Notification.alert(data.errors[0].key, data.errors[0].message);\n\n            return data;\n        }\n\n        // Dismiss the modal.\n        modal.hide();\n        modal.destroy();\n\n        return data;\n    })\n    .then(() => {\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\n        .catch(Notification.exception);\n\n        return Str.get_string('unenrolleduser', 'core_enrol', userData);\n    })\n    .then(notificationString => {\n        notifyUser(notificationString);\n\n        return;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Get the body fragment.\n *\n * @param {Number} contextId\n * @param {Number} ueid The user enrolment id\n * @param {Object} formdata\n * @returns {Promise}\n */\nconst getBody = (contextId, ueid, formdata = null) => Fragment.loadFragment(\n    'enrol',\n    'user_enrolment_form',\n    contextId,\n    {\n        ueid,\n        formdata,\n    }\n);\n\n/**\n * Initialise the statu field handler.\n *\n * @param {object} param\n * @param {Number} param.contextid\n * @param {Number} param.uniqueid\n */\nexport const init = ({contextid, uniqueid}) => {\n    registerEventListeners(contextid, uniqueid);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DynamicTable","Repository","Str","_selectors","_fragment","_modal_events","_modal_factory","_notification","_templates","Selectors","getDynamicTableFromLink","link","closest","DynamicTableSelectors","main","region","getStatusContainer","getUserEnrolmentIdFromLink","getAttribute","showEditDialogue","getBody","container","userEnrolmentId","ModalFactory","create","large","title","get_string","dataset","fullname","type","types","SAVE_CANCEL","body","then","modal","getRoot","on","ModalEvents","save","e","preventDefault","submitEditFormAjax","hidden","destroy","show","catch","Notification","exception","showUnenrolConfirmation","submitUnenrolFormAjax","ueid","stringData","component","param","user","course","coursename","enrolinstancename","Promise","all","get_strings","_ref","strings","setTitle","setSaveButtonText","setBody","showStatusDetails","context","editenrollink","statusclass","querySelector","editEnrolLink","outerHTML","CANCEL","Templates","render","hide","click","clickedLink","userData","form","find","submitUserEnrolmentForm","serialize","data","result","refreshTableContent","notificationString","notifyUser","JSON","stringify","args","unenrolUser","alert","errors","message","contextId","formdata","arguments","length","undefined","Fragment","loadFragment","_exports","init","_ref2","contextid","uniqueid","registerEventListeners","uniqueId","getBodyFunction","formData","document","addEventListener","target","fromRegionId","editLink","unenrolLink","showDetailsLink"],"mappings":"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"}