{"version":3,"file":"dashboard.min.js","sources":["../src/dashboard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This script serves to allow viewing the Student Dashboard as a teacher/\n * non-editing teacher. Selecting a student will update the UI with the\n * results of all assessments and their status. Pagination and sorting are\n * also available, however, some modifications have been made to accommodate\n * the plugin's shortcomings.\n *\n * @module     local_gustaffview/dashboard\n * @author     Greg Pedder <greg.pedder@glasgow.ac.uk>\n * @copyright  2023 University of Glasgow\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport * as Log from 'core/log';\n\nconst Selectors = {\n    DASHBOARD_BLOCK: '#tmpContainer'\n};\n\n/**\n * @param {obj} event\n * @constructor\n */\nconst UpdateDashboard = (event) => {\n    let studentid;\n    let params;\n\n    if (event.target.selectedOptions !== undefined) {\n        studentid = event.target.selectedOptions[0].value;\n    } else {\n        studentid = document.querySelector('#selectstudent').selectedOptions[0].value;\n    }\n\n    let urlParams = new URLSearchParams(window.location.search);\n    let courseid = urlParams.get('courseid');\n    let tempPanel = document.querySelector(Selectors.DASHBOARD_BLOCK);\n    tempPanel.innerHTML = '';\n\n    if (courseid > 0 && studentid > 0) {\n\n        tempPanel.insertAdjacentHTML(\"afterbegin\",\"<div class='loader d-flex justify-content-center'>\\n\" +\n            \"<div class='spinner-border text-primary' role='status'><span class='hidden'>Loading...</span></div></div>\");\n\n        params = '?courseid=' + courseid + '&studentid=' + studentid;\n\n        if (event.target.dataset.ts) {\n            params += '&ts=' + event.target.dataset.ts;\n        }\n\n        if (event.target.dataset.tdr) {\n            params += '&tdr=' + event.target.dataset.tdr;\n        }\n\n        if (event.target.dataset.page) {\n            params += '&page=' + event.target.dataset.page;\n        }\n\n        // I'm supposed to be using Moodle's webservice here, however,\n        // that involves either hooking into the other plugin's code,\n        // writing a service from scratch (which, if it's only meant to\n        // send JSON data back requires additional templating, classes\n        // etc) or, to get this working, do things this way, for now of course.\n        fetch('dashboard_panel.php' + params, {\n            method: \"GET\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"text/plain\",\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\"\n        })\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(`HTTP error, status = ${response.status}`);\n            }\n            return response.text();\n        })\n        .then((html) => {\n            document.querySelector('.loader').remove();\n            let tempContainer = document.querySelector(Selectors.DASHBOARD_BLOCK);\n            tempContainer.innerHTML = html;\n\n            // Search for the sortable headings, bind a change event which\n            // calls UpdateDashboard again, passing in the thing to sort.\n            // Create a temp store for anything that's been sorted. This will\n            // be used when iterating through the pagination nodes and adding\n            // the thing to be sorted to that also.\n            let sort_item = '';\n            let sort_direction;\n            let tmpHeaders = document.querySelectorAll(\".header>a\");\n            tmpHeaders.forEach(header => {\n                header.addEventListener('click', UpdateDashboard);\n                if (header.children.length > 0) {\n                    sort_item = header.children[0].dataset.ts;\n                    sort_direction = header.children[0].dataset.tdr;\n                }\n            });\n\n            // Same again, this time for the pagination...\n            let tmpPagination = document.querySelectorAll(\".pagination>li>a:not([aria-current='page'])\");\n            tmpPagination.forEach(pageLink => {\n                pageLink.href = \"#\";\n                let pageNumber = (pageLink.parentElement.dataset.pageNumber > 0) ? pageLink.parentElement.dataset.pageNumber-1 : 0;\n                pageLink.setAttribute('data-page', pageNumber);\n                pageLink.addEventListener('click', function(event){\n                    event.target.dataset.page = pageNumber;\n                    if (sort_item !== '') {\n                        event.target.dataset.ts = sort_item;\n                        // We need to reverse this here, as it screws up and sorts everything\n                        // in the opposite direction otherwise. The approach taken for this is\n                        // only suitable for 1 page of results - it's not been coded (well)\n                        // to work over multiple pages :-(\n                        event.target.dataset.tdr = ((sort_direction === \"3\") ? \"4\" : \"3\");\n                    }\n                    UpdateDashboard(event);\n                });\n            });\n        }).catch((error) => {\n            document.querySelector(Selectors.DASHBOARD_BLOCK).innerHTML = '<div class=\"alert alert-danger\" ' +\n            'role=\"alert\">Something went wrong.</div>';\n            Log.debug(`Error: ${error.message}`);\n        });\n    }\n};\n\nconst registerEventListeners = () => {\n    document.querySelector('#selectstudent').addEventListener('change', UpdateDashboard);\n   // If the page is refreshed, trigger the change handler again...\n   if (document.querySelector('#selectstudent').selectedOptions[0].value > 0) {\n       document.querySelector('#selectstudent').dispatchEvent(new Event(\"change\"));\n   }\n};\n\nexport const init = () => {\n    registerEventListeners();\n};"],"names":["Selectors","UpdateDashboard","event","studentid","params","undefined","target","selectedOptions","value","document","querySelector","courseid","URLSearchParams","window","location","search","get","tempPanel","innerHTML","insertAdjacentHTML","dataset","ts","tdr","page","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","then","response","ok","Error","status","text","html","remove","sort_direction","sort_item","querySelectorAll","forEach","header","addEventListener","children","length","pageLink","href","pageNumber","parentElement","setAttribute","catch","error","Log","debug","message","dispatchEvent","Event"],"mappings":"21CAgCMA,0BACe,gBAOfC,gBAAkB,SAAlBA,gBAAmBC,WACjBC,UACAC,OAGAD,eADiCE,IAAjCH,MAAMI,OAAOC,gBACDL,MAAMI,OAAOC,gBAAgB,GAAGC,MAEhCC,SAASC,cAAc,kBAAkBH,gBAAgB,GAAGC,UAIxEG,SADY,IAAIC,gBAAgBC,OAAOC,SAASC,QAC3BC,IAAI,YACzBC,UAAYR,SAASC,cAAcV,2BACvCiB,UAAUC,UAAY,GAElBP,SAAW,GAAKR,UAAY,IAE5Bc,UAAUE,mBAAmB,aAAa,iKAG1Cf,OAAS,aAAeO,SAAW,cAAgBR,UAE/CD,MAAMI,OAAOc,QAAQC,KACrBjB,QAAU,OAASF,MAAMI,OAAOc,QAAQC,IAGxCnB,MAAMI,OAAOc,QAAQE,MACrBlB,QAAU,QAAUF,MAAMI,OAAOc,QAAQE,KAGzCpB,MAAMI,OAAOc,QAAQG,OACrBnB,QAAU,SAAWF,MAAMI,OAAOc,QAAQG,MAQ9CC,MAAM,sBAAwBpB,OAAQ,CAClCqB,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,gBACW,cAEpBC,SAAU,SACVC,eAAgB,gBAEnBC,MAAK,SAACC,cACEA,SAASC,SACJ,IAAIC,qCAA8BF,SAASG,gBAE9CH,SAASI,UAEnBL,MAAK,SAACM,MACH7B,SAASC,cAAc,WAAW6B,SACd9B,SAASC,cAAcV,2BAC7BkB,UAAYoB,SAQtBE,eADAC,UAAY,GAEChC,SAASiC,iBAAiB,aAChCC,SAAQ,SAAAC,QACfA,OAAOC,iBAAiB,QAAS5C,iBAC7B2C,OAAOE,SAASC,OAAS,IACzBN,UAAYG,OAAOE,SAAS,GAAG1B,QAAQC,GACvCmB,eAAiBI,OAAOE,SAAS,GAAG1B,QAAQE,QAKhCb,SAASiC,iBAAiB,+CAChCC,SAAQ,SAAAK,UAClBA,SAASC,KAAO,QACZC,WAAcF,SAASG,cAAc/B,QAAQ8B,WAAa,EAAKF,SAASG,cAAc/B,QAAQ8B,WAAW,EAAI,EACjHF,SAASI,aAAa,YAAaF,YACnCF,SAASH,iBAAiB,SAAS,SAAS3C,OACxCA,MAAMI,OAAOc,QAAQG,KAAO2B,WACV,KAAdT,YACAvC,MAAMI,OAAOc,QAAQC,GAAKoB,UAK1BvC,MAAMI,OAAOc,QAAQE,IAA2B,MAAnBkB,eAA0B,IAAM,KAEjEvC,gBAAgBC,gBAGzBmD,OAAM,SAACC,OACN7C,SAASC,cAAcV,2BAA2BkB,UAAY,2EAE9DqC,IAAIC,uBAAgBF,MAAMG,6BAalB,WAPhBhD,SAASC,cAAc,kBAAkBmC,iBAAiB,SAAU5C,iBAEjEQ,SAASC,cAAc,kBAAkBH,gBAAgB,GAAGC,MAAQ,GACpEC,SAASC,cAAc,kBAAkBgD,cAAc,IAAIC,MAAM"}