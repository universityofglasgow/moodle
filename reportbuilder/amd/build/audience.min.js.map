{"version":3,"sources":["../src/audience.js"],"names":["reportId","contextId","addAudienceCard","className","title","pendingPromise","Pending","audiencesContainer","document","querySelector","reportSelectors","regions","audienceCardLength","querySelectorAll","audienceCard","length","params","classname","reportid","showormessage","then","html","js","Templates","appendNodeContents","audienceEmptyMessage","audienceForm","initAudienceCardForm","getFormNode","classList","add","addToast","resolve","catch","Notification","exception","editAudienceCard","audienceFormData","id","dataset","instanceid","load","audienceFormContainer","audienceDescription","audienceEdit","actions","remove","disabled","DynamicForm","addEventListener","events","FORM_SUBMITTED","data","detail","innerHTML","description","closeAudienceCardForm","FORM_CANCELLED","removeAudienceCard","deleteAudienceCard","audienceTitle","saveCancelPromise","NewAudienceFormContainer","cloneNode","replaceChild","audienceDelete","audienceCards","audienceFirstCardSeparator","initialized","init","contextid","event","audienceAdd","target","closest","preventDefault","uniqueIdentifier","name","audienceEditCard","audienceDeleteCard"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder audiences\n *\n * @module      core_reportbuilder/audience\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport DynamicForm from 'core_form/dynamicform';\nimport {add as addToast} from 'core/toast';\nimport {deleteAudience} from 'core_reportbuilder/local/repository/audiences';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {loadFragment} from 'core/fragment';\nimport {markFormAsDirty} from 'core_form/changechecker';\n\nlet reportId = 0;\nlet contextId = 0;\n\n/**\n * Add audience card\n *\n * @param {String} className\n * @param {String} title\n */\nconst addAudienceCard = (className, title) => {\n    const pendingPromise = new Pending('core_reportbuilder/audience:add');\n\n    const audiencesContainer = document.querySelector(reportSelectors.regions.audiencesContainer);\n    const audienceCardLength = audiencesContainer.querySelectorAll(reportSelectors.regions.audienceCard).length;\n\n    const params = {\n        classname: className,\n        reportid: reportId,\n        showormessage: (audienceCardLength > 0),\n        title: title,\n    };\n\n    // Load audience card fragment, render and then initialise the form within.\n    loadFragment('core_reportbuilder', 'audience_form', contextId, params)\n        .then((html, js) => {\n            const audienceCard = Templates.appendNodeContents(audiencesContainer, html, js)[0];\n            const audienceEmptyMessage = audiencesContainer.querySelector(reportSelectors.regions.audienceEmptyMessage);\n\n            const audienceForm = initAudienceCardForm(audienceCard);\n            // Mark as dirty new audience form created to prevent users leaving the page without saving it.\n            markFormAsDirty(audienceForm.getFormNode());\n            audienceEmptyMessage.classList.add('hidden');\n\n            return getString('audienceadded', 'core_reportbuilder', title);\n        })\n        .then(addToast)\n        .then(() => pendingPromise.resolve())\n        .catch(Notification.exception);\n};\n\n/**\n * Edit audience card\n *\n * @param {Element} audienceCard\n */\nconst editAudienceCard = audienceCard => {\n    const pendingPromise = new Pending('core_reportbuilder/audience:edit');\n\n    const audienceForm = initAudienceCardForm(audienceCard);\n    const audienceFormData = {\n        reportid: reportId,\n        id: audienceCard.dataset.instanceid,\n        classname: audienceCard.dataset.classname\n    };\n\n    // Load audience form with data for editing, then toggle visible controls in the card.\n    audienceForm.load(audienceFormData)\n        .then(() => {\n            const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\n            const audienceDescription = audienceCard.querySelector(reportSelectors.regions.audienceDescription);\n            const audienceEdit = audienceCard.querySelector(reportSelectors.actions.audienceEdit);\n\n            audienceFormContainer.classList.remove('hidden');\n            audienceDescription.classList.add('hidden');\n            audienceEdit.disabled = true;\n\n            return pendingPromise.resolve();\n        })\n        .catch(Notification.exception);\n};\n\n/**\n * Initialise dynamic form within given audience card\n *\n * @param {Element} audienceCard\n * @return {DynamicForm}\n */\nconst initAudienceCardForm = audienceCard => {\n    const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\n    const audienceForm = new DynamicForm(audienceFormContainer, '\\\\core_reportbuilder\\\\form\\\\audience');\n\n    // After submitting the form, update the card instance and description properties.\n    audienceForm.addEventListener(audienceForm.events.FORM_SUBMITTED, data => {\n        const audienceDescription = audienceCard.querySelector(reportSelectors.regions.audienceDescription);\n\n        audienceCard.dataset.instanceid = data.detail.instanceid;\n        audienceDescription.innerHTML = data.detail.description;\n\n        closeAudienceCardForm(audienceCard);\n\n        return getString('audiencesaved', 'core_reportbuilder')\n            .then(addToast);\n    });\n\n    // If cancelling the form, close the card or remove it if it was never created.\n    audienceForm.addEventListener(audienceForm.events.FORM_CANCELLED, () => {\n        if (audienceCard.dataset.instanceid > 0) {\n            closeAudienceCardForm(audienceCard);\n        } else {\n            removeAudienceCard(audienceCard);\n        }\n    });\n\n    return audienceForm;\n};\n\n/**\n * Delete audience card\n *\n * @param {Element} audienceCard\n */\nconst deleteAudienceCard = audienceCard => {\n    const audienceTitle = audienceCard.dataset.title;\n\n    Notification.saveCancelPromise(\n        getString('deleteaudience', 'core_reportbuilder', audienceTitle),\n        getString('deleteaudienceconfirm', 'core_reportbuilder', audienceTitle),\n        getString('delete', 'core')\n    ).then(() => {\n        const pendingPromise = new Pending('core_reportbuilder/audience:delete');\n\n        return deleteAudience(reportId, audienceCard.dataset.instanceid)\n            .then(() => addToast(getString('audiencedeleted', 'core_reportbuilder', audienceTitle)))\n            .then(() => {\n                removeAudienceCard(audienceCard);\n                return pendingPromise.resolve();\n            })\n            .catch(Notification.exception);\n    }).catch(() => {\n        return;\n    });\n};\n\n/**\n * Close audience card form\n *\n * @param {Element} audienceCard\n */\nconst closeAudienceCardForm = audienceCard => {\n    // Remove the [data-region=\"audience-form-container\"] (with all the event listeners attached to it), and create it again.\n    const audienceFormContainer = audienceCard.querySelector(reportSelectors.regions.audienceFormContainer);\n    const NewAudienceFormContainer = audienceFormContainer.cloneNode(false);\n    audienceCard.querySelector(reportSelectors.regions.audienceForm).replaceChild(NewAudienceFormContainer, audienceFormContainer);\n    // Show the description container and enable the action buttons.\n    audienceCard.querySelector(reportSelectors.regions.audienceDescription).classList.remove('hidden');\n    audienceCard.querySelector(reportSelectors.actions.audienceEdit).disabled = false;\n    audienceCard.querySelector(reportSelectors.actions.audienceDelete).disabled = false;\n};\n\n/**\n * Remove audience card\n *\n * @param {Element} audienceCard\n */\nconst removeAudienceCard = audienceCard => {\n    audienceCard.remove();\n\n    const audiencesContainer = document.querySelector(reportSelectors.regions.audiencesContainer);\n    const audienceCards = audiencesContainer.querySelectorAll(reportSelectors.regions.audienceCard);\n\n    // Show message if there are no cards remaining, ensure first card's separator is not present.\n    if (audienceCards.length === 0) {\n        const audienceEmptyMessage = document.querySelector(reportSelectors.regions.audienceEmptyMessage);\n        audienceEmptyMessage.classList.remove('hidden');\n    } else {\n        const audienceFirstCardSeparator = audienceCards[0].querySelector('.audience-separator');\n        audienceFirstCardSeparator?.remove();\n    }\n};\n\nlet initialized = false;\n\n/**\n * Initialise audiences tab.\n *\n * @param {Number} id\n * @param {Number} contextid\n */\nexport const init = (id, contextid) => {\n    prefetchStrings('core_reportbuilder', [\n        'audienceadded',\n        'audiencedeleted',\n        'audiencesaved',\n        'deleteaudience',\n        'deleteaudienceconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    reportId = id;\n    contextId = contextid;\n\n    if (initialized) {\n        // We already added the event listeners (can be called multiple times by mustache template).\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Add instance.\n        const audienceAdd = event.target.closest(reportSelectors.actions.audienceAdd);\n        if (audienceAdd) {\n            event.preventDefault();\n            addAudienceCard(audienceAdd.dataset.uniqueIdentifier, audienceAdd.dataset.name);\n        }\n\n        // Edit instance.\n        const audienceEdit = event.target.closest(reportSelectors.actions.audienceEdit);\n        if (audienceEdit) {\n            const audienceEditCard = audienceEdit.closest(reportSelectors.regions.audienceCard);\n\n            event.preventDefault();\n            editAudienceCard(audienceEditCard);\n        }\n\n        // Delete instance.\n        const audienceDelete = event.target.closest(reportSelectors.actions.audienceDelete);\n        if (audienceDelete) {\n            const audienceDeleteCard = audienceDelete.closest(reportSelectors.regions.audienceCard);\n\n            event.preventDefault();\n            deleteAudienceCard(audienceDeleteCard);\n        }\n    });\n\n    initialized = true;\n};\n"],"file":"audience.min.js"}