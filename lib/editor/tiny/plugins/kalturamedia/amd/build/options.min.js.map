{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Options helper for the Moodle tiny_kalturamedia plugin.\n *\n * @module      tiny_kalturamedia/options\n * @copyright   2023 Roi Levi <roi.levi@kaltura.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\n// Helper variables for the option names.\nconst contextIdName = getPluginOptionName(pluginName, 'contextid');\n\n/**\n * Options registration function.\n *\n * @param {tinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    // For each option, register it with the editor.\n    // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\n    registerOption(contextIdName, {\n        processor: 'number',\n    });\n};\n\n/**\n * Fetch the contextId value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the myFirstProperty option\n */\nexport const getContextId = (editor) => editor.options.get(contextIdName);\n"],"names":["contextIdName","pluginName","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MAgCMA,eAAgB,gCAAoBC,mBAAY,+BAO7BC,UAKrBC,EAJuBD,OAAOE,QAAQC,UAIvBL,cAAe,CAC1BM,UAAW,kCAUUJ,QAAWA,OAAOE,QAAQG,IAAIP"}