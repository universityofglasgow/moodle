define("tiny_generico/commands",["exports","editor_tiny/utils","core/str","./common","./widget_selector","./options"],(function(_exports,_utils,_str,_common,_widget_selector,_options){var obj;
/**
   * Commands helper for the Moodle tiny_generico plugin.
   *
   * @module      tiny_generico/commands
   * @copyright   2023 Justin Hunt <justin@poodll.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,_widget_selector=(obj=_widget_selector)&&obj.__esModule?obj:{default:obj};_exports.getSetup=async()=>{const[widgetsButtonNameTitle,widgetsMenuItemNameTitle,widgetsIcon]=await Promise.all([(0,_str.get_string)("button_widgets",_common.component),(0,_str.get_string)("menuitem_widgets",_common.component),(0,_utils.getButtonImage)("widgets",_common.component)]);return editor=>{editor.ui.registry.addIcon("genericowidgetsicon",widgetsIcon.html),(0,_options.getConfig)(editor).disabled||(editor.ui.registry.addButton(_common.widgetsButtonName,{icon:"genericowidgetsicon",tooltip:widgetsButtonNameTitle,onAction:()=>_widget_selector.default.display(editor)}),editor.ui.registry.addMenuItem(_common.widgetsMenuItemName,{icon:"genericowidgetsicon",text:widgetsMenuItemNameTitle,onAction:()=>_widget_selector.default.display(editor)}))}}}));

//# sourceMappingURL=commands.min.js.map