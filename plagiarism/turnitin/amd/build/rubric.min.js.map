{"version":3,"sources":["../src/rubric.js"],"names":["define","$","Templates","ModalFactory","ModalEvents","ModalRubricManagerLaunch","ModalRubricViewLaunch","rubric","that","on","courseid","data","cmid","rubricCreateModal","TYPE","document","mousedown","val","confirm","M","str","plagiarism_turnitin","changerubricwarning","modalType","create","type","templateContext","wwwroot","cfg","large","then","modal","show","getRoot","find","addClass"],"mappings":"AASAA,OAAM,8BAAC,CAAC,QAAD,CACC,gBADD,CAEC,oBAFD,CAGC,mBAHD,CAIC,iDAJD,CAKC,8CALD,CAAD,CAOF,SAASC,CAAT,CAAYC,CAAZ,CAAuBC,CAAvB,CAAqCC,CAArC,CAAkDC,CAAlD,CAA4EC,CAA5E,CAAmG,CAC/F,MAAO,CACHC,MAAM,CAAE,iBAAW,CACf,GAAIC,CAAAA,CAAI,CAAG,IAAX,CACAP,CAAC,CAAC,wBAAD,CAAD,CAA4BQ,EAA5B,CAA+B,OAA/B,CAAwC,UAAW,IAC3CC,CAAAA,CAAQ,CAAGT,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,UAAb,CADgC,CAE3CC,CAAI,CAAGX,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,MAAb,CAFoC,CAG/CH,CAAI,CAACK,iBAAL,CAAuBR,CAAwB,CAACS,IAAhD,CAAsDJ,CAAtD,CAAgEE,CAAhE,CACH,CAJD,EAMAX,CAAC,CAACc,QAAD,CAAD,CAAYN,EAAZ,CAAe,OAAf,CAAwB,cAAxB,CAAwC,UAAW,IAC3CC,CAAAA,CAAQ,CAAGT,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,UAAb,CADgC,CAE3CC,CAAI,CAAGX,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,MAAb,CAFoC,CAG/CH,CAAI,CAACK,iBAAL,CAAuBP,CAAqB,CAACQ,IAA7C,CAAmDJ,CAAnD,CAA6DE,CAA7D,CACH,CAJD,EAOAX,CAAC,CAAC,uBAAD,CAAD,CAA2Be,SAA3B,CAAqC,UAAY,CAC7C,GAAyC,EAArC,EAAAf,CAAC,CAAC,0BAAD,CAAD,CAA4BgB,GAA5B,IAA2F,GAAhD,EAAAhB,CAAC,CAAC,qCAAD,CAAD,CAAuCgB,GAAvC,EAA/C,CAAoG,CAChG,GAAIC,OAAO,CAACC,CAAC,CAACC,GAAF,CAAMC,mBAAN,CAA0BC,mBAA3B,CAAX,CAA4D,CACxDrB,CAAC,CAAC,qCAAD,CAAD,CAAuCgB,GAAvC,CAA2C,GAA3C,CACH,CACJ,CACJ,CAND,CAOH,CAvBE,CAwBHJ,iBAAiB,CAAE,2BAASU,CAAT,CAAoBb,CAApB,CAA8BE,CAA9B,CAAoC,CACnDT,CAAY,CAACqB,MAAb,CAAoB,CAChBC,IAAI,CAAEF,CADU,CAEhBG,eAAe,CAAE,CACbhB,QAAQ,CAAEA,CADG,CAEbE,IAAI,CAAEA,CAFO,CAGbe,OAAO,CAAER,CAAC,CAACS,GAAF,CAAMD,OAHF,CAFD,CAOhBE,KAAK,GAPW,CAApB,EASKC,IATL,CASU,SAAUC,CAAV,CAAiB,CACnBA,CAAK,CAACC,IAAN,GACAD,CAAK,CAACE,OAAN,GAAgBC,IAAhB,CAAqB,QAArB,EAA+BC,QAA/B,CAAwC,qBAAxC,EACAJ,CAAK,CAACE,OAAN,GAAgBC,IAAhB,CAAqB,gBAArB,EAAuCC,QAAvC,CAAgD,6BAAhD,CACH,CAbL,CAcH,CAvCE,CAyCV,CAjDC,CAAN","sourcesContent":["/**\n * Javascript controller for handling rubrics.\n *\n * @package   turnitin\n * @copyright Turnitin\n * @author 2019 David Winn <dwinn@turnitin.com>\n * @module plagiarism_turnitin/rubric\n */\n\ndefine(['jquery',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'plagiarism_turnitin/modal_rubric_manager_launch',\n        'plagiarism_turnitin/modal_rubric_view_launch'\n    ],\n    function($, Templates, ModalFactory, ModalEvents, ModalRubricManagerLaunch, ModalRubricViewLaunch) {\n        return {\n            rubric: function() {\n                var that = this;\n                $('.rubric_manager_launch').on('click', function() {\n                    var courseid = $(this).data('courseid');\n                    var cmid = $(this).data('cmid');\n                    that.rubricCreateModal(ModalRubricManagerLaunch.TYPE, courseid, cmid);\n                });\n\n                $(document).on('click', '.rubric_view', function() {\n                    var courseid = $(this).data('courseid');\n                    var cmid = $(this).data('cmid');\n                    that.rubricCreateModal(ModalRubricViewLaunch.TYPE, courseid, cmid);\n                });\n\n                // Show warning when changing the rubric linked to an assignment.\n                $('#id_plagiarism_rubric').mousedown(function () {\n                    if ($('input[name=\"instance\"]').val() != '' && $('input[name=\"rubric_warning_seen\"]').val() != 'Y') {\n                        if (confirm(M.str.plagiarism_turnitin.changerubricwarning)) {\n                            $('input[name=\"rubric_warning_seen\"]').val('Y');\n                        }\n                    }\n                });\n            },\n            rubricCreateModal: function(modalType, courseid, cmid) {\n                ModalFactory.create({\n                    type: modalType,\n                    templateContext: {\n                        courseid: courseid,\n                        cmid: cmid,\n                        wwwroot: M.cfg.wwwroot\n                    },\n                    large: true\n                })\n                    .then(function (modal) {\n                        modal.show();\n                        modal.getRoot().find('.modal').addClass('tii_pp_modal_rubric');\n                        modal.getRoot().find('.modal-content').addClass('tii_pp_modal_rubric_content');\n                    });\n            }\n        };\n    });\n"],"file":"rubric.min.js"}