{"version":3,"file":"popup-notification-queue.min.js","sources":["../src/popup-notification-queue.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification popup queue.\n *\n * @copyright  2022 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import Ajax from 'core/ajax';\nimport * as PopupNotification from 'block_xp/popup-notification';\n\nlet instances = [];\nlet isShowing = false;\n\n/**\n * Notify received new instance.\n */\nfunction notifyNewInstance() {\n    if (!isShowing) {\n        showNextInstance();\n    }\n}\n\n/**\n * Show next instance.\n */\nfunction showNextInstance() {\n    if (!instances.length) {\n        return;\n    }\n    const instance = instances.splice(0, 1)[0];\n    PopupNotification.show(instance, {\n        onShown: () => {\n            // Ajax.call([{\n            //     methodname: 'block_xp_mark_popup_notification_seen',\n            //     args: {\n            //         courseid: instance.courseid,\n            //         level: instance.levelnum\n            //     }\n            // }])[0].fail();\n        },\n        onDismissed: () => {\n            isShowing = false;\n            setTimeout(() => showNextInstance(), 500);\n        }\n    });\n}\n\n/**\n * Queue instances.\n *\n * @param {Object[]} additionalInstances The instances.\n */\nfunction queue(additionalInstances) {\n    instances = instances.concat(additionalInstances);\n    notifyNewInstance();\n}\n\n/**\n * Queue from JSON node.\n *\n * @param {String} selector The JSON node selector.\n */\nconst queueFromJson = (selector) => {\n    try {\n        const node = document.querySelector(selector);\n        const data = node ? JSON.parse(node.textContent) : null;\n        if (!Array.isArray(data)) {\n            throw new Error('That\\'s a bit strange.');\n        }\n        queue(data);\n    } catch (err) {\n        // Nothing.\n    }\n};\n\nexport {queue, queueFromJson};\n"],"names":["instances","isShowing","notifyNewInstance","showNextInstance","length","instance","splice","PopupNotification","show","onShown","onDismissed","setTimeout","queue","additionalInstances","concat","selector","node","document","querySelector","data","JSON","parse","textContent","Array","isArray","Error","err"],"mappings":";;;;;;;6BA0BIA,UAAY,GACZC,WAAY,WAKPC,oBACAD,WACDE,4BAOCA,uBACAH,UAAUI,oBAGTC,SAAWL,UAAUM,OAAO,EAAG,GAAG,GACxCC,kBAAkBC,KAAKH,SAAU,CAC7BI,QAAS,OASTC,YAAa,KACTT,WAAY,EACZU,YAAW,IAAMR,oBAAoB,iBAUxCS,MAAMC,qBACXb,UAAYA,UAAUc,OAAOD,qBAC7BX,2CAQmBa,qBAETC,KAAOC,SAASC,cAAcH,UAC9BI,KAAOH,KAAOI,KAAKC,MAAML,KAAKM,aAAe,SAC9CC,MAAMC,QAAQL,YACT,IAAIM,MAAM,yBAEpBb,MAAMO,MACR,MAAOO"}