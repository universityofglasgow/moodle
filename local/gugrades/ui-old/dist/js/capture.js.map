{"version":3,"file":"js/capture.js","mappings":"wGAAA,IAAIA,EAAO,EAAQ,MACfC,EAAgB,EAAQ,MACxBC,EAAW,EAAQ,MACnBC,EAAoB,EAAQ,MAG5BC,EAAe,SAAUC,GAC3B,IAAIC,EAA6B,GAARD,EACzB,OAAO,SAAUE,EAAOC,EAAYC,GAClC,IAIIC,EAAOC,EAJPC,EAAIV,EAASK,GACbM,EAAOZ,EAAcW,GACrBE,EAAgBd,EAAKQ,EAAYC,GACjCM,EAAQZ,EAAkBU,GAE9B,MAAOE,KAAU,EAGf,GAFAL,EAAQG,EAAKE,GACbJ,EAASG,EAAcJ,EAAOK,EAAOH,GACjCD,EAAQ,OAAQN,GAClB,KAAK,EAAG,OAAOK,EACf,KAAK,EAAG,OAAOK,EAGnB,OAAOT,GAAsB,OAAIU,CACnC,CACF,EAEAC,EAAOC,QAAU,CAGfC,SAAUf,EAAa,GAGvBgB,cAAehB,EAAa,G,uBChC9B,IAAIiB,EAAc,EAAQ,MACtBC,EAAY,EAAQ,MACpBC,EAAc,EAAQ,MAEtBvB,EAAOqB,EAAYA,EAAYrB,MAGnCiB,EAAOC,QAAU,SAAUM,EAAIf,GAE7B,OADAa,EAAUE,QACMR,IAATP,EAAqBe,EAAKD,EAAcvB,EAAKwB,EAAIf,GAAQ,WAC9D,OAAOe,EAAGC,MAAMhB,EAAMiB,UACxB,CACF,C,oCCXA,IAAIC,EAAI,EAAQ,MACZC,EAAY,iBACZC,EAAmB,EAAQ,MAI/BF,EAAE,CAAEG,OAAQ,QAASC,OAAO,GAAQ,CAClCZ,SAAU,SAAkBX,GAC1B,OAAOoB,EAAUI,KAAMxB,EAAYkB,UAAUO,OAAS,EAAIP,UAAU,QAAKV,EAC3E,IAGFa,EAAiB,W,uBCZjB,EAAQ,K,uJCiBR,SAASK,EAAKC,EAAMD,GAAM,MACJ,oBAATA,EAAsBA,EAAO,CAAEE,SAAS,GAC1B,iBAATF,IACdG,QAAQC,KAAK,sDACbJ,EAAO,CAAEE,SAAUF,IAKjBA,EAAKE,SAAW,6EAA6EG,KAAKJ,EAAKK,MAClG,IAAIC,KAAK,CAAC,SAA6BN,GAAO,CAAEK,KAAML,EAAKK,OAE7DL,CAGT,UAASO,EAAUP,EAAKD,EAAMQ,GAC5B,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOV,GAChBQ,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACXC,EAAOL,EAAIM,SAAUf,EAAMQ,EALK,EAOlCC,EAAIO,QAAU,WACZb,QAAQc,MAAM,0BARkB,EAUlCR,EAAIS,MAGN,UAAST,EAAaR,GACpB,IAAID,EAAM,IAAIU,eAEdV,EAAIW,KAAK,OAAQV,GAAjB,GACA,IACED,EAAIkB,MAEN,CADE,MAAOjB,GACT,QAAqB,KAAdD,EAAImB,QAA+B,KAAdnB,EAAImB,MAIlC,UAASC,EAAOnB,GACd,IACEA,EAAKoB,cAAc,IAAIC,WAAW,SAOrC,CANG,MAAOd,GACP,IAAIR,EAAMuB,SAASC,YAAY,eAC/BxB,EAAIyB,eAAe,SAAnB,KAAwCC,OAAQ,EAAG,EAAG,EAAG,GACnC,IADtB,WACsD,EAAG,MACzDzB,EAAKoB,cAAcrB,EAEtB,C,KAtDG2B,EAA4B,iBAAXD,QAAuBA,OAAOA,SAAWA,OAC1DA,OAAyB,iBAAT/C,MAAqBA,KAAKA,OAASA,KACnDA,KAAyB,iBAAXiD,EAAAA,GAAuBA,EAAAA,EAAOA,SAAWA,EAAAA,EACvDA,EAAAA,OADO,EAyDP3B,EAAiB0B,EAAQE,WAAa,YAAYxB,KAAKwB,UAAUC,YAAc,cAAczB,KAAKwB,UAAUC,aAAe,SAASzB,KAAKwB,UAAUC,WAEnJhB,EAASa,EAAQI,SAEA,iBAAXL,QAAuBA,SAAWC,EACtC,WADJ,EAIG,aAAcK,kBAAkBC,YAAchC,EAC/C,SAAiBD,EAAMc,EAAMoB,GAAM,IAC/BC,EAAMR,EAAQS,KAAOT,EAAQU,UAC7BC,EAAIf,SAASgB,cAAc,KAC/BzB,EAAOA,GAAQd,EAAKwC,MAAQ,WAE5BF,EAAEG,SAAW3B,EACbwB,EAAEI,IAAM,WAKY,iBAAT1C,GAETsC,EAAEK,KAAO3C,EACLsC,EAAEM,SAAWC,SAASD,OAKxBxB,EAAMkB,GAJN7B,EAAY6B,EAAEK,MACVnC,EAASR,EAAMc,EAAMoB,GACrBd,EAAMkB,EAAGA,EAAE1C,OAAS,YAM1B0C,EAAEK,KAAOR,EAAIW,gBAAgB9C,GAC7B+C,YAAW,WAAcZ,EAAIa,gBAAgBV,EAAEK,KAArC,GAA8C,KACxDI,YAAW,WAAc3B,EAAMkB,EAArB,GAA2B,GA1BvC,EA+BA,qBAAsBT,UACtB,SAAiBF,EAAMb,EAAMoB,GAG7B,GAFApB,EAAOA,GAAQa,EAAKa,MAAQ,WAER,iBAATb,EAUTE,UAAUoB,iBAAiBjD,EAAI2B,EAAMO,GAAOpB,QAT5C,GAAIL,EAAYkB,GACdnB,EAASmB,EAAMb,EAAMoB,OAChB,CACL,IAAIC,EAAIZ,SAASgB,cAAc,KAC/BJ,EAAEQ,KAAOhB,EACTQ,EAAEvC,OAAS,SACXmD,YAAW,WAAc3B,EAAMe,EAArB,GAKf,CAhBC,EAmBA,SAAiBnC,EAAMS,EAAMW,EAAMN,GASnC,GANAA,EAAQA,GAASH,KAAK,GAAI,UACtBG,IACFA,EAAMS,SAAS2B,MACfpC,EAAMS,SAAS4B,KAAKC,UAAY,kBAGd,iBAATpD,EAAmB,OAAOQ,EAASR,EAAMS,EAAMW,GAThB,IAWtCc,EAAsB,6BAAdlC,EAAKM,KACb6B,EAAW,eAAe9B,KAAKsB,EAAQ0B,cAAgB1B,EAAQ2B,OAC/DhB,EAAc,eAAejC,KAAKwB,UAAUC,WAEhD,IAAKQ,GAAgBJ,GAASC,GAAalC,IAAyC,oBAAfsD,WAA4B,CAE/F,IAAIC,EAAS,IAAID,WACjBC,EAAOC,UAAY,WACjB,IAAIxD,EAAMuD,EAAO/E,OACjBwB,EAAMqC,EAAcrC,EAAMA,EAAIyD,QAAQ,eAAgB,yBAClD5C,EAAOA,EAAM+B,SAASF,KAAO1C,EAC5B4C,SAAW5C,EAChBa,EAAQ,IARqF,EAU/F0C,EAAOG,cAAc3D,EAVvB,KAWO,KACD4D,EAAMjC,EAAQS,KAAOT,EAAQU,UAC7BwB,EAAMD,EAAId,gBAAgB9C,GAC1Bc,EAAOA,EAAM+B,SAAWgB,EACvBhB,SAASF,KAAOkB,EACrB/C,EAAQ,KACRiC,YAAW,WAAca,EAAIZ,gBAAgBa,EAAnC,GAA2C,IAExD,CA1FU,GA6FblC,EAAQI,OAASjB,EAAOiB,OAASjB,EAG/B/B,EAAOC,QAAU8B,C,mCCrKnB9B,EAAQ,EAAU,CAAC8E,EAAKC,KACpB,MAAMnE,EAASkE,EAAIE,WAAaF,EAChC,IAAK,MAAOG,EAAKC,KAAQH,EACrBnE,EAAOqE,GAAOC,EAElB,OAAOtE,CAAP,C,2kBCyBMuE,GAAeC,EAAAA,EAAAA,IAAI,OACnBC,GAAWC,EAAAA,EAAAA,IAAO,YAElBC,GAAWC,EAAAA,EAAAA,KAAS,IACfC,MAAMC,KAAK,mBAGhBC,GAAWH,EAAAA,EAAAA,KAAS,IACfC,MAAMC,KAAK,mBAGtB,SAASE,EAAcC,EAAQC,GAC3BA,EAAMC,iBACNZ,EAAa3F,MAAQqG,EACrBG,EAAK,WAAYH,EACpB,CAED,SAASI,EAAUJ,GACf,OAAOV,EAAa3F,OAASqG,CAChC,C,OAEDK,EAAAA,EAAAA,KAAM,IAAMnB,EAAMoB,WAAWA,IACzBhB,EAAa3F,MAAQ2G,EACrBH,EAAK,WAAYb,EAAa3F,MAA9B,I,0yBCtDR,MAAM4G,EAAc,EAEpB,Q,0GCeI,MAAMC,GAAQjB,EAAAA,EAAAA,IAAI,OACZkB,GAAOlB,EAAAA,EAAAA,IAAI,OACXC,GAAWC,EAAAA,EAAAA,IAAO,YAClBiB,GAAYnB,EAAAA,EAAAA,KAAI,GAStB,SAASoB,EAAeX,GACpBQ,EAAM7G,MAAQqG,EACdU,EAAU/G,MAAwB,OAAf6G,EAAM7G,OAAkC,OAAd8G,EAAK9G,MAClDwG,EAAK,WAAYK,EAAM7G,MAAO8G,EAAK9G,MACtC,CAED,SAASiH,EAAcZ,GACnBS,EAAK9G,MAAQqG,EACbU,EAAU/G,MAAwB,OAAf6G,EAAM7G,OAAkC,OAAd8G,EAAK9G,MAClDwG,EAAK,WAAYK,EAAM7G,MAAO8G,EAAK9G,MACtC,CAKD,SAASkH,IACLL,EAAM7G,MAAQ,MACd8G,EAAK9G,MAAQ,KAChB,C,OAzBDmH,EAAa,CACTD,iB,scCvBR,MAAM,EAAc,EAEpB,Q,6ICcI,MAAME,GAAmBxB,EAAAA,EAAAA,IAAI,IACvByB,GAAWzB,EAAAA,EAAAA,KAAI,GACfC,GAAWC,EAAAA,EAAAA,IAAO,YAKxB,SAASwB,IACL,MAAMC,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,wCACZC,KAAM,CACFH,eAEJ,GACHI,MAAM3H,IACHmH,EAAiBpH,MAAQC,EACJ,GAAjBA,EAAOsB,SACP8F,EAASrH,OAAQ,EACpB,IAEJ6H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,EAArB,GAEP,CAGD,SAASqF,EAAexB,GACpB,MAAMyB,EAAazB,EAAMlF,OAAOpB,MAChCwG,EAAK,cAAeuB,EACvB,C,OAEDC,EAAAA,EAAAA,KAAU,KACNV,GAAa,I,wbCpDrB,MAAM,EAAc,EAEpB,Q,iOCiBI,SAASW,EAAeC,EAAQ5B,GAC5BA,EAAMC,iBACNC,EAAK,mBAAoB0B,EAC5B,CAID,SAASC,EAAmBC,GACxB5B,EAAK,mBAAoB4B,EAC5B,C,8fC5BL,MAAM,EAAc,EAEpB,Q,ydCuBUC,GAAezC,EAAAA,EAAAA,IAAI,CAAC,GACpB0C,GAAe1C,EAAAA,EAAAA,IAAI,IACnB2C,GAAmB3C,EAAAA,EAAAA,IAAI,CAAC,GACxB4C,GAAS5C,EAAAA,EAAAA,KAAI,GACb6C,GAAY7C,EAAAA,EAAAA,KAAI,GAChBC,GAAWC,EAAAA,EAAAA,IAAO,YAGxB,SAAS4C,IACL,MAAMnB,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UACfkB,EAAQpD,EAAMwC,WAEpBN,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVO,WAAYY,MAEhB,GACHf,MAAM3H,IACH,MAAM2I,EAAOC,KAAKC,MAAM7I,EAAO,eAE/BoI,EAAarI,MAAQ4I,EACrBN,EAAatI,MAAQ4I,EAAKG,SAASC,SACnCR,EAAOxI,OAAQ,CAAf,IAEH6H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,EAArB,GAEP,CAGD,SAASwG,EAAkBb,GACvB,MAAMb,EAAKrE,OAAOqE,GACZE,EAAYF,EAAGE,UACrBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFO,OAAQE,MAEZ,GACHR,MAAM3H,IACHsI,EAAiBvI,MAAQC,EACzBwI,EAAUzI,OAAQ,CAAlB,IAEH6H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,EAArB,IAIJ+D,EAAK,mBAAoB4B,EAC5B,CAGD,SAASc,IACLT,EAAUzI,OAAQ,CACrB,C,OAEDgI,EAAAA,EAAAA,KAAU,KACNU,IAGInD,EAAM4D,cACNZ,EAAiBvI,MAAQuF,EAAM4D,YAC/BV,EAAUzI,OAAQ,EACrB,KAKL0G,EAAAA,EAAAA,KAAM,IAAMnB,EAAMwC,aAAY,KAC1BU,EAAUzI,OAAQ,EAClB0I,GAAa,I,6YChGrB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,6HCKI,MAAMU,GAASxD,EAAAA,EAAAA,IAAI,IACbC,GAAWC,EAAAA,EAAAA,IAAO,YAClBuD,GAAkBzD,EAAAA,EAAAA,KAAI,GAO5B,SAAS0D,IACL,MAAM/B,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,4BACZC,KAAM,CACFH,eAEJ,GACHI,MAAM3H,IACHmJ,EAAOpJ,MAAQC,EACfoJ,EAAgBrJ,MAAQoJ,EAAOpJ,MAAMuB,OAAS,CAA9C,IAEHsG,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,EAArB,GAEP,CAGD,SAAS8G,EAAajD,GAClB,MAAMkD,EAAUlD,EAAMlF,OAAOpB,MAC7BwG,EAAK,gBAAiBgD,EACzB,C,OAEDxB,EAAAA,EAAAA,KAAU,KACNsB,GAAY,I,uWC9CpB,MAAM,EAAc,EAEpB,Q,2GCWI,MAAMG,GAAiB7D,EAAAA,EAAAA,IAAI,GACrB8D,GAAqB9D,EAAAA,EAAAA,KAAI,GACzBsC,GAAStC,EAAAA,EAAAA,IAAI,GACb4D,GAAU5D,EAAAA,EAAAA,IAAI,GAQnB,SAASkC,EAAe6B,GACrBzB,EAAOlI,MAAQ,EACfyJ,EAAezJ,MAAQ4J,SAASD,GAC5BF,EAAezJ,MACf0J,EAAmB1J,OAAQ,EAE3B0J,EAAmB1J,OAAQ,CAElC,CAKA,SAASiJ,EAAkBY,GACxB3B,EAAOlI,MAAQ8J,OAAOD,GACtBE,EAAM,iBAAkB,CACpB7B,OAAQA,EAAOlI,MACfwJ,QAASA,EAAQxJ,OAExB,CAKD,SAASgK,EAAcC,GACnBT,EAAQxJ,MAAQ8J,OAAOG,GACvBF,EAAM,iBAAkB,CACpB7B,OAAQA,EAAOlI,MACfwJ,QAASA,EAAQxJ,OAExB,C,wVCtDL,MAAM,EAAc,EAEpB,Q,2QCwBUkK,GAAmBtE,EAAAA,EAAAA,KAAI,GACvBuE,GAASvE,EAAAA,EAAAA,IAAI,IACbC,GAAWC,EAAAA,EAAAA,IAAO,YAClBsE,GAAUxE,EAAAA,EAAAA,IAAI,IAEdyE,GAAQC,EAAAA,GAAAA,MAYd,SAASC,IACL,MAAMhD,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,6BACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBuC,OAAQlF,EAAMkF,WAElB,GACH7C,MAAM3H,IACHkK,EAAOnK,MAAQC,CAAf,IAEH4H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAGJyH,EAAiBlK,OAAQ,CAC5B,C,OAKDgI,EAAAA,EAAAA,KAAU,KACNoC,EAAQpK,MAAQ,CACT,CAAC0K,KAAM7E,EAAS8E,KAAM3K,MAAO,QAC7B,CAAC0K,KAAM7E,EAAS+E,GAAI5K,MAAO,eAC3B,CAAC0K,KAAM7E,EAASgF,MAAO7K,MAAO,gBAC9B,CAAC0K,KAAM7E,EAASiF,UAAW9K,MAAO,eAClC,CAAC0K,KAAM7E,EAASkF,QAAS/K,MAAO,WAChC,CAAC0K,KAAM7E,EAASmF,QAAShL,MAAO,gBANvC,I,+iCCvER,MAAM,GAAc,GAEpB,U,sHCGU6F,GAAWC,EAAAA,EAAAA,IAAO,YAClBuE,GAAQC,EAAAA,GAAAA,MAYb,SAASW,IACN,MAAM1D,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,8BACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBuC,OAAQlF,EAAMkF,WAElB,GACH7C,MAAM3H,IACH,MAAMiL,EAAUjL,EAAO,WACnBiL,EACAb,EAAMa,QAAQrF,EAASsF,mBAEvBd,EAAMe,QAAQvF,EAASwF,iBAE3B7E,EAAK,WAAL,IAEHqB,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,C,+IC5CL,MAAM,GAAc,GAEpB,U,wPCiFU6I,GAAoB1F,EAAAA,EAAAA,KAAI,GACxBC,GAAWC,EAAAA,EAAAA,IAAO,YAClByF,GAAa3F,EAAAA,EAAAA,IAAI,CAAC,GAClB4F,GAAW5F,EAAAA,EAAAA,IAAI,IACf6F,GAAS7F,EAAAA,EAAAA,IAAI,IACb8F,GAAa9F,EAAAA,EAAAA,IAAI,SACjB+F,GAAQ/F,EAAAA,EAAAA,IAAI,IACZiF,GAAQjF,EAAAA,EAAAA,IAAI,GACZgG,GAAQhG,EAAAA,EAAAA,IAAI,IACZiG,GAAQjG,EAAAA,EAAAA,IAAI,IACZkG,GAAWlG,EAAAA,EAAAA,KAAI,GACfmG,GAAWnG,EAAAA,EAAAA,IAAI,GACfoG,GAAYpG,EAAAA,EAAAA,IAAI,IAChBqG,GAAYrG,EAAAA,EAAAA,IAAI,IAChBsG,GAAkBtG,EAAAA,EAAAA,IAAI,IAMtByE,GAAQC,EAAAA,GAAAA,MAYd,SAAS6B,IACL,MAAM5E,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,oCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBuC,OAAQlF,EAAMkF,WAElB,GACH7C,MAAM3H,IACHsL,EAAWvL,MAAQC,EAAO,cAC1BuL,EAASxL,MAAQC,EAAO,YACxB6L,EAAS9L,MAAQC,EAAO,YACxB8L,EAAS/L,MAAQC,EAAO,YACxB+L,EAAUhM,MAAQC,EAAO,aACzBgM,EAAUjM,MAAQC,EAAO,aAGzBgM,EAAUjM,MAAMoM,QAAQ,CACpBpM,MAAO,QACPqM,MAAOxG,EAASyG,oBAGpBJ,EAAgBlM,MAAQ,CACpB,CAAC,YACD,CAAC,UACD,CAAC,UAAW,EAAGC,EAAO,aAH1B,IAMH4H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAGJ6I,EAAkBtL,OAAQ,CAC7B,CAKD,SAASuM,IACL,MAAMhF,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,wCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBuC,OAAQlF,EAAMkF,OACdiB,WAAgC,SAApBA,EAAW1L,MAAmB,GAAK0L,EAAW1L,MAC1DyL,OAAQA,EAAOzL,MACf6L,MAAOA,EAAM7L,MACb2L,MAAOA,EAAM3L,MAAQ2L,EAAM3L,MAAQ,EACnC6K,MAAOA,EAAM7K,MACb4L,MAAOA,EAAM5L,UAEjB,GACH4H,MAAK,KACFpB,EAAK,cACL6D,EAAMa,QAAQrF,EAAS2G,WAAvB,IAEH3E,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAIJ6I,EAAkBtL,OAAQ,CAC7B,C,w+FC7LL,MAAM,GAAc,GAEpB,U,qcC2BI,SAASyM,IACLjG,EAAK,aACR,C,+fC/BL,MAAM,GAAc,GAEpB,U,kfCuBUkG,GAAU1G,EAAAA,EAAAA,KAAS,KACd,CACH,UAAWT,EAAMoH,MACjB,UAAWpH,EAAMoG,U,sGCzB7B,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,U,gnBCsEUtB,GAAQC,EAAAA,GAAAA,MACRsC,GAAc5G,EAAAA,EAAAA,KAAS,IAClBT,EAAMiE,QAAU,IAKrBqD,GAAkBjH,EAAAA,EAAAA,KAAI,GACtBkH,GAAkBlH,EAAAA,EAAAA,KAAI,GACtBmH,GAAqBnH,EAAAA,EAAAA,KAAI,GACzBoH,GAAiBpH,EAAAA,EAAAA,KAAI,GACrBqH,GAAkBrH,EAAAA,EAAAA,KAAI,GACtBsH,GAAmBtH,EAAAA,EAAAA,KAAI,GACvBuH,GAAiBvH,EAAAA,EAAAA,KAAI,GACrBC,GAAWC,EAAAA,EAAAA,IAAO,YAKxB,SAASsH,IACDH,EAAgBjN,MAChBqN,IAEAC,IAGJT,EAAgB7M,OAAQ,CAC3B,CAKA,SAASsN,IACN,MAAM/F,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,qCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBqF,WAAYL,EAAiBlN,MAC7BwN,SAAUjI,EAAMkI,YAEpB,GACH7F,MAAM3H,IACH,MAAMyN,EAAczN,EAAO,eAC3BuG,EAAK,YACDkH,EACArD,EAAMa,QAAQrF,EAAS8H,sBAAwB,KAAOD,EAAc,KAEpErD,EAAMe,QAAQvF,EAAS+H,iBAC1B,IAEJ/F,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAKD,SAAS4K,IACL,MAAM9F,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,yCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBsB,QAASjE,EAAMiE,QACf+D,WAAYL,EAAiBlN,UAEjC,GACH4H,MAAM3H,IACH,MAAM4N,EAAY5N,EAAO4N,UACnBC,EAAa7N,EAAO6N,WAC1BtH,EAAK,YACDsH,EACAzD,EAAMa,QAAQrF,EAAS8H,sBAAwB,KAAOE,EAAY,KAAOC,EAAa,KAEtFzD,EAAMe,QAAQvF,EAAS+H,iBAC1B,IAEJ/F,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAMD,SAASsL,IACLlB,EAAgB7M,OAAQ,EAExB,MAAMuH,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,oCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBsB,QAASjE,EAAMiE,YAEnB,GACH5B,MAAM3H,IACH6M,EAAgB9M,MAAQC,EAAO+N,SAC/BjB,EAAmB/M,MAAQC,EAAO8M,mBAClCC,EAAehN,MAAQC,EAAO+M,eAC9BG,EAAenN,MAAQC,EAAOkN,cAA9B,IAEHtF,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,C,2xECtML,MAAM,GAAc,GAEpB,U,0hBCiFUwL,GAAerI,EAAAA,EAAAA,KAAI,GACnBsI,GAAYtI,EAAAA,EAAAA,IAAI,kBAChBuI,GAAavI,EAAAA,EAAAA,IAAI,IACjBwI,GAAaxI,EAAAA,EAAAA,IAAI,GACjByI,GAAWzI,EAAAA,EAAAA,IAAI,GACf0I,GAAQ1I,EAAAA,EAAAA,IAAI,IACZwE,GAAUxE,EAAAA,EAAAA,IAAI,IACd2F,GAAa3F,EAAAA,EAAAA,IAAI,IACjB6F,GAAS7F,EAAAA,EAAAA,IAAI,IACbiG,GAAQjG,EAAAA,EAAAA,IAAI,IACZ2I,GAAUvI,EAAAA,EAAAA,KAAS,IACdsI,EAAMtO,MAAMwO,MAAM,EAAG,MAE1B3I,GAAWC,EAAAA,EAAAA,IAAO,YAElBuE,GAAQC,EAAAA,GAAAA,MAad,SAASmE,IACL,MAAMlH,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,kCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBsB,QAASjE,EAAMiE,YAEnB,GACH5B,MAAM3H,IACH,MAAMyO,EAAMzO,EAAO,OACbgC,EAAI,IAAI0M,KACRC,EAAWrJ,EAAMsJ,SAAW,IAAM5M,EAAE6M,iBAAmB,OACvDC,EAAO,IAAIhN,KAAK,CAAC2M,GAAM,CAAC5M,KAAM,4BACpCyB,EAAAA,GAAAA,QAAOwL,EAAMH,EAAb,IAEH/G,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAMD,SAASuM,EAAiBC,GACtB,MAAM1H,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,4BACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBsB,QAASjE,EAAMiE,QACfyF,QAASA,EACTxD,OAAQA,EAAOzL,MACf6L,MAAOA,EAAM7L,MACb0O,IAAKP,EAAWnO,UAEpB,GACH4H,MAAM3H,IACHqO,EAAMtO,MAAQC,EAAOqO,MACrBF,EAAWpO,MAAQC,EAAOmO,WAC1BC,EAASrO,MAAQC,EAAOoO,SACxBH,EAAUlO,MAAQ,cACbiP,IACD5E,EAAMa,QAAQrF,EAASqJ,aAAe,KAAOb,EAASrO,MAAQ,KAC9D+J,EAAM,YACNoF,IACH,IAEJtH,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAKD,SAAS2M,IACL,MAAM7H,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,WAEvB,GACHN,MAAM3H,IACHsL,EAAWvL,MAAQC,EAAOsL,UAA1B,IAEH1D,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAMD,SAAS4M,EAAgBC,GACrB,MAAMC,EAAS,IAAIxK,WACnBwK,EAAOC,iBAAiB,QAASlJ,IAC7B6H,EAAWnO,MAAQsG,EAAMlF,OAAOnB,OAGhC+O,GAAiB,GACjBI,GAAgB,IAEpBG,EAAOE,WAAWH,EAAKI,UAAU,GAAGC,KACvC,CAKD,SAASC,IACLZ,GAAiB,EACpB,CAeD,SAASG,IACLlB,EAAajO,OAAQ,EACrBkO,EAAUlO,MAAQ,gBACrB,C,OAhBDgI,EAAAA,EAAAA,KAAU,KACNoC,EAAQpK,MAAQ,CACZ,CAAC0K,KAAM7E,EAAS7B,KAAMhE,MAAO,QAC7B,CAAC0K,KAAM7E,EAAS2F,SAAUxL,MAAO,YACjC,CAAC0K,KAAM7E,EAASgF,MAAO7K,MAAO,SAC9B,CAAC0K,KAAM7E,EAASgK,WAAY7P,MAAO,cACnC,CAAC0K,KAAM7E,EAASlD,OAAQ3C,MAAO,SALnC,I,2tFC/NR,MAAM,GAAc,GAEpB,U,+OCyBU8P,GAAmBlK,EAAAA,EAAAA,KAAI,GACvBC,GAAWC,EAAAA,EAAAA,IAAO,YAIlBuE,GAAQC,EAAAA,GAAAA,MAORyF,GAAe/J,EAAAA,EAAAA,KAAS,IACnBT,EAAMiE,QAAU,IAM3B,SAASwG,IACL,MAAMzI,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAMiF,YACnBhB,QAASjE,EAAMiE,YAEnB,GACH5B,MAAK,KACFpB,EAAK,YACLsJ,EAAiB9P,OAAQ,EACzBqK,EAAMa,QAAQrF,EAASoK,eAAvB,IAEHpI,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAGJqN,EAAiB9P,OAAQ,CAC5B,C,4/BCtEL,MAAM,GAAc,GAEpB,U,0GCMUkQ,GAAgBtK,EAAAA,EAAAA,KAAI,GACpBC,GAAWC,EAAAA,EAAAA,IAAO,YAElBuE,GAAQC,EAAAA,GAAAA,MAWd,SAAS6F,IACL,IAAIzB,EAAM,GACN0B,EAAO,GAEX1B,GAAO7I,EAASwK,SAAW,IAAMxK,EAASyK,UAAY,IAAMzK,EAAS0K,kBAAoB,IAAM1K,EAAS2F,SAAW,KACnHjG,EAAMiL,MAAMC,SAASC,IACjBN,EAAO,CACHvK,EAAS8K,WAAa,IAAMD,EAAKE,SACjC,GACA,GACAF,EAAKlF,UAETkD,GAAO0B,EAAKS,WAAa,IAAzB,IAGJ,MAAM9B,EAAO,IAAIhN,KAAK,CAAC2M,GAAM,CAAC5M,KAAM,4BACpCyB,EAAAA,GAAAA,QAAOwL,EAAMxJ,EAAMsJ,SAAW,OACjC,C,OAKD7G,EAAAA,EAAAA,KAAU,KACN,MAAMT,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVsJ,WAAY,qCAEhB,GACHlJ,MAAM3H,IACHiQ,EAAclQ,MAAQC,EAAO,gBAA7B,IAEH4H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAZJ,I,uNCjDR,MAAM,GAAc,GAEpB,U,2GCMI,MAAMyN,GAAgBtK,EAAAA,EAAAA,KAAI,GACpBmL,GAAenL,EAAAA,EAAAA,KAAI,GACnBC,GAAWC,EAAAA,EAAAA,IAAO,YAIlBuE,GAAQC,EAAAA,GAAAA,MAKd,SAAS0G,IACLD,EAAa/Q,OAAS+Q,EAAa/Q,MACnCwG,EAAK,gBAAiBuK,EAAa/Q,MACtC,C,OAKDgI,EAAAA,EAAAA,KAAU,KACN,MAAMT,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVsJ,WAAY,qCAEhB,GACHlJ,MAAM3H,IACHiQ,EAAclQ,MAAQC,EAAO,gBAA7B,IAEH4H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAZJ,I,oWChCR,MAAM,GAAc,GAEpB,U,sLC0CUwO,GAAuBrL,EAAAA,EAAAA,KAAI,GAC3BC,GAAWC,EAAAA,EAAAA,IAAO,YAClByF,GAAa3F,EAAAA,EAAAA,IAAI,CAAC,GAClB6F,GAAS7F,EAAAA,EAAAA,IAAI,IACbgG,GAAQhG,EAAAA,EAAAA,IAAI,IACZiG,GAAQjG,EAAAA,EAAAA,IAAI,IAMZyE,GAAQC,EAAAA,GAAAA,MASd,SAAS4G,IACL,MAAM3J,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,WAEvB,GACHN,MAAM3H,IACHsL,EAAWvL,MAAQC,EAAOsL,UAA1B,IAEH1D,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAGJwO,EAAqBjR,OAAQ,CAChC,CAKA,SAASmR,EAAsBC,GAC5B,MAAM7J,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,uCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,WAEvB,GACHN,MAAM3H,IACH,MAAM6L,EAAW7L,EAAO6L,SAClBC,EAAW9L,EAAO8L,SAClBC,EAAY/L,EAAO+L,UACnBC,EAAYhM,EAAOgM,UAGzBA,EAAUG,QAAQ,CACdpM,MAAO,QACPqM,MAAOxG,EAASwL,yBAIpBtH,EAAM,aAAc,CAChBuH,WAAY,QAAUF,EACtBtG,UAAWW,EAAOzL,MAClB8L,SAAUA,EACVC,SAAUA,EACVC,UAAWA,EACXC,UAAWA,GANf,IASHpE,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAKD,SAAS8J,IACL,MAAMhF,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,8BACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,OACnBuD,OAAQA,EAAOzL,MACf6L,MAAOA,EAAM7L,MACb4L,MAAOA,EAAM5L,UAEjB,GACH4H,MAAM3H,IACH,MAAMmR,EAAWnR,EAAOmR,SACxBD,EAAsBC,EAAtB,IAEHvJ,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAIJwO,EAAqBjR,OAAQ,CAChC,C,uiDC/JL,MAAM,GAAc,GAEpB,U,0SCkCK,SAASuR,EAAcC,GACpBhL,EAAK,gBAAiBgL,EACzB,CAMD,SAASC,EAAgBC,GACrBlL,EAAK,aAAckL,EACtB,C,k2BC9CL,MAAM,GAAc,GAEpB,U,+TCcU7L,GAAWC,EAAAA,EAAAA,IAAO,Y,obChB5B,MAAM,GAAc,GAEpB,U,2KCSUD,GAAWC,EAAAA,EAAAA,IAAO,YAClBuE,GAAQC,EAAAA,GAAAA,MAOd,SAASqH,IACL,MAAMpK,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,uCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAajF,EAAM2C,WAEvB,GACHN,MAAM3H,IACH,MAAM6L,EAAW7L,EAAO6L,SAClBC,EAAW9L,EAAO8L,SAClBC,EAAY/L,EAAO+L,UACnBC,EAAYhM,EAAOgM,UAGzBA,EAAUG,QAAQ,CACdpM,MAAO,QACPqM,MAAOxG,EAASwL,yBAIpBtH,EAAM,aAAc,CAChBuH,WAAY/L,EAAMqM,OAAO5R,MACzB8K,UAAWvF,EAAMqM,OAAO9G,UACxBgB,SAAUA,EACVC,SAAUA,EACVC,UAAWA,EACXC,UAAWA,GANf,IASHpE,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,C,sHCzDL,MAAM,GAAc,GAEpB,U,kRCoDUoI,GAAQjF,EAAAA,EAAAA,IAAI,IAClB,IAAMiM,EAAgB,GAEtB,MAAMnG,GAAa9F,EAAAA,EAAAA,IAAI,SACjBkM,GAASlM,EAAAA,EAAAA,KAAI,GACbyE,GAAQC,EAAAA,GAAAA,MACRzE,GAAWC,EAAAA,EAAAA,IAAO,YAKlBoG,GAAkBlG,EAAAA,EAAAA,KAAS,IACtB,CACH,CAAC,UACD,CAAC,UAAW,EAAGT,EAAMwG,aA+C7B,SAASgG,IAILD,EAAO9R,OAAQ,CAClB,C,OA3CD0G,EAAAA,EAAAA,KACI,IAAMnB,EAAMyM,YACZ,KACIjI,EAAM,cAAN,KAIR/B,EAAAA,EAAAA,KAAU,KAGN,MAAMhI,EAAQuF,EAAM0M,KAAK1M,EAAM2M,QAG3B3M,EAAMuG,SACNvG,EAAMyG,UAAUyE,SAAS0B,IACjBA,EAAU9F,OAASrM,IACnB6K,EAAM7K,MAAQmS,EAAUnS,MAC3B,IAGL6K,EAAM7K,MAAQA,EAIlBuF,EAAM0G,UAAUwE,SAAS2B,IACjBA,EAAUpS,OAASA,IACnB0L,EAAW1L,MAAQA,EACnB6K,EAAM7K,MAAQ,GACjB,IAGL6R,EAAgBhH,EAAM7K,KAAtB,KAiBJqS,EAAAA,EAAAA,KAAgB,KAGZ,GAAI9M,EAAMyM,WAAcH,GAAiBhH,EAAM7K,MAC3C,OAGJ,MAAMyK,EAASlF,EAAM0M,KAAKK,GACpB7G,EAASlG,EAAMuF,UACfe,EAAQtG,EAAM0M,KAAKpG,MACnBrB,EAAcjF,EAAMiF,YACpB+H,EAAqC,SAApB7G,EAAW1L,MAAmB,GAAK0L,EAAW1L,MAC/DwS,EAAiC,SAApB9G,EAAW1L,OAAqBuF,EAAMuG,SAAWjB,EAAM7K,MAAQ,EAC5EyS,EAAiC,SAApB/G,EAAW1L,OAAsBuF,EAAMuG,SAAyB,EAAdjB,EAAM7K,MACrE4L,EAAQ,GAERrE,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBA,EAAU,CAAC,CACPC,WAAY,wCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAaA,EACbC,OAAQA,EACRiB,WAAY6G,EACZ9G,OAAQA,EACRI,MAAOA,EACPF,MAAO6G,EACP3H,MAAO6H,WAAWD,GAClB7G,MAAOA,MAEX,GACHhE,MAAK,SAGLC,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,IAGJsH,EAAM,eAAN,I,q/BCvKR,MAAM,GAAc,GAEpB,U,gBC2MA,SAAS4I,GAAQC,GACf,MAAoB,oBAANA,EAAmBA,KAAMC,EAAAA,EAAAA,IAAMD,EAC9C,CA6E6C,qBAAtBE,oBAAqCC,WAAsBD,mBAOlEE,OAAOvP,UAAUoN,SARlC,MAaMoC,GAAO,OAcb,SAASC,GAAoBC,EAAQrS,GACnC,SAASsS,KAAWzL,GAClB,OAAO,IAAI0L,SAAQ,CAACC,EAASC,KAC3BF,QAAQC,QAAQH,GAAO,IAAMrS,EAAGC,MAAMO,KAAMqG,IAAO,CAAE7G,KAAI0S,QAASlS,KAAMqG,UAASC,KAAK0L,GAASzL,MAAM0L,EAArG,GAEH,CACD,OAAOH,CACR,CACD,MAAMK,GAAgBC,GACbA,IAET,SAASC,GAAeC,EAAIC,EAAU,CAAC,GACrC,IAAIC,EACAC,EACAC,EAAef,GACnB,MAAMgB,EAAiBC,IACrBC,aAAaD,GACbF,IACAA,EAAef,EAAf,EAEIE,EAAUO,IACd,MAAMU,EAAWzB,GAAQiB,GACnBS,EAAc1B,GAAQkB,EAAQS,SAGpC,OAFIR,GACFG,EAAcH,GACZM,GAAY,QAAqB,IAAhBC,GAA0BA,GAAe,GACxDN,IACFE,EAAcF,GACdA,EAAW,MAENV,QAAQC,QAAQI,MAElB,IAAIL,SAAQ,CAACC,EAASC,KAC3BS,EAAeH,EAAQU,eAAiBhB,EAASD,EAC7Ce,IAAgBN,IAClBA,EAAWxP,YAAW,KAChBuP,GACFG,EAAcH,GAChBC,EAAW,KACXT,EAAQI,IAAR,GACCW,IAELP,EAAQvP,YAAW,KACbwP,GACFE,EAAcF,GAChBA,EAAW,KACXT,EAAQI,IAAR,GACCU,EALH,GAVF,EAkBF,OAAOjB,CACR,CAoED,SAASqB,GAAoB1T,GAC3B,MAAM2T,EAAwBzB,OAAO0B,OAAO,MAC5C,OAAQC,IACN,MAAMC,EAAMH,EAAME,GAClB,OAAOC,IAAQH,EAAME,GAAO7T,EAAG6T,GAA/B,CAEH,CACD,MAAME,GAAc,aAEdC,IADYN,IAAqBG,GAAQA,EAAIzP,QAAQ2P,GAAa,OAAOE,gBAC5D,UACFP,IAAqBG,GAC7BA,EAAIzP,QAAQ4P,IAAY,CAACE,EAAGhT,IAAMA,EAAIA,EAAEiT,cAAgB,OA4NjE,SAASC,GAAgBC,EAAQC,EAAIvB,EAAU,CAAC,GAC9C,MAAM,YACJwB,EAAc5B,MACX6B,GACDzB,EACJ,OAAOnN,EAAAA,EAAAA,IACLyO,EACAjC,GACEmC,EACAD,GAEFE,EAEH,CAwrBD,SAASC,GAAeJ,EAAQC,EAAIvB,EAAU,CAAC,GAC7C,MAAM,SACJ2B,EAAW,EADP,QAEJlB,KACGgB,GACDzB,EACJ,OAAOqB,GACLC,EACAC,EACA,IACKE,EACHD,YAAa1B,GAAe6B,EAAU,CAAElB,aAG7C,C,wcC1tCG,MAAM9D,GAAQ5K,EAAAA,EAAAA,IAAI,IACZ6H,GAAU7H,EAAAA,EAAAA,IAAI,IACdsC,GAAStC,EAAAA,EAAAA,IAAI,GACb4D,GAAU5D,EAAAA,EAAAA,IAAI,GACdC,GAAWC,EAAAA,EAAAA,IAAO,YAClB2P,GAAY7P,EAAAA,EAAAA,IAAI,GAChB8P,GAAc9P,EAAAA,EAAAA,IAAI,GAClB+P,GAAc/P,EAAAA,EAAAA,KAAI,GAClBgQ,GAAgBhQ,EAAAA,EAAAA,IAAI,MACpBiQ,GAAWjQ,EAAAA,EAAAA,IAAI,IACfiJ,GAAWjJ,EAAAA,EAAAA,IAAI,IACfkQ,GAAiBlQ,EAAAA,EAAAA,KAAI,GACrBmQ,GAAiBnQ,EAAAA,EAAAA,KAAI,GACrBoQ,GAAcpQ,EAAAA,EAAAA,KAAI,GAClBqQ,GAAcrQ,EAAAA,EAAAA,KAAI,GAClBsQ,GAAUtQ,EAAAA,EAAAA,IAAI,IACd4C,GAAS5C,EAAAA,EAAAA,KAAI,GACbuQ,GAAYvQ,EAAAA,EAAAA,KAAI,GAChBwQ,GAAcxQ,EAAAA,EAAAA,KAAI,GAClB6C,GAAY7C,EAAAA,EAAAA,KAAI,GAChByQ,GAAazQ,EAAAA,EAAAA,IAAI,IACjB0Q,GAAiB1Q,EAAAA,EAAAA,IAAI,IACrB2Q,GAAe3Q,EAAAA,EAAAA,KAAI,GACnB4Q,GAAgB5Q,EAAAA,EAAAA,IAAI,IACpB6Q,GAAgB7Q,EAAAA,EAAAA,IAAI,IACpB8Q,GAAgB9Q,EAAAA,EAAAA,IAAI,IACpB+Q,GAAe/Q,EAAAA,EAAAA,IAAI,GACnBgR,GAAiBhR,EAAAA,EAAAA,IAAI,GACrBiR,GAAgBjR,EAAAA,EAAAA,KAAI,GAEpByE,GAAQC,EAAAA,GAAAA,MAEd,IAAIwM,EAAY,GACZC,EAAW,GAgBf,SAASC,IAGL,MAAM/V,EAAIiC,OAAO+T,OAEbxO,EAAUzI,MACViB,EAAE,kBAAkBiW,SAAS,QAE7BjW,EAAE,kBAAkBiW,SAAS,QAEjCzO,EAAUzI,OAASyI,EAAUzI,KAChC,CAKD,SAASmX,EAAeC,GACpBlP,EAAOlI,MAAQoX,EAAUlP,OACzBsB,EAAQxJ,MAAQoX,EAAU5N,QAE1B6N,GACH,CAKA,SAASC,EAAgB5F,GAGtB,MAAMJ,EAAaI,EAASJ,WAG5BgF,EAAetW,MAAQ,QAAUsR,EACjC+E,EAAWrW,MAAQsR,EACnBiF,EAAavW,MAAQ0R,EAAS5F,SAC9B0K,EAAcxW,MAAQ0R,EAAS1F,UAC/ByK,EAAczW,MAAQ0R,EAASzF,UAC/ByK,EAAc1W,MAAQ0R,EAAS5G,UAC/B6L,EAAa3W,MAAQ0R,EAAS3F,SAC9B8K,EAAc7W,OAAQ,EACtBqX,GACH,CAKD,SAASE,IACLlB,EAAWrW,MAAQ,GACnBsW,EAAetW,MAAQ,EAC1B,CAOD,SAASwX,IACLX,EAAc7W,OAAQ,CACzB,CAOD,SAASyX,IACLb,EAAe5W,OAClB,EA7ED0G,EAAAA,EAAAA,IAAMwB,GAAQ,KACVwN,EAAY1V,MAAQ,EACpBoW,EAAYpW,OAAQ,EACpBqW,EAAWrW,MAAQ,GACnBsW,EAAetW,MAAQ,EAAvB,IA+EHuV,GACGqB,GACA,KAGIP,EAAWrW,MAAQ,GACnBsW,EAAetW,MAAQ,GAEvBqX,GAAa,GAEjB,CAAE7B,SAAU,IAAKlB,QAAS,MAO9B,MAAMoD,GAAiB1R,EAAAA,EAAAA,KAAS,IACD,IAApBqQ,EAAWrW,QAMhBoK,GAAUpE,EAAAA,EAAAA,KAAS,KACrB,IAAI2R,EAAQ,GA2BZ,OA1BKhC,EAAY3V,MAIb2X,EAAMC,KAAK,CAAClN,KAAM7E,EAASgS,YAAa7X,MAAO,cAAe8X,UAAU,KAHxEH,EAAMC,KAAK,CAAClN,KAAM7E,EAASkS,YAAa/X,MAAO,oBAC/C2X,EAAMC,KAAK,CAAClN,KAAM7E,EAASmS,kBAAmBhY,MAAO,cAAe8X,UAAU,KAIlFH,EAAMC,KAAK,CAAClN,KAAM7E,EAAS2F,SAAUxL,MAAO,WAAY8X,UAAU,IAC9D3B,EAAUnW,OACV2X,EAAMC,KAAK,CAAClN,KAAM7E,EAASoS,YAAajY,MAAO,UAInDkW,EAAQlW,MAAMyQ,SAAQyB,IAGlByF,EAAMC,KAAK,CACPlN,KAAMwH,EAAOgG,YACblY,MAAO,QAAUkS,EAAOI,GACxBxH,UAAWoH,EAAOpH,UAClBqN,SAAUjG,EAAOiG,UAJrB,IASJR,EAAMC,KAAK,CAAClN,KAAM,GAAI1K,MAAO,YAEtB2X,CAAP,IAOJ,SAASpG,EAAcC,GACnB4E,EAAYpW,MAAQwR,EACpB6F,GACH,CAQD,SAASe,EAAW5H,EAAO0F,GACvB,IAAIrL,EAAQ,CAAC,EAqCb,OAnCAsL,EAAUnW,OAAQ,EAClBwQ,EAAMC,SAAQC,IAGNA,EAAK2H,QACLlC,EAAUnW,OAAQ,GAItB0Q,EAAK4H,iBAAkB,EACvBpC,EAAQzF,SAAQyB,IACZ,MAAMZ,EAAa,QAAUY,EAAOI,GACpCzH,EAAQ6F,EAAKvG,OAAOoO,MAAMC,GACdA,EAAQpH,UAAYc,EAAOI,KAEnCzH,GACA6F,EAAK4H,iBAAkB,EACvB5H,EAAKY,GAAczG,EAAM4N,cACE,SAApBvG,EAAOpH,UACd4F,EAAKY,GAAczL,EAASyS,gBAE5B5H,EAAKY,GAAc,IAOvBZ,EAAK2F,WAAc/E,GAAc+E,EAAWrW,MAC5C0Q,EAAKjF,OAASyG,EAAOpH,UACrB4F,EAAK7E,MAAQqG,EAAOrG,MACpB6E,EAAKlG,YAAc0H,EAAO1H,WAA1B,GArBJ,IAyBGgG,CACV,CAMD,SAAS6G,IACLqB,EAAcxQ,EAAOlI,MAAO8W,EAAWC,EAAUvN,EAAQxJ,MAC5D,CASA,SAAS0Y,EAAcxQ,EAAQrB,EAAOC,EAAMmD,GACzC,MAAM1C,EAAKrE,OAAOqE,GACZC,EAAWD,EAAGC,SACdC,EAAYF,EAAGE,UAErBe,EAAOxI,OAAQ,EAEfyH,EAAU,CAAC,CACPC,WAAY,kCACZC,KAAM,CACFH,SAAUA,EACVgD,YAAatC,EACb4O,UAAWjQ,EACXkQ,SAAUjQ,EACV0C,QAASS,EACTsH,cAAe6E,EAAYpW,UAE/B,GACH4H,MAAM3H,IACH0V,EAAY3V,MAAQC,EAAO,UAC3BuQ,EAAMxQ,MAAQC,EAAO,SACrB4V,EAAS7V,MAAQC,EAAO,YACxB4O,EAAS7O,MAAQC,EAAO,YACxB6V,EAAe9V,MAAQC,EAAO,kBAC9B8V,EAAe/V,MAAQC,EAAO,kBAC9B+V,EAAYhW,MAAQC,EAAO,eAC3BgW,EAAYjW,MAAQC,EAAO,eAC3BiW,EAAQlW,MAAQC,EAAO,WACvBwN,EAAQzN,MAAQwQ,EAAMxQ,MAAM2Y,KAAIC,GAAKA,EAAEtG,KACvCmD,EAAUzV,MAAQwQ,EAAMxQ,MAAMuB,OAE9BiP,EAAMxQ,MAAQoY,EAAW5H,EAAMxQ,MAAOkW,EAAQlW,OAE9CwI,EAAOxI,OAAQ,CAAf,IAEH6H,OAAOpF,IACJS,OAAOvB,QAAQc,MAAMA,GACrB4H,EAAM5H,MAAM,gDAAZ,GAEP,CAOD,SAASoW,EAAgBhS,EAAOC,GACf,OAATD,IACAA,EAAQ,IAEA,OAARC,IACAA,EAAO,IAEXgQ,EAAYjQ,EACZkQ,EAAWjQ,EAGX4O,EAAY1V,MAAQ,EACpB0Y,EAAcxQ,EAAOlI,MAAO6G,EAAOC,EAAM0C,EAAQxJ,MACpD,CAKD,SAAS8Y,IACLJ,EAAcxQ,EAAOlI,MAAO8W,EAAWC,EAAUvN,EAAQxJ,MAC5D,CAKD,MAAM+Y,GAAY/S,EAAAA,EAAAA,KAAS,IACM,GAAtBwK,EAAMxQ,MAAMuB,S,qyGC7c3B,MAAM,GAAc,GAEpB,S","sources":["webpack://gugrades_ui/./node_modules/core-js/internals/array-iteration-from-last.js","webpack://gugrades_ui/./node_modules/core-js/internals/function-bind-context.js","webpack://gugrades_ui/./node_modules/core-js/modules/es.array.find-last.js","webpack://gugrades_ui/./node_modules/core-js/modules/esnext.array.find-last.js","webpack://gugrades_ui/../src/FileSaver.js","webpack://gugrades_ui/./node_modules/vue-loader/dist/exportHelper.js","webpack://gugrades_ui/./src/components/InitialBar.vue","webpack://gugrades_ui/./src/components/InitialBar.vue?17b6","webpack://gugrades_ui/./src/components/NameFilter.vue","webpack://gugrades_ui/./src/components/NameFilter.vue?ac3c","webpack://gugrades_ui/./src/components/LevelOneSelect.vue","webpack://gugrades_ui/./src/components/LevelOneSelect.vue?999a","webpack://gugrades_ui/./src/components/ActivityTree.vue","webpack://gugrades_ui/./src/components/ActivityTree.vue?f3ec","webpack://gugrades_ui/./src/components/ActivitySelect.vue","webpack://gugrades_ui/./src/components/ActivitySelect.vue?84cf","webpack://gugrades_ui/./src/components/GroupSelect.vue","webpack://gugrades_ui/./src/components/GroupSelect.vue?9c0e","webpack://gugrades_ui/./src/components/CaptureSelect.vue","webpack://gugrades_ui/./src/components/CaptureSelect.vue?4e23","webpack://gugrades_ui/./src/components/Capture/HistoryButton.vue","webpack://gugrades_ui/./src/components/Capture/HistoryButton.vue?3705","webpack://gugrades_ui/./src/components/Capture/ImportUserGradeButton.vue","webpack://gugrades_ui/./src/components/Capture/ImportUserGradeButton.vue?7060","webpack://gugrades_ui/./src/components/Capture/AddGradeButton.vue","webpack://gugrades_ui/./src/components/Capture/AddGradeButton.vue?1c90","webpack://gugrades_ui/./src/components/CaptureMenu.vue","webpack://gugrades_ui/./src/components/CaptureMenu.vue?f71f","webpack://gugrades_ui/./src/components/PreLoader.vue","webpack://gugrades_ui/./src/components/PreLoader.vue?e699","webpack://gugrades_ui/./src/components/Capture/ImportButton.vue","webpack://gugrades_ui/./src/components/Capture/ImportButton.vue?7fef","webpack://gugrades_ui/./src/components/Capture/CSVImportButton.vue","webpack://gugrades_ui/./src/components/Capture/CSVImportButton.vue?dbb9","webpack://gugrades_ui/./src/components/Capture/ReleaseButton.vue","webpack://gugrades_ui/./src/components/Capture/ReleaseButton.vue?82a7","webpack://gugrades_ui/./src/components/Capture/ExportWorksheetButton.vue","webpack://gugrades_ui/./src/components/Capture/ExportWorksheetButton.vue?2194","webpack://gugrades_ui/./src/components/Capture/ViewFullNamesButton.vue","webpack://gugrades_ui/./src/components/Capture/ViewFullNamesButton.vue?59d9","webpack://gugrades_ui/./src/components/Capture/AddMultipleButton.vue","webpack://gugrades_ui/./src/components/Capture/AddMultipleButton.vue?450e","webpack://gugrades_ui/./src/components/Capture/CaptureButtons.vue","webpack://gugrades_ui/./src/components/Capture/CaptureButtons.vue?273f","webpack://gugrades_ui/./src/components/CaptureAlerts.vue","webpack://gugrades_ui/./src/components/CaptureAlerts.vue?c3d3","webpack://gugrades_ui/./src/components/CaptureColumnEditCog.vue","webpack://gugrades_ui/./src/components/CaptureColumnEditCog.vue?ef76","webpack://gugrades_ui/./src/components/Capture/EditCaptureCell.vue","webpack://gugrades_ui/./src/components/Capture/EditCaptureCell.vue?020c","webpack://gugrades_ui/./node_modules/@vueuse/shared/index.mjs","webpack://gugrades_ui/./src/components/CaptureTable.vue","webpack://gugrades_ui/./src/components/CaptureTable.vue?4e50"],"sourcesContent":["var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ findLast, findLastIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_FIND_LAST_INDEX = TYPE == 1;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var index = lengthOfArrayLike(self);\n    var value, result;\n    while (index-- > 0) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (result) switch (TYPE) {\n        case 0: return value; // findLast\n        case 1: return index; // findLastIndex\n      }\n    }\n    return IS_FIND_LAST_INDEX ? -1 : undefined;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.findLast` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLast: createMethod(0),\n  // `Array.prototype.findLastIndex` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLastIndex: createMethod(1)\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $findLast = require('../internals/array-iteration-from-last').findLast;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.findLast` method\n// https://github.com/tc39/proposal-array-find-from-last\n$({ target: 'Array', proto: true }, {\n  findLast: function findLast(callbackfn /* , that = undefined */) {\n    return $findLast(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\naddToUnscopables('findLast');\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.array.find-last');\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n    <div class=\"initialbar d-flex flex-wrap justify-content-center justify-content-md-start\">\n        <span class=\"initialbarlabel mr-2\">{{ props.label }}</span>\n\n        <nav class=\"initialbargroups d-flex flex-wrap justify-content-center justify-content-md-start\">\n            <ul class=\"pagination pagination-sm\">\n                <li class=\"initialbarall page-item\" :class=\"{active: is_active('all')}\">\n                    <a data-initial=\"\" class=\"page-link\" href=\"#\" @click=\"letterclicked('all', $event)\">{{ mstrings.all }}</a>\n                </li>\n            </ul>\n            <ul class=\"pagination pagination-sm\">\n                <li v-for=\"letter in letters1\" :key=\"letter\" class=\"page-item\" :class=\"{active: is_active(letter)}\">\n                    <a class=\"page-link\" href=\"#\" @click=\"letterclicked(letter, $event)\">{{letter}}</a>\n                </li>\n            </ul>\n            <ul class=\"pagination pagination-sm\">\n                <li v-for=\"letter in letters2\" :key=\"letter\" class=\"page-item\" :class=\"{active: is_active(letter)}\">\n                    <a class=\"page-link\" href=\"#\" @click=\"letterclicked(letter, $event)\">{{letter}}</a>\n                </li>\n            </ul>            \n        </nav>\n    </div>    \n</template>\n\n<script setup>\n    import {ref, computed, defineProps, defineEmits, watch, inject} from '@vue/runtime-core';\n\n    const props = defineProps({\n        'label': String,\n        'selected': String\n    });\n\n    const emit = defineEmits(['selected']);\n\n    const activeletter = ref('all');\n    const mstrings = inject('mstrings');\n\n    const letters1 = computed(() => {\n        return Array.from(\"ABCDEFGHIJKLM\");\n    });\n\n    const letters2 = computed(() => {\n        return Array.from(\"NOPQRSTUVWXYZ\");\n    });    \n\n    function letterclicked(letter, event) {\n        event.preventDefault();\n        activeletter.value = letter;\n        emit('selected', letter);\n    }\n\n    function is_active(letter) {\n        return activeletter.value == letter;\n    }\n\n    watch(() => props.selected, (selected) => {\n        activeletter.value = selected;\n        emit('selected', activeletter.value);\n    })\n</script>","import script from \"./InitialBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InitialBar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"mt-4\">\n        <div>\n            <div>\n                <InitialBar :selected=\"first\" :label=\"mstrings.firstname\" @selected=\"first_selected\"></InitialBar>\n                <InitialBar :selected=\"last\" :label=\"mstrings.lastname\" @selected=\"last_selected\"></InitialBar>\n            </div>\n        </div>\n        <div v-if=\"showreset\">\n            <button class=\"btn btn-primary btn-small\" @click=\"reset_filter\">{{ mstrings.resetfilter }}</button>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {ref, defineEmits, defineExpose, inject} from '@vue/runtime-core';\n    import InitialBar from '@/components/InitialBar.vue';\n\n    const emit = defineEmits(['selected']);\n\n    const first = ref('all');\n    const last = ref('all');\n    const mstrings = inject('mstrings');\n    const showreset = ref(false);\n\n    defineExpose({\n        reset_filter,\n    });\n\n    /**\n     * Process letter selected in one of the bars\n     */\n    function first_selected(letter) {\n        first.value = letter;\n        showreset.value = (first.value != 'all') || (last.value != 'all');\n        emit('selected', first.value, last.value);\n    }\n\n    function last_selected(letter) {\n        last.value = letter;\n        showreset.value = (first.value != 'all') || (last.value != 'all');\n        emit('selected', first.value, last.value);\n    }\n\n    /**\n     * Reset filter back to all/all\n     */\n    function reset_filter() {\n        first.value = 'all';\n        last.value = 'all';\n    }\n\n</script>","import script from \"./NameFilter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NameFilter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","/**\n * Display drop-drown for top-level\n */\n\n<template>\n    <div>\n        <div v-if=\"notsetup\" class=\"alert alert-warning\">\n            {{ mstrings.notoplevel }}\n        </div>\n        <select v-else class=\"form-control border-dark\" @change=\"levelOneChange($event)\">\n            <option value=\"0\">{{ mstrings.selectgradecategory }}</option>\n            <option v-for=\"category in level1categories\" :key=\"category.id\" :value=\"category.id\">{{ category.fullname }}</option>\n        </select>\n    </div>\n</template>\n\n<script setup>\n    import {ref, onMounted, defineEmits, inject} from '@vue/runtime-core';\n\n    const level1categories = ref([]);\n    const notsetup = ref(false);\n    const mstrings = inject('mstrings');\n\n    const emit = defineEmits(['levelchange']);\n\n    // Get the top level categories\n    function getLevelOne() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_levelonecategories',\n            args: {\n                courseid\n            }\n        }])[0]\n        .then((result) => {\n            level1categories.value = result;\n            if (result.length == 0) {\n                notsetup.value = true;\n            }\n        })\n        .catch((error) => {\n            window.console.error(error);\n        })\n    }\n\n    // Handle change of selection in dropdown.\n    function levelOneChange(event) {\n        const categoryid = event.target.value;\n        emit('levelchange', categoryid);\n    }\n\n    onMounted(() => {\n        getLevelOne();\n    });\n</script>\n","import script from \"./LevelOneSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LevelOneSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ul class=\"list-unstyled pl-3\">\n        <li v-for=\"item in props.nodes.items\" :key=\"item.id\">\n            <a href=\"#\" @click=\"activity_click(item.id, $event)\">{{ item.itemname }}</a>\n        </li>\n        <li v-for=\"category in props.nodes.categories\" :key=\"category.id\">\n            <b><i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> {{ category.category.fullname }}</b>\n            <ActivityTree :nodes=\"category\" @activityselected=\"sub_activity_click\"></ActivityTree>\n        </li>\n    </ul>\n</template>\n\n<script setup>\n    import {defineProps, defineEmits} from 'vue';\n\n    const props = defineProps({\n        nodes: Object\n    });\n\n    const emit = defineEmits(['activityselected']);\n\n    // Emit activity id when activity selected\n    function activity_click(itemid, event) {\n        event.preventDefault();\n        emit('activityselected', itemid);\n    }\n\n    // As emit only works for one level, this re-emits events\n    // from lower levels.\n    function sub_activity_click(activityid) {\n        emit('activityselected', activityid);\n    }\n</script>","import script from \"./ActivityTree.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActivityTree.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"mt-2 border border-dark p-3 rounded\" v-if=\"loaded\">\n        <div v-if=\"collapsed\" @click=\"open_selection\" class=\"cursor-pointer row\">\n            <div class=\"col-10\">\n                {{ mstrings.selected }}: {{ selectedactivity.itemname }}\n            </div>\n            <div class=\"col-2 text-right\">\n                <i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\n            </div>\n        </div>\n        <div v-else>\n            <b><i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> {{ categoryname }}</b>\n            <ActivityTree :nodes=\"activitytree\" @activityselected=\"activity_selected\"></ActivityTree>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {ref, onMounted, defineProps, defineEmits, watch, inject} from 'vue';\n    import ActivityTree from '@/components/ActivityTree.vue';\n\n    const props = defineProps({\n        categoryid: Number,\n        currentitem: Number,\n    });\n\n    const emit = defineEmits(['activityselected']);\n\n    const activitytree = ref({});\n    const categoryname = ref('');\n    const selectedactivity = ref({});\n    const loaded = ref(false);\n    const collapsed = ref(false);\n    const mstrings = inject('mstrings');\n\n    // Get the sub-category / activity\n    function getActivity() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n        const catid = props.categoryid;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_activities',\n            args: {\n                courseid: courseid,\n                categoryid: catid\n            }\n        }])[0]\n        .then((result) => {\n            const tree = JSON.parse(result['activities']);\n\n            activitytree.value = tree;\n            categoryname.value = tree.category.fullname;\n            loaded.value = true;\n        })\n        .catch((error) => {\n            window.console.error(error);\n        })\n    }\n\n    // Get the selected avtivity\n    function activity_selected(activityid) {\n        const GU = window.GU;\n        const fetchMany = GU.fetchMany;\n        fetchMany([{\n            methodname: 'local_gugrades_get_grade_item',\n            args: {\n                itemid: activityid,\n            }\n        }])[0]\n        .then((result) => {\n            selectedactivity.value = result;\n            collapsed.value = true;\n        })\n        .catch((error) => {\n            window.console.error(error);\n        });\n\n        // Emit id as well\n        emit('activityselected', activityid);\n    }\n\n    // (Re-)open the selection\n    function open_selection() {\n        collapsed.value = false;\n    }\n\n    onMounted(() => {\n        getActivity();\n\n        // Could be mounted with something selected\n        if (props.currentitem) {\n            selectedactivity.value = props.currentitem;\n            collapsed.value = true;\n        }\n    });\n\n    // If the categoryid prop changes then we read new values\n    // and (re-)open the dialogue\n    watch(() => props.categoryid, () => {\n        collapsed.value = false;\n        getActivity();\n    })\n</script>\n\n<style scoped>\n    .cursor-pointer {\n        cursor: pointer;\n    }\n</style>","import script from \"./ActivitySelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActivitySelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ActivitySelect.vue?vue&type=style&index=0&id=6f2a4327&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/howard/Projects/Moodle41/app/public/local/gugrades/ui/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6f2a4327\"]])\n\nexport default __exports__","<template>\n    <div v-if=\"showgroupselect\" class=\"mt-2\">\n        <select class=\"form-control border-dark\" @change=\"group_change($event)\">\n            <option value=\"0\">{{ mstrings.allparticipants }}</option>\n            <option v-for=\"group in groups\" :key=\"group.id\" :value=\"group.id\">{{ group.name }}</option>\n        </select>\n    </div>\n\n</template>\n\n<script setup>\n    import {ref, onMounted, defineEmits, inject} from '@vue/runtime-core';\n\n    const groups = ref([]);\n    const mstrings = inject('mstrings');\n    const showgroupselect = ref(false);\n\n    const emit = defineEmits(['groupselected']);\n\n    /**\n     * Get groups for this course.\n     */\n    function get_groups() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_groups',\n            args: {\n                courseid\n            }\n        }])[0]\n        .then((result) => {\n            groups.value = result;\n            showgroupselect.value = groups.value.length > 0;\n        })\n        .catch((error) => {\n            window.console.error(error);\n        })\n    }\n\n    // Handle change of selection in dropdown.\n    function group_change(event) {\n        const groupid = event.target.value;\n        emit('groupselected', groupid);\n    }\n\n    onMounted(() => {\n        get_groups();\n    });\n</script>","import script from \"./GroupSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GroupSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"col-12 col-lg-6\">\n        <LevelOneSelect  @levelchange=\"levelOneChange\"></LevelOneSelect>\n        <div>\n            <ActivitySelect v-if=\"showactivityselect\" :categoryid=\"level1category\" :currentitem=\"itemid\" @activityselected=\"activity_selected\"></ActivitySelect>\n        </div>\n        <GroupSelect v-if=\"itemid\" @groupselected=\"groupselected\"></GroupSelect>\n    </div>\n</template>\n\n<script setup>\n    import {ref, defineEmits} from '@vue/runtime-core';\n    import LevelOneSelect from '@/components/LevelOneSelect.vue';\n    import ActivitySelect from '@/components/ActivitySelect.vue';\n    import GroupSelect from '@/components/GroupSelect.vue'\n\n    const level1category = ref(0);\n    const showactivityselect = ref(false);\n    const itemid = ref(0);\n    const groupid = ref(0);\n\n    const emits = defineEmits(['selecteditemid'])\n\n    /**\n     * Capture change to top level category dropdown\n     * @param {*} level\n     */\n     function levelOneChange(level) {\n        itemid.value = 0;\n        level1category.value = parseInt(level);\n        if (level1category.value) {\n            showactivityselect.value = true;\n        } else {\n            showactivityselect.value = false;\n        }\n    }\n\n    /**\n     * Capture change to activity selection\n     */\n     function activity_selected(newitemid) {\n        itemid.value = Number(newitemid);\n        emits('selecteditemid', {\n            itemid: itemid.value,\n            groupid: groupid.value,\n        });\n    }\n\n    /**\n     * Capture change to group\n     */\n    function groupselected(gid) {\n        groupid.value = Number(gid);\n        emits('selecteditemid', {\n            itemid: itemid.value,\n            groupid: groupid.value,\n        });\n    }\n</script>","import script from \"./CaptureSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <a class=\"dropdown-item\" href=\"#\" @click=\"read_history()\">{{ mstrings.history }}</a>\n\n    <VueModal v-model=\"showhistorymodal\" modalClass=\"col-11 col-lg-5 rounded\" :title=\"mstrings.gradehistory\">\n        <div>\n            <ul class=\"list-unstyled\">\n                <li><b>{{ mstrings.name }}:</b> {{ name }}</li>\n                <li><b>{{ mstrings.itemname }}:</b> {{ itemname }}</li>\n            </ul>\n        </div>\n        <div v-if=\"grades.length == 0\" class=\"alert alert-warning\">{{ mstrings.nohistory }}</div>\n\n        <EasyDataTable v-else :headers=\"headers\" :items=\"grades\">\n        </EasyDataTable>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-right\">\n                    <button class=\"btn btn-warning\" type=\"button\" @click=\"showhistorymodal = false\">{{  mstrings.close }}</button>\n                </div>\n            </div>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, defineProps, onMounted, inject} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const showhistorymodal = ref(false);\n    const grades = ref([]);\n    const mstrings = inject('mstrings');\n    const headers = ref([]);\n\n    const toast = useToast();\n\n    const props = defineProps({\n        userid: Number,\n        itemid: Number,\n        name: String,\n        itemname: String,\n    });\n\n    /**\n     * Read history on button click\n     */\n    function read_history() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_history',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                userid: props.userid,\n            }\n        }])[0]\n        .then((result) => {\n            grades.value = result;\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        showhistorymodal.value = true;\n    }\n\n    /**\n     * Setup the table.\n     */\n    onMounted(() => {\n        headers.value = [\n               {text: mstrings.time, value: 'time'},\n               {text: mstrings.by, value: 'auditbyname'},\n               {text: mstrings.grade, value: 'displaygrade'},\n               {text: mstrings.gradetype, value: 'description'},\n               {text: mstrings.current, value: 'current'},\n               {text: mstrings.comment, value: 'auditcomment'},\n            ];\n    });\n</script>\n","import script from \"./HistoryButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HistoryButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <a class=\"dropdown-item\" href=\"#\" @click=\"import_grade()\">{{ mstrings.importusergrade }}</a>\n</template>\n\n<script setup>\n    import {inject, defineEmits, defineProps} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const mstrings = inject('mstrings');\n    const toast = useToast();\n\n    const props = defineProps({\n        itemid: Number,\n        userid: Number,\n    });\n\n    const emit = defineEmits(['imported']);\n\n    /**\n     * Import grade for single user\n     */\n     function import_grade() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_import_grade',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                userid: props.userid,\n            }\n        }])[0]\n        .then((result) => {\n            const success = result['success'];\n            if (success) {\n                toast.success(mstrings.gradeimporteduser);\n            } else {\n                toast.warning(mstrings.nothingtoimport);\n            }\n            emit('imported');\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n</script>","import script from \"./ImportUserGradeButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImportUserGradeButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <a class=\"dropdown-item\" href=\"#\" @click=\"add_grade()\">{{ mstrings.addgrade }}</a>\n\n    <VueModal v-model=\"showaddgrademodal\" modalClass=\"col-11 col-lg-5 rounded\" :title=\"mstrings.addgrade\">\n        <ul class=\"list-unstyled\">\n            <li><b>{{ mstrings.itemname }}:</b> {{ itemname }}</li>\n            <li><b>{{ mstrings.username }}:</b> {{ name }}</li>\n            <li><b>{{ mstrings.idnumber }}:</b> {{ idnumber }}</li>\n            <li>{{ reason }}</li>\n        </ul>\n        <FormKit class=\"border rounded\" type=\"form\"  @submit=\"submit_form\">\n            <FormKit\n                type=\"select\"\n                outer-class=\"mb-3\"\n                :label=\"mstrings.reasonforadditionalgrade\"\n                name=\"reason\"\n                v-model=\"reason\"\n                :options=\"gradetypes\"\n                :placeholder=\"mstrings.selectareason\"\n                validation=\"required\"\n            />\n            <FormKit\n                v-if = 'reason == \"OTHER\"'\n                :label=\"mstrings.pleasespecify\"\n                type=\"text\"\n                outer-class=\"mb-3\"\n                :placeholder=\"mstrings.pleasespecify\"\n                name=\"other\"\n                v-model=\"other\"\n            />\n            <FormKit\n                type=\"select\"\n                :label=\"mstrings.admingrades\"\n                name=\"admingrades\"\n                outer-class=\"mb-3\"\n                v-model=\"admingrade\"\n                :options=\"adminmenu\"\n            ></FormKit>\n            <FormKit\n                v-if=\"usescale\"\n                type=\"select\"\n                outer-class=\"mb-3\"\n                :label=\"mstrings.grade\"\n                :placeholder=\"mstrings.specifyscale\"\n                :disabled=\"admingrade != 'GRADE'\"\n                name=\"scale\"\n                v-model=\"scale\"\n                :options=\"scalemenu\"\n            ></FormKit>\n            <FormKit\n                v-if=\"!usescale\"\n                type=\"text\"\n                outer-class=\"mb-3\"\n                :label=\"mstrings.grade\"\n                :placeholder=\"mstrings.specifygrade\"\n                :validation=\"gradevalidation\"\n                :disabled=\"admingrade != 'GRADE'\"\n                number=\"float\"\n                validation-visibility=\"live\"\n                name=\"grade\"\n                v-model=\"grade\"\n            ></FormKit>\n            <FormKit\n                type=\"textarea\"\n                outer-class=\"mb-3\"\n                label=\"Notes\"\n                :placeholder=\"mstrings.reasonforammendment\"\n                name=\"notes\"\n                v-model=\"notes\"\n            />\n        </FormKit>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-right\">\n                    <button class=\"btn btn-warning\" type=\"button\" @click=\"showaddgrademodal = false\">{{  mstrings.cancel }}</button>\n                </div>\n            </div>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, defineProps, defineEmits, inject} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const showaddgrademodal = ref(false);\n    const mstrings = inject('mstrings');\n    const gradetypes = ref({});\n    const idnumber = ref('');\n    const reason = ref('');\n    const admingrade = ref('GRADE'); // GRADE == not an admin grade (a real grade)\n    const scale = ref('');\n    const grade = ref(0);\n    const notes = ref('');\n    const other = ref('');\n    const usescale = ref(false);\n    const grademax = ref(0);\n    const scalemenu = ref([]);\n    const adminmenu = ref([]);\n    const gradevalidation = ref([]);\n\n    const emit = defineEmits([\n        'gradeadded'\n    ]);\n\n    const toast = useToast();\n\n    const props = defineProps({\n        userid: Number,\n        itemid: Number,\n        itemname: String,\n        name: String,\n    });\n\n    /**\n     * Get data for form\n     */\n    function add_grade() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_add_grade_form',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                userid: props.userid,\n            }\n        }])[0]\n        .then((result) => {\n            gradetypes.value = result['gradetypes'];\n            idnumber.value = result['idnumber'];\n            usescale.value = result['usescale'];\n            grademax.value = result['grademax'];\n            scalemenu.value = result['scalemenu'];\n            adminmenu.value = result['adminmenu'];\n\n            // Add 'use grade' option onto front of adminmenu\n            adminmenu.value.unshift({\n                value: 'GRADE',\n                label: mstrings.selectnormalgrade,\n            });\n\n            gradevalidation.value = [\n                ['required'],\n                ['number'],\n                ['between', 0, result['grademax']],\n            ];\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        showaddgrademodal.value = true;\n    }\n\n    /**\n     * Process form submission\n     */\n    function submit_form() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_write_additional_grade',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                userid: props.userid,\n                admingrade: admingrade.value == 'GRADE' ? '' : admingrade.value,\n                reason: reason.value,\n                other: other.value,\n                scale: scale.value ? scale.value : 0, // WS expecting int\n                grade: grade.value,\n                notes: notes.value,\n            }\n        }])[0]\n        .then(() => {\n            emit('gradeadded');\n            toast.success(mstrings.gradeadded);\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        // close the modal\n        showaddgrademodal.value = false;\n    }\n</script>","import script from \"./AddGradeButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddGradeButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"dropdown\">\n        <button class=\"btn btn-outline-info btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <ImportUserGradeButton v-if=\"props.awaitingcapture\" :itemid=\"props.itemid\" :userid=\"props.userid\" @imported=\"grade_added()\"></ImportUserGradeButton>\n            <AddGradeButton :itemid=\"props.itemid\" :userid=\"props.userid\" :name=\"props.name\" :itemname=\"props.itemname\" @gradeadded = \"grade_added()\"></AddGradeButton>\n            <HistoryButton :userid=\"props.userid\" :itemid=\"props.itemid\" :name=\"props.name\" :itemname=\"props.itemname\"></HistoryButton>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {defineProps, defineEmits} from '@vue/runtime-core';\n    import HistoryButton from '@/components/Capture/HistoryButton.vue';\n    import ImportUserGradeButton from '@/components/Capture/ImportUserGradeButton.vue';\n    import AddGradeButton from '@/components/Capture/AddGradeButton.vue';\n\n    //const mstrings = inject('mstrings');\n\n    const props = defineProps({\n            userid: Number,\n            itemid: Number,\n            itemname: String,\n            name: String,\n            awaitingcapture: Boolean,\n        });\n\n    const emit = defineEmits([\n        'gradeadded'\n    ]);\n\n    function grade_added() {\n        emit('gradeadded');\n    }\n</script>","import script from \"./CaptureMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureMenu.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"preloader my-3\" :style=\"cssVars\">\n      <span class=\"rot-1\"></span>\n      <span class=\"rot-2\"></span>\n      <span class=\"rot-3\"></span>\n      <span class=\"rot-4\"></span>\n      <span class=\"rot-5\"></span>\n      <span class=\"rot-6\"></span>\n      <span class=\"rot-7\"></span>\n      <span class=\"rot-8\"></span>\n    </div>\n</template>\n\n<script setup>\n\n    import {defineProps, computed} from '@vue/runtime-core';\n\n    const props = defineProps({\n        color: {\n            type: String,\n            default: '#41b883'\n        },\n        scale: {\n            type: Number,\n            default: 1,\n        }\n    });\n\n    const cssVars = computed(() => {\n        return {\n            '--color': props.color,\n            '--scale': props.scale,\n        }\n    });\n</script>\n\n<style scoped>\n.preloader {\n  position: relative;\n  width: 125px;\n  height: 125px;\n  margin: auto;\n  transform: scale(var(--scale));\n}\n\n.preloader > span {\n  position: absolute;\n  background-color: transparent;\n  height: 22px;\n  width: 22px;\n  border-radius: 12px;\n  animation-name: f_fadeG;\n  animation-duration: 1.2s;\n  animation-iteration-count: infinite;\n  animation-direction: normal;\n}\n\n.rot-1 {\n  left: 0;\n  top: 51px;\n  animation-delay: 0.45s;\n}\n\n.rot-2 {\n  left: 15px;\n  top: 15px;\n  animation-delay: 0.6s;\n}\n\n.rot-3 {\n  left: 51px;\n  top: 0;\n  animation-delay: 0.75s;\n}\n\n.rot-4 {\n  right: 15px;\n  top: 15px;\n  animation-delay: 0.9s;\n}\n\n.rot-5 {\n  right: 0;\n  top: 51px;\n  animation-delay: 1.05s;\n}\n\n.rot-6 {\n  right: 15px;\n  bottom: 15px;\n  animation-delay: 1.2s;\n}\n\n.rot-7 {\n  left: 51px;\n  bottom: 0;\n  animation-delay: 1.35s;\n}\n\n.rot-8 {\n  left: 15px;\n  bottom: 15px;\n  animation-delay: 1.5s;\n}\n\n@keyframes f_fadeG {\n  0% {\n    background-color: var(--color);\n  }\n  100% {\n    background-color: transparent;\n  }\n}\n</style>","import script from \"./PreLoader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PreLoader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PreLoader.vue?vue&type=style&index=0&id=ad619dba&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/howard/Projects/Moodle41/app/public/local/gugrades/ui/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ad619dba\"]])\n\nexport default __exports__","<template>\n    <button type=\"button\" class=\"btn btn-outline-dark  mr-1\" @click=\"import_button_click()\">\n        <span v-if=\"groupimport\">{{ mstrings.importgradesgroup }}</span>\n        <span v-else>{{ mstrings.importgrades }}</span>\n    </button>\n\n    <VueModal v-model=\"showimportmodal\" modalClass=\"col-11 col-lg-5 rounded\" :title=\"mstrings.importgrades\">\n        <div v-if=\"is_importgrades\" class=\"alert alert-warning\">\n            {{ mstrings.gradesimported }}\n            <p v-if=\"groupimport\" class=\"mt-1\"><b>{{ mstrings.importinfogroup }}</b></p>\n        </div>\n        <div v-else class=\"alert alert-info\">\n            {{ mstrings.importinfo }}\n            <p v-if=\"groupimport\" class=\"mt-1\"><b>{{ mstrings.importinfogroup }}</b></p>\n        </div>\n\n        <div v-if=\"is_importgrades\" class=\"alert alert-info\">\n            <FormKit\n                type=\"checkbox\"\n                :label=\"mstrings.importadditional\"\n                :help=\"mstrings.importadditionalhelp\"\n                name=\"importadditional\"\n                v-model=\"importadditional\"\n                >\n                <template #help>\n                    <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> {{ mstrings.importadditionalhelp }}</p>\n                </template>\n            </FormKit>\n        </div>\n\n        <div v-if=\"recursiveavailable\" class=\"alert alert-secondary\">\n            <div v-if=\"!allgradesvalid\" class=\"alert alert-danger\">\n                {{ mstrings.invalidgradetype }}\n            </div>\n            <div v-else>\n                <FormKit\n                    type=\"checkbox\"\n                    :label=\"mstrings.recursiveimport\"\n                    :help=\"mstrings.recursiveimporthelp\"\n                    name=\"recursiveimport\"\n                    v-model=\"recursiveselect\"\n                    >\n                    <template #help>\n                        <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> {{ mstrings.recursiveimporthelp }}</p>\n                    </template>\n                </FormKit>\n            </div>\n        </div>\n\n        <div v-if=\"recursiveavailable && recursiveselect && !recursivematch\" class=\"alert alert-warning\">\n            {{ mstrings.importnomatch }}\n        </div>\n\n        <div class=\"mt-2 pt-2 border-top\">\n            <button\n                    class=\"btn btn-primary mr-1\"\n                    @click=\"importgrades()\"\n                    >{{ mstrings.yesimport }}\n            </button>\n            <button\n                class=\"btn btn-warning\"\n                @click=\"showimportmodal = false\"\n                >{{ mstrings.cancel }}\n            </button>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, defineProps, defineEmits, inject, computed} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const props = defineProps({\n        userids: Array,\n        itemid: Number,\n        groupid: Number,\n    });\n\n    const toast = useToast();\n    const groupimport = computed(() => {\n        return props.groupid > 0;\n    });\n\n    const emit = defineEmits(['imported']);\n\n    const showimportmodal = ref(false);\n    const is_importgrades = ref(false);\n    const recursiveavailable = ref(false);\n    const recursivematch = ref(false);\n    const recursiveselect = ref(false);\n    const importadditional = ref(false);\n    const allgradesvalid = ref(false);\n    const mstrings = inject('mstrings');\n\n    /**\n     * Import confirmed. Select appropriate importfunction\n     */\n    function importgrades() {\n        if (recursiveselect.value) {\n            importrecursive();\n        } else {\n            importsingle();\n        }\n\n        showimportmodal.value = false;\n    }\n\n    /**\n     * Import single grade item\n     */\n     function importsingle() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_import_grades_users',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                additional: importadditional.value,\n                userlist: props.userids,\n            }\n        }])[0]\n        .then((result) => {\n            const importcount = result['importcount'];\n            emit('imported');\n            if (importcount) {\n                toast.success(mstrings.gradesimportedsuccess + ' (' + importcount + ')');\n            } else {\n                toast.warning(mstrings.nogradestoimport);\n            }\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Import recursive grades\n     */\n    function importrecursive() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_import_grades_recursive',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                groupid: props.groupid,\n                additional: importadditional.value,\n            }\n        }])[0]\n        .then((result) => {\n            const itemcount = result.itemcount;\n            const gradecount = result.gradecount;\n            emit('imported');\n            if (gradecount) {\n                toast.success(mstrings.gradesimportedsuccess + ' (' + itemcount + ', ' + gradecount + ')');\n            } else {\n                toast.warning(mstrings.nogradestoimport);\n            }\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * When button clicked\n     * Check for existing grades\n     */\n    function import_button_click() {\n        showimportmodal.value = true;\n\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_is_grades_imported',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                groupid: props.groupid,\n            }\n        }])[0]\n        .then((result) => {\n            is_importgrades.value = result.imported;\n            recursiveavailable.value = result.recursiveavailable;\n            recursivematch.value = result.recursivematch;\n            allgradesvalid.value = result.allgradesvalid;\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n</script>","import script from \"./ImportButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImportButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button type=\"button\" class=\"btn btn-outline-info  mr-1\" @click=\"showcsvmodal = true\">{{ mstrings.csvimport }}</button>\n\n    <VueModal v-model=\"showcsvmodal\" modalClass=\"col-11 col-lg-6 rounded\" :title=\"mstrings.csvimport\">\n\n        <!-- Initial download/upload page -->\n        <div v-if=\"pagestate == 'showuploadpage'\">\n            <div class=\"border rounded p-5\">\n                <p><b>{{  mstrings.csvdownloadhelp }}</b></p>\n\n                <button class=\"btn btn-primary\" type=\"button\" @click=\"csv_download()\">{{  mstrings.csvdownload }}</button>\n            </div>\n\n            <form>\n                <FormKit class=\"border rounded\" type=\"form\" @submit=\"submit_csv_form\">\n                    <FormKit\n                        type=\"file\"\n                        name=\"csvupload\"\n                        label=\"CSV Upload\"\n                        accept=\".csv\"\n                        :help=\"mstrings.csvuploadhelp\"\n                        multiple=\"false\"\n                        inner-class=\"form-group\"\n                        input-class=\"form-control-file\"\n                        fileList-class=\"d-none\"\n                        nFiles-class=\"d-none\"\n                        />\n                </FormKit>\n            </form>\n        </div>\n\n        <!-- Test-run / confirm page -->\n        <div v-if=\"pagestate == 'showtestrun'\">\n            <p>{{ mstrings.csvtestrun }}</p>\n            <EasyDataTable :headers=\"headers\" :items=\"lines10\">\n                <template #item-gradevalue=\"item\">\n                    <span v-if=\"item.grade\">{{ item.gradevalue }}</span>\n                </template>\n                <template #item-error=\"item\">\n                    <i v-if=\"item.state < 0\" class=\"text-danger fa fa-times\" aria-hidden=\"true\"></i>\n                    <i v-if=\"item.state > 0\" class=\"text-success fa fa-check\" aria-hidden=\"true\"></i>\n                    <i v-if=\"item.state == 0\" class=\"text-warning fa fa-info\" aria-hidden=\"true\"></i>\n                    {{ item.error }}\n                </template>\n            </EasyDataTable>\n            <p v-if=\"errorcount\" class=\"text-danger mt-1\">{{ mstrings.lineswitherrors }}: {{ errorcount }}</p>\n\n            <!-- submit bit (if no errors) -->\n            <div v-if=\"!errorcount\" class=\"mt-2\">\n                <FormKit class=\"border rounded\" type=\"form\" @submit=\"submit_reason_form\">\n                    <FormKit\n                        type=\"select\"\n                        :label=\"mstrings.reasonforadditionalgrade\"\n                        name=\"reason\"\n                        v-model=\"reason\"\n                        :options=\"gradetypes\"\n                        :placeholder=\"mstrings.selectareason\"\n                        validation=\"required\"\n                    />\n                    <FormKit\n                        v-if = 'reason == \"OTHER\"'\n                        :label=\"mstrings.pleasespecify\"\n                        type=\"text\"\n                        :placeholder=\"mstrings.pleasespecify\"\n                        name=\"other\"\n                        v-model=\"other\"\n                    />\n                </FormKit>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-right\">\n                    <button class=\"btn btn-warning\" type=\"button\" @click=\"close_modal()\">{{  mstrings.cancel }}</button>\n                </div>\n            </div>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, defineProps, defineEmits, inject, onMounted, computed} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n    import { saveAs } from 'file-saver';\n\n    const showcsvmodal = ref(false);\n    const pagestate = ref('showuploadpage');\n    const csvcontent = ref('');\n    const errorcount = ref(0);\n    const addcount = ref(0);\n    const lines = ref([]);\n    const headers = ref([]);\n    const gradetypes = ref([]);\n    const reason = ref('');\n    const other = ref('');\n    const lines10 = computed(() =>{\n        return lines.value.slice(0, 10);\n    });\n    const mstrings = inject('mstrings');\n\n    const toast = useToast();\n\n    const props = defineProps({\n        itemid: Number,\n        groupid: Number,\n        itemname: String,\n    });\n\n    const emits = defineEmits(['uploaded']);\n\n    /**\n     * Download the pro-forma csv file\n     */\n    function csv_download() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_csv_download',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                groupid: props.groupid,\n            }\n        }])[0]\n        .then((result) => {\n            const csv = result['csv'];\n            const d = new Date();\n            const filename = props.itemname + '_' + d.toLocaleString() + '.csv';\n            const blob = new Blob([csv], {type: 'text/csv;charset=utf-8'});\n            saveAs(blob, filename);\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Process the uploaded CSV data\n     * @param testrun true = don't save the data\n     */\n    function process_uploaded(testrun) {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_upload_csv',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                groupid: props.groupid,\n                testrun: testrun,\n                reason: reason.value,\n                other: other.value,\n                csv: csvcontent.value,\n            }\n        }])[0]\n        .then((result) => {\n            lines.value = result.lines;\n            errorcount.value = result.errorcount;\n            addcount.value = result.addcount;\n            pagestate.value = 'showtestrun';\n            if (!testrun) {\n                toast.success(mstrings.csvgradesadd + ' (' + addcount.value + ')');\n                emits('uploaded');\n                close_modal();\n            }\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Get the add grade form stuff\n     */\n    function get_gradetypes() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_gradetypes',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n            }\n        }])[0]\n        .then((result) => {\n            gradetypes.value = result.gradetypes;\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Handle the submitted upload form\n     * Got working more by luck....\n     */\n    function submit_csv_form(data) {\n        const reader = new FileReader();\n        reader.addEventListener('load', (event) => {\n            csvcontent.value = event.target.result;\n\n            // Get all the stuffs for the next page\n            process_uploaded(true);\n            get_gradetypes();\n        });\n        reader.readAsText(data.csvupload[0].file);\n    }\n\n    /**\n     * Submit the final form with reason\n     */\n    function submit_reason_form() {\n        process_uploaded(false);\n    }\n\n    onMounted(() => {\n        headers.value = [\n            {text: mstrings.name, value: 'name'},\n            {text: mstrings.idnumber, value: 'idnumber'},\n            {text: mstrings.grade, value: 'grade'},\n            {text: mstrings.gradevalue, value: 'gradevalue'},\n            {text: mstrings.status, value: 'error'},\n        ];\n    });\n\n    /**\n     * Close the modal\n     */\n    function close_modal() {\n        showcsvmodal.value = false;\n        pagestate.value = 'showuploadpage';\n    }\n</script>\n","import script from \"./CSVImportButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CSVImportButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button type=\"button\" class=\"btn btn-outline-success mr-1\" @click=\"showreleasemodal=true\">\n        <span v-if=\"grouprelease\">{{ mstrings.releasegradesgroup }}</span>\n        <span v-else>{{ mstrings.releasegrades }}</span>\n    </button>\n\n    <VueModal v-model=\"showreleasemodal\" modalClass=\"col-11 col-lg-5 rounded\" :title=\"mstrings.releasegrades\">\n        <div class=\"alert alert-warning\">\n            {{ mstrings.releaseconfirm }}\n            <p v-if=\"grouprelease\" class=\"mt-1\"><b>{{ mstrings.releaseconfirmgroup }}</b></p>\n        </div>\n        <div class=\"mt-2 pt-2 border-top\">\n            <button\n                class=\"btn btn-primary mr-1\"\n                @click=\"release_grades()\"\n                >{{ mstrings.yesrelease }}\n            </button>\n            <button\n                class=\"btn btn-warning\"\n                @click=\"showreleasemodal = false\"\n                >{{ mstrings.cancel }}\n            </button>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, inject, defineProps, defineEmits, computed} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const showreleasemodal = ref(false);\n    const mstrings = inject('mstrings');\n\n    const emit = defineEmits(['released']);\n\n    const toast = useToast();\n\n    const props = defineProps({\n        gradeitemid: Number,\n        groupid: Number,\n    });\n\n    const grouprelease = computed(() => {\n        return props.groupid > 0;\n    });\n\n    /**\n     * Release grades on button click\n     */\n    function release_grades() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_release_grades',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.gradeitemid,\n                groupid: props.groupid,\n            }\n        }])[0]\n        .then(() => {\n            emit('released');\n            showreleasemodal.value = false;\n            toast.success(mstrings.gradesreleased);\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        showreleasemodal.value = true;\n    }\n</script>","import script from \"./ReleaseButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReleaseButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button v-if=\"hascapability && (itemtype == 'assign')\" type=\"button\" class=\"btn btn-outline-info  mr-1\" @click=\"export_worksheet()\">\n        {{ mstrings.exportworksheet }}\n    </button>\n</template>\n\n<script setup>\n    import {ref, defineProps, onMounted, inject} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n    import { saveAs } from 'file-saver';\n\n    const hascapability = ref(false);\n    const mstrings = inject('mstrings');\n\n    const toast = useToast();\n\n    const props = defineProps({\n        users: Array,\n        itemtype: String,\n        itemname: String,\n    });\n\n    /**\n     * Export data to file\n     */\n    function export_worksheet() {\n        let csv = '';\n        let line = [];\n\n        csv += mstrings.recordid + ',' + mstrings.gradenoun + ',' + mstrings.lastmodifiedgrade + ',' + mstrings.idnumber + '\\n';\n        props.users.forEach((user) => {\n            line = [\n                mstrings.hiddenuser + ' ' + user.uniqueid,\n                '',\n                '',\n                user.idnumber,\n            ];\n            csv += line.toString() + '\\n';\n        });\n\n        const blob = new Blob([csv], {type: 'text/csv;charset=utf-8'});\n        saveAs(blob, props.itemname + '.csv');\n    }\n\n    /**\n     * Check capability\n     */\n    onMounted(() => {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_has_capability',\n            args: {\n                courseid: courseid,\n                capability: 'local/gugrades:exportworksheet'\n            }\n        }])[0]\n        .then((result) => {\n            hascapability.value = result['hascapability'];\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n    });\n\n</script>","import script from \"./ExportWorksheetButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ExportWorksheetButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button v-if=\"hascapability\" type=\"button\" class=\"btn btn-outline-success  mr-1\" @click=\"toggle_view()\">\n        <span v-if=\"!togglereveal\">{{ mstrings.viewfullnames }}</span>\n        <span v-if=\"togglereveal\">{{ mstrings.hidefullnames }}</span>\n    </button>\n</template>\n\n<script setup>\n    import {ref, onMounted, inject, defineEmits} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const hascapability = ref(false);\n    const togglereveal = ref(false);\n    const mstrings = inject('mstrings');\n\n    const emit = defineEmits(['viewfullnames']);\n\n    const toast = useToast();\n\n    /**\n     * Export data to file\n     */\n    function toggle_view() {\n        togglereveal.value = !togglereveal.value;\n        emit('viewfullnames', togglereveal.value);\n    }\n\n    /**\n     * Check capability\n     */\n    onMounted(() => {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_has_capability',\n            args: {\n                courseid: courseid,\n                capability: 'local/gugrades:viewhiddennames'\n            }\n        }])[0]\n        .then((result) => {\n            hascapability.value = result['hascapability'];\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n    });\n\n</script>","import script from \"./ViewFullNamesButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ViewFullNamesButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button type=\"button\" class=\"btn btn-outline-danger  mr-1\" @click=\"add_multiple_button_click()\">\n        {{ mstrings.addmultiple }}\n    </button>\n\n    <VueModal v-model=\"showaddmultiplemodal\" modalClass=\"col-11 col-lg-5 rounded\" :title=\"mstrings.addmultiple\">\n        <FormKit class=\"border rounded\" type=\"form\" @submit=\"submit_form\">\n            <FormKit\n                type=\"select\"\n                :label=\"mstrings.reasonforadditionalgrade\"\n                name=\"reason\"\n                v-model=\"reason\"\n                :options=\"gradetypes\"\n                :placeholder=\"mstrings.selectareason\"\n                validation=\"required\"\n            />\n            <FormKit\n                v-if = 'reason == \"OTHER\"'\n                :label=\"mstrings.pleasespecify\"\n                type=\"text\"\n                :placeholder=\"mstrings.pleasespecify\"\n                name=\"other\"\n                v-model=\"other\"\n            />\n            <FormKit\n                type=\"textarea\"\n                label=\"Notes\"\n                :placeholder=\"mstrings.reasonforammendment\"\n                name=\"notes\"\n                v-model=\"notes\"\n            />\n        </FormKit>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-right\">\n                    <button class=\"btn btn-warning\" type=\"button\" @click=\"showaddmultiplemodal = false\">{{  mstrings.cancel }}</button>\n                </div>\n            </div>\n        </div>\n    </VueModal>\n</template>\n\n<script setup>\n    import {ref, defineProps, defineEmits, inject} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const showaddmultiplemodal = ref(false);\n    const mstrings = inject('mstrings');\n    const gradetypes = ref({});\n    const reason = ref('');\n    const notes = ref('');\n    const other = ref('');\n\n    const emits = defineEmits([\n        'editcolumn'\n    ]);\n\n    const toast = useToast();\n\n    const props = defineProps({\n        itemid: Number,\n    });\n\n    /**\n     * Button clicked\n     */\n    function add_multiple_button_click() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_gradetypes',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n            }\n        }])[0]\n        .then((result) => {\n            gradetypes.value = result.gradetypes;\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        showaddmultiplemodal.value = true;\n    }\n\n    /**\n     * Get all the details for the cell forms\n     */\n     function get_capture_cell_form(columnid) {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_capture_cell_form',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n            }\n        }])[0]\n        .then((result) => {\n            const usescale = result.usescale;\n            const grademax = result.grademax;\n            const scalemenu = result.scalemenu;\n            const adminmenu = result.adminmenu;\n\n            // Add 'use grade' option onto front of adminmenu\n            adminmenu.unshift({\n                value: 'GRADE',\n                label: mstrings.selectnormalgradeshort,\n            });\n\n            // send all this stuff back\n            emits('editcolumn', {\n                columnname: 'GRADE' + columnid,\n                gradetype: reason.value,\n                usescale: usescale,\n                grademax: grademax,\n                scalemenu: scalemenu,\n                adminmenu: adminmenu,\n            });\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Process form submission\n     */\n    function submit_form() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_write_column',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n                reason: reason.value,\n                other: other.value,\n                notes: notes.value,\n            }\n        }])[0]\n        .then((result) => {\n            const columnid = result.columnid;\n            get_capture_cell_form(columnid);\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        // close the modal\n        showaddmultiplemodal.value = false;\n    }\n</script>","import script from \"./AddMultipleButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddMultipleButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"col-12 mt-2\">\n        <div class=\"row\">\n            <ImportButton :itemid=\"props.itemid\" :groupid=\"props.groupid\" :userids=\"props.userids\" @imported=\"emit('refreshtable')\"></ImportButton>\n            <CSVImportButton :itemid=\"props.itemid\" :groupid=\"props.groupid\" :itemname=\"props.itemname\" @uploaded=\"emit('refreshtable')\"></CSVImportButton>\n            <AddMultipleButton :itemid=\"props.itemid\"  @editcolumn=\"multipleclicked\"></AddMultipleButton>\n            <ReleaseButton v-if=\"props.gradesimported\" :gradeitemid=\"props.itemid\" :groupid=\"props.groupid\" @released=\"emit('refreshtable')\"></ReleaseButton>\n            <ExportWorksheetButton v-if=\"itemtype=='assign'\" :users=\"props.users\" :itemtype=\"props.itemtype\" :itemname=\"props.itemname\"></ExportWorksheetButton>\n            <ViewFullNamesButton v-if=\"props.usershidden\"  @viewfullnames=\"viewfullnames\"></ViewFullNamesButton>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {defineProps, defineEmits} from '@vue/runtime-core';\n    import ImportButton from '@/components/Capture/ImportButton.vue';\n    import CSVImportButton from '@/components/Capture/CSVImportButton.vue';\n    import ReleaseButton from '@/components/Capture/ReleaseButton.vue';\n    import ExportWorksheetButton from '@/components/Capture/ExportWorksheetButton.vue';\n    import ViewFullNamesButton from '@/components/Capture/ViewFullNamesButton.vue';\n    import AddMultipleButton from '@/components/Capture/AddMultipleButton.vue';\n\n    const props = defineProps({\n        itemid: Number,\n        groupid: Number,\n        userids: Array,\n        users: Array,\n        itemtype: String,\n        itemname: String,\n        usershidden: Boolean,\n        gradesimported: Boolean,\n    });\n\n    const emit = defineEmits(['viewfullnames', 'refreshtable', 'editcolumn']);\n\n    /**\n     * Handle viewfullnames\n     * @param bool toggleview\n     */\n     function viewfullnames(toggleview) {\n        emit('viewfullnames', toggleview);\n    }\n\n    /**\n     * Multiple button has added another column\n     * We need to know what it was\n     */\n    function multipleclicked(cellform) {\n        emit('editcolumn', cellform);\n    }\n\n</script>","import script from \"./CaptureButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"col-12 mt-2\">\n        <div v-if=\"!props.gradesupported\" class=\"alert alert-danger\">\n            <span v-html=\"mstrings.gradenotsupported\"></span>\n        </div>\n\n        <div v-if=\"props.gradehidden\" class=\"alert alert-warning\">\n            <span v-html=\"mstrings.gradehidden\"></span>\n        </div>\n\n        <div v-if=\"props.gradelocked\" class=\"alert alert-warning\">\n            <span v-html=\"mstrings.gradelocked\"></span>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {inject, defineProps} from '@vue/runtime-core';\n\n    const mstrings = inject('mstrings');\n\n    const props = defineProps({\n        gradesupported: Boolean,\n        gradehidden: Boolean,\n        gradelocked: Boolean,\n    });\n</script>","import script from \"./CaptureAlerts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureAlerts.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <a href=\"#\" class=\"ml-1\"><i class=\"fa fa-cogs fa-lg\" aria-hidden=\"true\" @click=\"cog_clicked\"></i></a>\n</template>\n\n<script setup>\n    import {defineProps, defineEmits, inject} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    const props = defineProps({\n        itemid: Number,\n        header: Object,\n        active: Boolean,\n    });\n\n    const mstrings = inject('mstrings');\n    const toast = useToast();\n\n    const emits = defineEmits(['editcolumn']);\n\n    /**\n     * Cog wheel has been clicked\n     */\n    function cog_clicked() {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_capture_cell_form',\n            args: {\n                courseid: courseid,\n                gradeitemid: props.itemid,\n            }\n        }])[0]\n        .then((result) => {\n            const usescale = result.usescale;\n            const grademax = result.grademax;\n            const scalemenu = result.scalemenu;\n            const adminmenu = result.adminmenu;\n\n            // Add 'use grade' option onto front of adminmenu\n            adminmenu.unshift({\n                value: 'GRADE',\n                label: mstrings.selectnormalgradeshort,\n            });\n\n            // send all this stuff back\n            emits('editcolumn', {\n                columnname: props.header.value,\n                gradetype: props.header.gradetype,\n                usescale: usescale,\n                grademax: grademax,\n                scalemenu: scalemenu,\n                adminmenu: adminmenu,\n            });\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n</script>","import script from \"./CaptureColumnEditCog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureColumnEditCog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"row\">\n        <FormKit\n            type=\"select\"\n            name=\"admingrades\"\n            outer-class=\"col pr-1\"\n            v-model=\"admingrade\"\n            :options=\"adminmenu\"\n            @input=\"input_updated\"\n        ></FormKit>\n        <FormKit\n            v-if=\"!props.usescale\"\n            outer-class=\"col pl-0\"\n            type=\"text\"\n            number=\"float\"\n            :validation=\"gradevalidation\"\n            validation-visibility=\"live\"\n            maxlength=\"8\"\n            name=\"grade\"\n            v-model=\"grade\"\n            :disabled=\"admingrade != 'GRADE'\"\n            @input=\"input_updated\"\n        ></FormKit>\n        <FormKit\n            v-if=\"props.usescale\"\n            type=\"select\"\n            :placeholder=\"mstrings.scale\"\n            outer-class=\"col pl-0\"\n            :disabled=\"admingrade != 'GRADE'\"\n            name=\"scale\"\n            v-model=\"grade\"\n            :options=\"scalemenu\"\n            @input=\"input_updated\"\n        ></FormKit>\n    </div>\n</template>\n\n<script setup>\n    import {ref, defineProps, onMounted, onBeforeUnmount, defineEmits, inject, watch, computed} from '@vue/runtime-core';\n    import { useToast } from \"vue-toastification\";\n\n    // (item.id is current userid)\n    // (item.reason is the reason/gradetype)\n    // (item.other is the other text)\n    // (item.gradeitemid)\n    const props = defineProps({\n        item: Object,\n        gradeitemid: Number,\n        column: String,\n        gradetype: String,\n        usescale: Boolean,\n        scalemenu: Array,\n        adminmenu: Array,\n        grademax: Number,\n        cancelled: Boolean,\n    });\n\n    const grade = ref('');\n    let   originalgrade = '';\n    //const scale = ref(0);\n    const admingrade = ref('GRADE');\n    const edited = ref(false);\n    const toast = useToast();\n    const mstrings = inject('mstrings');\n\n    const emits = defineEmits(['gradewritten', 'gradecancel']);\n\n    // validation depends on grademax\n    const gradevalidation = computed(() => {\n        return [\n            ['number'],\n            ['between', 0, props.grademax],\n        ];\n    })\n\n    /**\n     * Watch out for cancel being clicked \n     * This carry on because the prop doesn't get updated when\n     * unMount in progress\n     */\n    watch(\n        () => props.cancelled,\n        () => {\n            emits('gradecancel');\n        }\n    );\n\n    onMounted(() => {\n\n        // Extract the correct current grade from the item\n        const value = props.item[props.column];\n\n        // If it's a scale - find the value\n        if (props.usescale) {\n            props.scalemenu.forEach((scaleitem) => {\n                if (scaleitem.label == value) {\n                    grade.value = scaleitem.value;\n                }\n            });\n        } else {\n            grade.value = value;\n        }\n\n        // Could is be an admingrade?\n        props.adminmenu.forEach((adminitem) => {\n            if (adminitem.value == value) {\n                admingrade.value = value;\n                grade.value = '';\n            }\n        });\n\n        originalgrade = grade.value;\n    });\n\n    /**\n     * Change made to edit box\n     *\n     */\n    function input_updated() {\n\n        // If anything has changed, flag that we will need\n        // to save it at some point.\n        edited.value = true;\n    }\n\n    /**\n     * When this component closes, save the data\n     */\n    onBeforeUnmount(() => {\n\n        // if this cell hasn't been edited then nothing to do!\n        if (props.cancelled || (originalgrade == grade.value)) {\n            return;\n        }\n\n        const userid = props.item.id;\n        const reason = props.gradetype;\n        const other = props.item.other;\n        const gradeitemid = props.gradeitemid;\n        const saveadmingrade = admingrade.value == 'GRADE' ? '' : admingrade.value;\n        const savescale = (admingrade.value == 'GRADE') && props.usescale ? grade.value : 0;\n        const savegrade = (admingrade.value == 'GRADE') && !props.usescale ? grade.value : 0;\n        const notes = '';\n\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        fetchMany([{\n            methodname: 'local_gugrades_write_additional_grade',\n            args: {\n                courseid: courseid,\n                gradeitemid: gradeitemid,\n                userid: userid,\n                admingrade: saveadmingrade,\n                reason: reason,\n                other: other,\n                scale: savescale,\n                grade: parseFloat(savegrade),\n                notes: notes,\n            }\n        }])[0]\n        .then(() => {\n            //emits('gradewritten');\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n\n        emits('gradewritten');\n    });\n\n</script>","import script from \"./EditCaptureCell.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditCaptureCell.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { shallowRef, watchEffect, readonly, ref, watch, customRef, getCurrentScope, onScopeDispose, effectScope, getCurrentInstance, provide, inject, isVue3, version, isRef, unref, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, isVue2, set as set$1, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\n\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, {\n    ...options,\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  });\n  return readonly(result);\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = typeof fn === \"function\" ? fn : fn.get;\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = /* @__PURE__ */ new Set();\n  const off = (fn) => {\n    fns.delete(fn);\n  };\n  const on = (fn) => {\n    fns.add(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (...args) => {\n    return Promise.all(Array.from(fns).map((fn) => fn(...args)));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return (...args) => {\n    if (!initialized) {\n      state = scope.run(() => stateFactory(...args));\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nconst localProvidedStateMap = /* @__PURE__ */ new WeakMap();\n\nconst provideLocal = (key, value) => {\n  var _a;\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"provideLocal must be called in setup\");\n  if (!localProvidedStateMap.has(instance))\n    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));\n  const localProvidedState = localProvidedStateMap.get(instance);\n  localProvidedState[key] = value;\n  provide(key, value);\n};\n\nconst injectLocal = (...args) => {\n  var _a;\n  const key = args[0];\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"injectLocal must be called in setup\");\n  if (localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))\n    return localProvidedStateMap.get(instance)[key];\n  return inject(...args);\n};\n\nfunction createInjectionState(composable, options) {\n  const key = (options == null ? void 0 : options.injectionKey) || Symbol(\"InjectionState\");\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provideLocal(key, state);\n    return state;\n  };\n  const useInjectedState = () => injectLocal(key);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] extendRef only works in Vue 2.7 or above.\");\n    return;\n  }\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = { ...obj };\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction toValue(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nconst resolveUnref = toValue;\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(\n    keys.map((key) => {\n      const value = obj[key];\n      return [\n        key,\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n      ];\n    })\n  );\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nconst isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nconst isWorker = typeof WorkerGlobalScope !== \"undefined\" && globalThis instanceof WorkerGlobalScope;\nconst isDef = (val) => typeof val !== \"undefined\";\nconst notNullish = (val) => val != null;\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\nconst isIOS = /* @__PURE__ */ getIsIOS();\nfunction getIsIOS() {\n  var _a, _b;\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  const filter = (invoke) => {\n    const duration = toValue(ms);\n    const maxDuration = toValue(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(invoke());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(ms, trailing = true, leading = true, rejectOnCancel = false) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = toValue(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nconst directiveHooks = {\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\n};\n\nfunction cacheStringFunction(fn) {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = Number.parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction objectOmit(obj, keys, omitUndefined = false) {\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\n  }));\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction getLifeCycleTarget(target) {\n  return target || getCurrentInstance();\n}\n\nfunction toRef(...args) {\n  if (args.length !== 1)\n    return toRef$1(...args);\n  const r = args[0];\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\n}\nconst resolveRef = toRef;\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = toValue(defaultValue);\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = toValue(defaultValue);\n      trigger();\n    }, toValue(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(\n    debounceFilter(ms, options),\n    fn\n  );\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\n    fn\n  );\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(\n    ref,\n    {\n      get,\n      set,\n      untrackedGet,\n      silentSet,\n      peek,\n      lay\n    },\n    { enumerable: true }\n  );\n}\nconst controlledRef = refWithControl;\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction watchWithFilter(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  return watch(\n    source,\n    createFilterWrapper(\n      eventFilter,\n      cb\n    ),\n    watchOptions\n  );\n}\n\nfunction watchPausable(source, cb, options = {}) {\n  const {\n    eventFilter: filter,\n    ...watchOptions\n  } = options;\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter\n    }\n  );\n  return { stop, pause, resume, isActive };\n}\n\nfunction syncRef(left, right, ...[options]) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options || {};\n  const watchers = [];\n  const transformLTR = \"ltr\" in transform && transform.ltr || ((v) => v);\n  const transformRTL = \"rtl\" in transform && transform.rtl || ((v) => v);\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchers.push(watchPausable(\n      left,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        right.value = transformLTR(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchers.push(watchPausable(\n      right,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        left.value = transformRTL(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  const stop = () => {\n    watchers.forEach((w) => w.stop());\n  };\n  return stop;\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(\n    source,\n    (newValue) => targets.forEach((target) => target.value = newValue),\n    { flush, deep, immediate }\n  );\n}\n\nfunction toRefs(objectRef, options = {}) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        var _a;\n        const replaceRef = (_a = toValue(options.replaceRef)) != null ? _a : true;\n        if (replaceRef) {\n          if (Array.isArray(objectRef.value)) {\n            const copy = [...objectRef.value];\n            copy[key] = v;\n            objectRef.value = copy;\n          } else {\n            const newObject = { ...objectRef.value, [key]: v };\n            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));\n            objectRef.value = newObject;\n          }\n        } else {\n          objectRef.value[key] = v;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeMount(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeUnmount(fn, target);\n}\n\nfunction tryOnMounted(fn, sync = true, target) {\n  const instance = getLifeCycleTarget();\n  if (instance)\n    onMounted(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onUnmounted(fn, target);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        r,\n        (v) => {\n          if (condition(v) !== isNot) {\n            stop == null ? void 0 : stop();\n            resolve(v);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        [r, value],\n        ([v1, v2]) => {\n          if (isNot !== (v1 === v2)) {\n            stop == null ? void 0 : stop();\n            resolve(v1);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {\n          stop == null ? void 0 : stop();\n          return toValue(r);\n        })\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(toValue(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(toValue(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction defaultComparator(value, othVal) {\n  return value === othVal;\n}\nfunction useArrayDifference(...args) {\n  var _a;\n  const list = args[0];\n  const values = args[1];\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\n  if (typeof compareFn === \"string\") {\n    const key = compareFn;\n    compareFn = (value, othVal) => value[key] === othVal[key];\n  }\n  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => toValue(\n    toValue(list).find((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(() => toValue(\n    !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction isArrayIncludesOptions(obj) {\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\n}\nfunction useArrayIncludes(...args) {\n  var _a;\n  const list = args[0];\n  const value = args[1];\n  let comparator = args[2];\n  let formIndex = 0;\n  if (isArrayIncludesOptions(comparator)) {\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\n    comparator = comparator.comparator;\n  }\n  if (typeof comparator === \"string\") {\n    const key = comparator;\n    comparator = (element, value2) => element[key] === toValue(value2);\n  }\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);\n  return computed(() => toValue(list).slice(formIndex).some((element, index, array) => comparator(\n    toValue(element),\n    toValue(value),\n    index,\n    toValue(array)\n  )));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);\n  return computed(() => {\n    const resolved = toValue(list);\n    return args.length ? resolved.reduce(reduceCallback, toValue(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueElementsBy(array, fn) {\n  return array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x, array)))\n      acc.push(v);\n    return acc;\n  }, []);\n}\nfunction useArrayUnique(list, compareFn) {\n  return computed(() => {\n    const resolvedList = toValue(list).map((element) => toValue(element));\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\n  });\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  let _initialValue = unref(initialValue);\n  const count = ref(initialValue);\n  const {\n    max = Number.POSITIVE_INFINITY,\n    min = Number.NEGATIVE_INFINITY\n  } = options;\n  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);\n  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = _initialValue) => {\n    _initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\nconst REGEX_FORMAT = /[YMDHhms]o|\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n}\nfunction formatOrdinal(num) {\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n  const v = num % 100;\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\n}\nfunction formatDate(date, formatStr, options = {}) {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    Yo: () => formatOrdinal(years),\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    Mo: () => formatOrdinal(month + 1),\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\n    D: () => String(days),\n    Do: () => formatOrdinal(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    Ho: () => formatOrdinal(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    ho: () => formatOrdinal(hours % 12 || 12),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mo: () => formatOrdinal(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    so: () => formatOrdinal(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\n    var _a2, _b;\n    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;\n  });\n}\nfunction normalizeDate(date) {\n  if (date === null)\n    return new Date(Number.NaN);\n  if (date === void 0)\n    return /* @__PURE__ */ new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n}\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = toValue(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || typeof interval === \"function\") {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(\n    callback ? () => {\n      update();\n      callback(counter.value);\n    } : update,\n    interval,\n    { immediate }\n  );\n  if (exposeControls) {\n    return {\n      counter,\n      reset,\n      ...controls\n    };\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(\n    source,\n    () => ms.value = timestamp(),\n    options\n  );\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, toValue(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(\n    callback != null ? callback : noop,\n    interval,\n    options\n  );\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return {\n      ready,\n      ...controls\n    };\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = toValue(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && Number.isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${toValue(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = toValue(truthyValue);\n      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = Array.from({ length: oldList.length });\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nfunction watchAtMost(source, cb, options) {\n  const {\n    count,\n    ...watchOptions\n  } = options;\n  const current = ref(0);\n  const stop = watchWithFilter(\n    source,\n    (...args) => {\n      current.value += 1;\n      if (current.value >= toValue(count))\n        nextTick(() => stop());\n      cb(...args);\n    },\n    watchOptions\n  );\n  return { count: current, stop };\n}\n\nfunction watchDebounced(source, cb, options = {}) {\n  const {\n    debounce = 0,\n    maxWait = void 0,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: debounceFilter(debounce, { maxWait })\n    }\n  );\n}\n\nfunction watchDeep(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      deep: true\n    }\n  );\n}\n\nfunction watchIgnorable(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  const filteredCb = createFilterWrapper(\n    eventFilter,\n    cb\n  );\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(\n      source,\n      (...args) => {\n        if (!ignore.value)\n          filteredCb(...args);\n      },\n      watchOptions\n    );\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(\n      watch(\n        source,\n        () => {\n          syncCounter.value++;\n        },\n        { ...watchOptions, flush: \"sync\" }\n      )\n    );\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(\n      watch(\n        source,\n        (...args) => {\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n          ignoreCounter.value = 0;\n          syncCounter.value = 0;\n          if (ignore)\n            return;\n          filteredCb(...args);\n        },\n        watchOptions\n      )\n    );\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchImmediate(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      immediate: true\n    }\n  );\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n  return stop;\n}\n\nfunction watchThrottled(source, cb, options = {}) {\n  const {\n    throttle = 0,\n    trailing = true,\n    leading = true,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: throttleFilter(throttle, trailing, leading)\n    }\n  );\n}\n\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return {\n    ...res,\n    trigger\n  };\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => toValue(item));\n  return toValue(sources);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  return watch(\n    source,\n    (v, ov, onInvalidate) => {\n      if (v)\n        cb(v, ov, onInvalidate);\n    },\n    options\n  );\n}\n\nexport { assert, refAutoReset as autoResetRef, bypassFilter, camelize, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, identity, watchIgnorable as ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","<template>\n    <div>\n        <div class=\"border rounded p-2 mt-2\">\n            <div class=\"col-12 mb-2\">\n                <button class=\"badge badge-primary\" @click=\"selectcollapse\">\n                    <span v-if=\"collapsed\"><i class=\"fa fa-arrow-right\"></i> {{ mstrings.show }}</span>\n                    <span v-else><i class=\"fa fa-arrow-down\"></i> {{ mstrings.hide }}</span>\n                </button>\n            </div>\n\n            <div id=\"captureselect\" class=\"collapse show\">\n                <CaptureSelect @selecteditemid=\"selecteditemid\"></CaptureSelect>\n\n                <div v-if=\"itemid\">\n                    <CaptureAlerts\n                        :gradesupported=\"gradesupported\"\n                        :gradehidden=\"gradehidden\"\n                        :gradelocked=\"gradelocked\"\n                        >\n                    </CaptureAlerts>\n\n                    <CaptureButtons\n                        v-if=\"gradesupported\"\n                        :itemid=\"itemid\"\n                        :groupid=\"groupid\"\n                        :userids=\"userids\"\n                        :users=\"users\"\n                        :itemtype=\"itemtype\"\n                        :itemname=\"itemname\"\n                        :usershidden=\"usershidden\"\n                        :gradesimported=\"gradesimported\"\n                        @refreshtable=\"refresh\"\n                        @viewfullnames=\"viewfullnames\"\n                        @editcolumn=\"editcog_clicked\"\n                        >\n                    </CaptureButtons>\n                </div>\n            </div>\n        </div>\n\n        <div v-if=\"itemid && gradesupported\" class=\"mt-2\">\n            <NameFilter v-if=\"!usershidden\" @selected=\"filter_selected\" ref=\"namefilterref\"></NameFilter>\n\n            <PreLoader v-if=\"!loaded\"></PreLoader>\n\n            <div v-if=\"showtable && loaded\">\n\n                <!-- button for saving cell edits -->\n                <div class=\"pb-1 clearfix\" v-if=\"ineditcellmode\">\n                    <button class=\"btn btn-warning float-right mr-1\" @click=\"edit_cell_cancelled\">{{ mstrings.cancel }}</button>\n                    <button class=\"btn btn-primary float-right mr-1\" @click=\"edit_cell_saved\">{{ mstrings.save }}</button>\n                </div>\n\n                <!-- Note. The array 'users' contains he lines of data. One record for each user -->\n                <EasyDataTable\n                    buttons-pagination\n                    alternating\n                    :items=\"users\"\n                    :headers=\"headers\"\n                    >\n\n                    <!-- add header text and edit cog next to cell if required -->\n                    <!-- component needs to return info about which column (which reason/gradetype has been selected)-->\n                    <template #header=\"header\">\n                        {{ header.text }}\n                        <CaptureColumnEditCog v-if=\"header.editable  && !ineditcellmode\" :header=\"header\" :itemid=\"itemid\" @editcolumn=\"editcog_clicked\"></CaptureColumnEditCog>\n                    </template>\n\n                    <!-- User picture column -->\n                    <template #item-slotuserpicture=\"item\">\n                        <img :src=\"item.pictureurl\" :alt=\"item.displayname\" class=\"userpicture defaultuserpic\" width=\"35\" height=\"35\"/>\n                    </template>\n\n                    <!--\n                    <template #item-grade=\"item\">\n                        <CaptureGrades :grades=\"item.grades\"></CaptureGrades>\n                    </template>\n                    -->\n\n                    <!-- switch to input for bulk editing (if selected) -->\n                    <template v-slot:[editcolumnslot]=\"item\">\n                        <EditCaptureCell\n                            :item=\"item\"\n                            :column=\"editcolumn\"\n                            :gradeitemid=\"itemid\"\n                            :gradetype=\"editgradetype\"\n                            :usescale=\"editusescale\"\n                            :scalemenu=\"editscalemenu\"\n                            :adminmenu=\"editadminmenu\"\n                            :grademax=\"editgrademax\"\n                            :cancelled=\"editcancelled\"\n                            @gradewritten = \"edit_grade_written()\"\n                            @gradecancel = \"edit_grade_written()\"\n                             >\n                        </EditCaptureCell>\n                    </template>\n\n                    <!-- dropdown in the final column -->\n                    <template #item-actions=\"item\">\n                        <CaptureMenu\n                            v-if=\"!ineditcellmode\"\n                            :itemid=\"itemid\"\n                            :userid=\"parseInt(item.id)\"\n                            :name=\"item.displayname\"\n                            :itemname=\"itemname\"\n                            :gradesimported=\"gradesimported\"\n                            :awaitingcapture=\"item.awaitingcapture\"\n                            @gradeadded = \"get_page_data(itemid, firstname, lastname, groupid)\"\n                            >\n                        </CaptureMenu>\n                    </template>\n\n                    <!-- show warning if grade sdo not agree -->\n                    <template #item-alert=\"item\">\n                        <span v-if=\"item.alert\" class=\"badge badge-danger\">{{ mstrings.discrepancy }}</span>\n                    </template>\n                </EasyDataTable>\n\n                <!-- button for saving cell edits -->\n                <div class=\"pb-1 clearfix\" v-if=\"ineditcellmode\">\n                    <button class=\"btn btn-warning float-right mr-1\" @click=\"edit_cell_cancelled\">{{ mstrings.cancel }}</button>\n                    <button class=\"btn btn-primary float-right mr-1\" @click=\"edit_cell_saved\">{{ mstrings.save }}</button>\n                </div>\n            </div>\n\n            <h2 v-if=\"!showtable\">{{ mstrings.nothingtodisplay }}</h2>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import {ref, computed, inject, watch} from '@vue/runtime-core';\n    import NameFilter from '@/components/NameFilter.vue';\n    import CaptureSelect from '@/components/CaptureSelect.vue';\n    //import CaptureGrades from '@/components/CaptureGrades.vue';\n    import CaptureMenu from '@/components/CaptureMenu.vue';\n    import PreLoader from '@/components/PreLoader.vue';\n    import { useToast } from \"vue-toastification\";\n    import CaptureButtons from '@/components/Capture/CaptureButtons.vue';\n    import CaptureAlerts from '@/components/CaptureAlerts.vue';\n    import CaptureColumnEditCog from '@/components/CaptureColumnEditCog.vue';\n    import EditCaptureCell from '@/components/Capture/EditCaptureCell.vue';\n    import { watchDebounced } from '@vueuse/core'\n\n    const users = ref([]);\n    const userids = ref([]);\n    const itemid = ref(0);\n    const groupid = ref(0);\n    const mstrings = inject('mstrings');\n    const totalrows = ref(0);\n    const currentpage = ref(1);\n    const usershidden = ref(false);\n    const namefilterref = ref(null);\n    const itemtype = ref('');\n    const itemname = ref('');\n    const gradesupported = ref(true);\n    const gradesimported = ref(false);\n    const gradehidden = ref(false);\n    const gradelocked = ref(false);\n    const columns = ref([]);\n    const loaded = ref(false);\n    const showalert = ref(false);\n    const revealnames = ref(false);\n    const collapsed = ref(false);\n    const editcolumn = ref('');\n    const editcolumnslot = ref('');\n    const editusescale = ref(false);\n    const editscalemenu = ref([]);\n    const editadminmenu = ref([]);\n    const editgradetype = ref('');\n    const editgrademax = ref(0);\n    const editgradecount = ref(0);\n    const editcancelled = ref(false);\n\n    const toast = useToast();\n\n    let firstname = '';\n    let lastname = '';\n\n    /**\n     * A watch for the itemid changing\n     * Lots of stuff gets reset if the itemid is changed. \n     */\n    watch(itemid, () => {\n        currentpage.value = 1;\n        revealnames.value = false;\n        editcolumn.value = '';\n        editcolumnslot.value = '';\n    });\n\n    /**\n     * Collapse selection area\n     */\n    function selectcollapse() {\n\n        // Bodge to get jQuery needed for Bootstrap JS.\n        const $ = window.jQuery;\n\n        if (collapsed.value) {\n            $('#captureselect').collapse('show');\n        } else {\n            $('#captureselect').collapse('hide');\n        }\n        collapsed.value = !collapsed.value;\n    }\n\n    /**\n     * New itemid and/or groupid has been selected\n     */\n    function selecteditemid(itemgroup) {\n        itemid.value = itemgroup.itemid;\n        groupid.value = itemgroup.groupid;\n\n        reload_page();\n    }\n\n    /**\n     * Column editcog has been clicked\n     */\n     function editcog_clicked(cellform) {\n\n        // Unpack data\n        const columnname = cellform.columnname;\n\n        // Note: this is the EasyDataTable slot name for the column.\n        editcolumnslot.value = 'item-' + columnname;\n        editcolumn.value = columnname;\n        editusescale.value = cellform.usescale;\n        editscalemenu.value = cellform.scalemenu;\n        editadminmenu.value = cellform.adminmenu;\n        editgradetype.value = cellform.gradetype;\n        editgrademax.value = cellform.grademax;\n        editcancelled.value = false;\n        reload_page();\n    }\n\n    /**\n     * In edit mode, the save button is clicked\n     */\n    function edit_cell_saved() {\n        editcolumn.value = '';\n        editcolumnslot.value = '';\n    }\n\n    /**\n     * In edit mode, the cancel button is clicked\n     * Set editcancelled to true and pass as prop to edit cells\n     * so it knows not to save.\n     */\n    function edit_cell_cancelled() {\n        editcancelled.value = true;\n    }\n\n    /**\n     * A cell has declared that it has been written (or cancelled)\n     * (We're probably getting lots of these)\n     * Just count them and we'll watch/debounce the count to update the table\n     */\n    function edit_grade_written() {\n        editgradecount.value++;\n    }\n\n    /**\n     * See above - watching edit cell written count in order to\n     * upgrade the main table\n     */\n     watchDebounced(\n        editgradecount,\n        () => {\n\n            // Duplicated for cancel\n            editcolumn.value = '';\n            editcolumnslot.value = '';\n\n            reload_page();\n        },\n        { debounce: 500, maxWait: 1000 },\n    );\n\n    /**\n     * Are we in \"edit a cell\" mode?\n     * Stuff doesn't appear, if so, and 'Save' button appears.\n     */\n    const ineditcellmode = computed(() => {\n        return editcolumn.value != '';\n    });\n\n    /**\n     * Get headers\n     */\n    const headers = computed(() => {\n        let heads = [];\n        if (!usershidden.value) {\n            heads.push({text: mstrings.userpicture, value: \"slotuserpicture\"});\n            heads.push({text: mstrings.firstnamelastname, value: \"displayname\", sortable: true})\n        } else {\n            heads.push({text: mstrings.participant, value: \"displayname\", sortable: true});\n        }\n        heads.push({text: mstrings.idnumber, value: \"idnumber\", sortable: true});\n        if (showalert.value) {\n            heads.push({text: mstrings.discrepancy, value: \"alert\"});\n        }\n\n        // Add the grades columns\n        columns.value.forEach(column => {\n\n            // Make sure that the value is a string\n            heads.push({\n                text: column.description,\n                value: 'GRADE' + column.id,\n                gradetype: column.gradetype,\n                editable: column.editable,\n            });\n        });\n\n        // Space for the buttons\n        heads.push({text: \"\", value: \"actions\"});\n\n        return heads;\n    });\n\n    /**\n     * Handle viewfullnames\n     * @param bool toggleview\n     */\n    function viewfullnames(toggleview) {\n        revealnames.value = toggleview;\n        reload_page();\n    }\n\n    /**\n     * Add grade columns into 'users' data so the table component can display them\n     * @param users\n     * @param columns\n     * @return array\n     */\n    function add_grades(users, columns) {\n        let grade = {};\n\n        showalert.value = false;\n        users.forEach(user => {\n\n            // Only show alert/discrepancy column if there are any\n            if (user.alert) {\n                showalert.value = true;\n            }\n\n            // Allow import if there are no grades for this user.\n            user.awaitingcapture = true;\n            columns.forEach(column => {\n                const columnname = 'GRADE' + column.id;\n                grade = user.grades.find((element) => {\n                    return (element.columnid == column.id);\n                });\n                if (grade) {\n                    user.awaitingcapture = false;\n                    user[columnname] = grade.displaygrade;\n                } else if (column.gradetype == 'FIRST') {\n                    user[columnname] = mstrings.awaitingcapture;\n                } else {\n                    user[columnname] = ' ';\n                }\n\n                // Is this column in 'editing mode'?\n                // If so, we add the 'editcolumn' ta (true) to each cell in that column\n                // The table slot can then pick it up and display an edit box\n                // Similarly the reason/gradetype stuff\n                user.editcolumn = (columnname == editcolumn.value);\n                user.reason = column.gradetype;\n                user.other = column.other;\n                user.gradeitemid = column.gradeitemid;\n            });\n        });\n\n        return users;\n    }\n\n    /**\n     * Helper function to reload the page\n     * (We have to do this in lots of places)\n     */\n    function reload_page() {\n        get_page_data(itemid.value, firstname, lastname, groupid.value);\n    }\n\n    /**\n     * Get filtered/paged data\n     * @param int itemid\n     * @param char first\n     * @param char last\n     * @param int gid (group id)\n     */\n     function get_page_data(itemid, first, last, gid) {\n        const GU = window.GU;\n        const courseid = GU.courseid;\n        const fetchMany = GU.fetchMany;\n\n        loaded.value = false;\n\n        fetchMany([{\n            methodname: 'local_gugrades_get_capture_page',\n            args: {\n                courseid: courseid,\n                gradeitemid: itemid,\n                firstname: first,\n                lastname: last,\n                groupid: gid,\n                viewfullnames: revealnames.value,\n            }\n        }])[0]\n        .then((result) => {\n            usershidden.value = result['hidden'];\n            users.value = result['users'];\n            itemtype.value = result['itemtype'];\n            itemname.value = result['itemname'];\n            gradesupported.value = result['gradesupported'];\n            gradesimported.value = result['gradesimported'];\n            gradehidden.value = result['gradehidden'];\n            gradelocked.value = result['gradelocked'];\n            columns.value = result['columns'];\n            userids.value = users.value.map(u => u.id);\n            totalrows.value = users.value.length;\n\n            users.value = add_grades(users.value, columns.value);\n\n            loaded.value = true;\n        })\n        .catch((error) => {\n            window.console.error(error);\n            toast.error('Error communicating with server (see console)');\n        });\n    }\n\n    /**\n     * Firstname/lastname filter selected\n     * @param {*} first\n     * @param {*} last\n     */\n    function filter_selected(first, last) {\n        if (first == 'all') {\n            first = '';\n        }\n        if (last == 'all') {\n            last = '';\n        }\n        firstname = first;\n        lastname = last;\n\n        // Reset page\n        currentpage.value = 1;\n        get_page_data(itemid.value, first, last, groupid.value);\n    }\n\n    /**\n     * Refresh the data table\n     */\n    function refresh() {\n        get_page_data(itemid.value, firstname, lastname, groupid.value);\n    }\n\n    /**\n     * Show table if there's anything to show\n     */\n    const showtable = computed(() => {\n        return users.value.length != 0;\n    });\n\n</script>","import script from \"./CaptureTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CaptureTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["bind","IndexedObject","toObject","lengthOfArrayLike","createMethod","TYPE","IS_FIND_LAST_INDEX","$this","callbackfn","that","value","result","O","self","boundFunction","index","undefined","module","exports","findLast","findLastIndex","uncurryThis","aCallable","NATIVE_BIND","fn","apply","arguments","$","$findLast","addToUnscopables","target","proto","this","length","b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","replace","readAsDataURL","l","m","sfc","props","__vccOpts","key","val","activeletter","ref","mstrings","inject","letters1","computed","Array","from","letters2","letterclicked","letter","event","preventDefault","emit","is_active","watch","selected","__exports__","first","last","showreset","first_selected","last_selected","reset_filter","__expose","level1categories","notsetup","getLevelOne","GU","courseid","fetchMany","methodname","args","then","catch","levelOneChange","categoryid","onMounted","activity_click","itemid","sub_activity_click","activityid","activitytree","categoryname","selectedactivity","loaded","collapsed","getActivity","catid","tree","JSON","parse","category","fullname","activity_selected","open_selection","currentitem","groups","showgroupselect","get_groups","group_change","groupid","level1category","showactivityselect","level","parseInt","newitemid","Number","emits","groupselected","gid","showhistorymodal","grades","headers","toast","useToast","read_history","gradeitemid","userid","text","time","by","grade","gradetype","current","comment","import_grade","success","gradeimporteduser","warning","nothingtoimport","showaddgrademodal","gradetypes","idnumber","reason","admingrade","scale","notes","other","usescale","grademax","scalemenu","adminmenu","gradevalidation","add_grade","unshift","label","selectnormalgrade","submit_form","gradeadded","grade_added","cssVars","color","groupimport","showimportmodal","is_importgrades","recursiveavailable","recursivematch","recursiveselect","importadditional","allgradesvalid","importgrades","importrecursive","importsingle","additional","userlist","userids","importcount","gradesimportedsuccess","nogradestoimport","itemcount","gradecount","import_button_click","imported","showcsvmodal","pagestate","csvcontent","errorcount","addcount","lines","lines10","slice","csv_download","csv","Date","filename","itemname","toLocaleString","blob","process_uploaded","testrun","csvgradesadd","close_modal","get_gradetypes","submit_csv_form","data","reader","addEventListener","readAsText","csvupload","file","submit_reason_form","gradevalue","showreleasemodal","grouprelease","release_grades","gradesreleased","hascapability","export_worksheet","line","recordid","gradenoun","lastmodifiedgrade","users","forEach","user","hiddenuser","uniqueid","toString","capability","togglereveal","toggle_view","showaddmultiplemodal","add_multiple_button_click","get_capture_cell_form","columnid","selectnormalgradeshort","columnname","viewfullnames","toggleview","multipleclicked","cellform","cog_clicked","header","originalgrade","edited","input_updated","cancelled","item","column","scaleitem","adminitem","onBeforeUnmount","id","saveadmingrade","savescale","savegrade","parseFloat","toValue","r","unref","WorkerGlobalScope","globalThis","Object","noop","createFilterWrapper","filter","wrapper","Promise","resolve","reject","thisArg","bypassFilter","invoke","debounceFilter","ms","options","timer","maxTimer","lastRejector","_clearTimeout","timer2","clearTimeout","duration","maxDuration","maxWait","rejectOnCancel","cacheStringFunction","cache","create","str","hit","hyphenateRE","camelizeRE","toLowerCase","_","toUpperCase","watchWithFilter","source","cb","eventFilter","watchOptions","watchDebounced","debounce","totalrows","currentpage","usershidden","namefilterref","itemtype","gradesupported","gradesimported","gradehidden","gradelocked","columns","showalert","revealnames","editcolumn","editcolumnslot","editusescale","editscalemenu","editadminmenu","editgradetype","editgrademax","editgradecount","editcancelled","firstname","lastname","selectcollapse","jQuery","collapse","selecteditemid","itemgroup","reload_page","editcog_clicked","edit_cell_saved","edit_cell_cancelled","edit_grade_written","ineditcellmode","heads","push","participant","sortable","userpicture","firstnamelastname","discrepancy","description","editable","add_grades","alert","awaitingcapture","find","element","displaygrade","get_page_data","map","u","filter_selected","refresh","showtable"],"sourceRoot":""}