{"version":3,"sources":["../src/imagecover.js"],"names":["define","$","Util","applySizing","each","wrapper","img","find","cover","feedback","marginTop","parseInt","css","marginLeft","debounceCoordsChanged","debounce","coords","width","right","left","height","bottom","top","topPos","position","leftPos","length","onCoordsChange","init","document","ready","targetNode","observerOptions","childList","attributes","subtree","on","observer","MutationObserver","count","interval","setInterval","clearTimeout","disconnect","observe"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Library to add image covers to prevent seizure inducing images from showing.\n *\n * @package   filter_ally\n * @author    Guy Thomas <osdev@blackboard.com>\n * @copyright Copyright (c) 2016 Blackboard Inc.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'filter_ally/util'], function($, Util) {\n    return new function() {\n\n        var applySizing = function() {\n            $('.ally-image-wrapper').each(function(){\n                var wrapper = this;\n                var img = $(wrapper).find('img');\n                var cover = $(wrapper).find('.ally-image-cover');\n                var feedback = $(wrapper).find('.ally-feedback');\n                var marginTop = parseInt($(img).css('marginTop'));\n                var marginLeft = parseInt($(img).css('marginLeft'));\n\n                var debounceCoordsChanged = Util.debounce(function(coords) {\n                    var width = (coords.right - coords.left);\n                    var height = (coords.bottom - coords.top);\n                    $(cover)\n                        .css('width', width + 'px')\n                        .css('height', height + 'px');\n                    var topPos = $(img).position().top + marginTop;\n                    var leftPos = $(img).position().left + marginLeft;\n                    $(cover)\n                        .css('top', topPos + 'px')\n                        .css('left', leftPos + 'px');\n                    if (feedback.length) {\n                        feedback\n                            .css('top', (topPos + height - feedback.height()) + 'px')\n                            .css('left', leftPos + 'px');\n                    }\n                }, 1000);\n\n                Util.onCoordsChange(img, function(coords) {\n                    debounceCoordsChanged(coords);\n                });\n            });\n        };\n\n        this.init = function() {\n            $(document).ready(applySizing);\n            var targetNode = document;\n            var observerOptions = {\n                childList: true,\n                attributes: true,\n                subtree: true\n            };\n            /**\n             *  By using the an event combined with a mutation observer that disconnects itself,\n             *  we can manage to have a mutation observer that works after page content lazy loaded by loaded in snap.\n             *  the interval is added as a redundancy to prevent calculation errors by correcting the indicator position.\n             * */\n            $(document).on('snap-course-content-loaded', function() {\n                var observer = new MutationObserver(() => {\n                    let count = 0;\n                    let interval = setInterval(function(){\n                        if (count < 5) {\n                            applySizing();\n                            count++;\n                        } else {\n                            clearTimeout(interval);\n                        }\n                    },500);\n                    observer.disconnect();\n                });\n                observer.observe(targetNode, observerOptions);\n            });\n        };\n    };\n});\n"],"file":"imagecover.min.js"}