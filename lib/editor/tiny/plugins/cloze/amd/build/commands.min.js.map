{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_cloze plugin.\n *\n * @module      tiny_cloze/commands\n * @copyright   2023 MoodleDACH\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    clozeeditButtonName,\n    icon,\n} from './common';\nimport {displayDialogue, resolveSubquestion, onInit, onBeforeGetContent, onSubmit} from './ui';\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        clozeButtonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('pluginname', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        // Check whether we are editing a question.\n        const body = document.querySelector('body#page-question-type-multianswer form, ' +\n          'body#page-question-type-multianswerwiris form');\n        // And if the editor is used on the question text.\n        if (!body || editor.id.indexOf('questiontext') === -1) {\n            return;\n        }\n        // Only if both conditions are valid, then continue setting up the plugin.\n\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the clozeedit Toolbar Button.\n        editor.ui.registry.addToggleButton(clozeeditButtonName, {\n            icon,\n            tooltip: clozeButtonText,\n            onAction: () => displayDialogue(editor),\n            onSetup: (api) => {\n                editor.on('click', () => {\n                     api.setActive(resolveSubquestion() !== false);\n                });\n              }\n        });\n\n        // Register the menu item.\n        editor.ui.registry.addMenuItem(clozeeditButtonName, {\n            icon,\n            text: clozeButtonText,\n            onAction: () => displayDialogue(editor),\n        });\n\n        editor.on('init', () => onInit(editor));\n        editor.on('BeforeGetContent', format => onBeforeGetContent(format));\n        editor.on('submit', () => onSubmit());\n    };\n};\n"],"names":["async","clozeButtonText","buttonImage","Promise","all","component","editor","document","querySelector","id","indexOf","ui","registry","addIcon","icon","html","addToggleButton","clozeeditButtonName","tooltip","onAction","onSetup","api","on","setActive","addMenuItem","text","format"],"mappings":"yOAwCwBA,gBAEhBC,gBACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,aAAcC,oBACxB,yBAAe,OAAQA,4BAGnBC,SAESC,SAASC,cAAc,6FAGgB,IAAvCF,OAAOG,GAAGC,QAAQ,kBAM/BJ,OAAOK,GAAGC,SAASC,QAAQC,aAAMZ,YAAYa,MAG7CT,OAAOK,GAAGC,SAASI,gBAAgBC,4BAAqB,CACpDH,KAAAA,aACAI,QAASjB,gBACTkB,SAAU,KAAM,uBAAgBb,QAChCc,QAAUC,MACNf,OAAOgB,GAAG,SAAS,KACdD,IAAIE,WAAmC,KAAzB,mCAM3BjB,OAAOK,GAAGC,SAASY,YAAYP,4BAAqB,CAChDH,KAAAA,aACAW,KAAMxB,gBACNkB,SAAU,KAAM,uBAAgBb,UAGpCA,OAAOgB,GAAG,QAAQ,KAAM,cAAOhB,UAC/BA,OAAOgB,GAAG,oBAAoBI,SAAU,0BAAmBA,UAC3DpB,OAAOgB,GAAG,UAAU,KAAM"}