{"version":3,"file":"view_manager.min.js","sources":["../src/view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {get_string as getString} from 'core/str';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\n\n/**\n * Limit number of events per day\n *\n */\nconst LIMIT_DAY_EVENTS = 5;\n\n/**\n * Hide day events if more than 5.\n *\n */\nexport const foldDayEvents = () => {\n    const root = $(CalendarSelectors.elements.monthDetailed);\n    const days = root.find(CalendarSelectors.day);\n    if (days.length === 0) {\n        return;\n    }\n    days.each(function() {\n        const dayContainer = $(this);\n        const eventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-eventtype]`;\n        const filteredEventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-filtered=\"true\"]`;\n        const moreEventsSelector = `${CalendarSelectors.elements.dateContent} [data-action=\"view-more-events\"]`;\n        const events = dayContainer.find(eventsSelector);\n        if (events.length === 0) {\n            return;\n        }\n\n        const filteredEvents = dayContainer.find(filteredEventsSelector);\n        const numberOfFiltered = filteredEvents.length;\n        const numberOfEvents = events.length - numberOfFiltered;\n\n        let count = 1;\n        events.each(function() {\n            const event = $(this);\n            const isNotFiltered = event.attr('data-event-filtered') !== 'true';\n            const offset = (numberOfEvents === LIMIT_DAY_EVENTS) ? 0 : 1;\n            if (isNotFiltered) {\n                if (count > LIMIT_DAY_EVENTS - offset) {\n                    event.attr('data-event-folded', 'true');\n                    event.hide();\n                } else {\n                    event.attr('data-event-folded', 'false');\n                    event.show();\n                    count++;\n                }\n            } else {\n                // It's being filtered out.\n                event.attr('data-event-folded', 'false');\n            }\n        });\n\n        const moreEventsLink = dayContainer.find(moreEventsSelector);\n        if (numberOfEvents > LIMIT_DAY_EVENTS) {\n            const numberOfHiddenEvents = numberOfEvents - LIMIT_DAY_EVENTS + 1;\n            moreEventsLink.show();\n            getString('moreevents', 'calendar', numberOfHiddenEvents).then(str => {\n                const link = moreEventsLink.find('strong a');\n                moreEventsLink.attr('data-event-folded', 'false');\n                link.text(str);\n                return str;\n            }).fail();\n        } else {\n            moreEventsLink.hide();\n        }\n    });\n};\n\n/**\n * Register and handle month calendar events.\n *\n * @param {string} pendingId pending id.\n */\nexport const registerEventListenersForMonthDetailed = (pendingId) => {\n    const events = `${CalendarEvents.viewUpdated}`;\n    $('body').on(events, function(e) {\n        foldDayEvents(e);\n    });\n    foldDayEvents();\n    $('body').on(CalendarEvents.filterChanged, function(e, data) {\n        const root = $(CalendarSelectors.elements.monthDetailed);\n        const pending = new Pending(pendingId);\n        const target = root.find(CalendarSelectors.eventType[data.type]);\n        const transitionPromise = $.Deferred();\n        if (data.hidden) {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'true');\n                return target.hide().promise();\n            }).fail();\n        } else {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'false');\n                return target.show().promise();\n            }).fail();\n        }\n\n        transitionPromise.then(function() {\n            foldDayEvents();\n            return;\n        })\n        .always(pending.resolve)\n        .fail();\n\n        transitionPromise.resolve();\n    });\n};\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\nconst registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month' || view === 'monthblock') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month, courseId, categoryId, link.dataset.day);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day, courseId, categoryId);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        updateUrl('?view=month');\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        updateUrl('?view=day');\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        updateUrl('?view=upcoming');\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    const viewMode = target.data('view');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day, viewMode)\n        .then(context => {\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day).\n        then((...args) => {\n            $('body').trigger(CalendarEvents.courseChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    if (!target || target.length == 0){\n        target = root.find(CalendarSelectors.wrapper);\n    }\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Update calendar URL.\n *\n * @param {String} url The calendar url to be updated.\n */\nexport const updateUrl = (url) => {\n    const viewingFullCalendar = document.getElementById(CalendarSelectors.fullCalendarView);\n\n    // We want to update the url only if the user is viewing the full calendar.\n    if (viewingFullCalendar) {\n        window.history.pushState({}, '', url);\n    }\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            type: SummaryModal.TYPE,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\nexport const init = (root, view) => {\n    prefetchStrings('calendar', ['moreevents']);\n    foldDayEvents();\n    registerEventListeners(root, view);\n    const calendarTable = root.find(CalendarSelectors.elements.monthDetailed);\n    if (calendarTable.length) {\n        const pendingId = `month-detailed-${calendarTable.id}-filterChanged`;\n        registerEventListenersForMonthDetailed(calendarTable, pendingId);\n    }\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_jquery","_templates","_notification","CalendarRepository","_events","CalendarSelectors","_modal_factory","_modal_events","_summary_modal","_custom_interaction_events","_pending","foldDayEvents","days","$","elements","monthDetailed","find","day","length","each","dayContainer","this","eventsSelector","concat","dateContent","filteredEventsSelector","moreEventsSelector","events","numberOfFiltered","numberOfEvents","count","event","attr","hide","show","moreEventsLink","numberOfHiddenEvents","getString","get_string","then","str","link","text","fail","_exports","registerEventListenersForMonthDetailed","pendingId","CalendarEvents","viewUpdated","on","e","filterChanged","data","root","pending","Pending","target","eventType","type","transitionPromise","Deferred","hidden","promise","always","resolve","refreshMonthContent","year","month","courseId","categoryId","arguments","undefined","template","startLoading","wrapper","M","util","js_pending","join","includenavigation","mini","viewMode","getCalendarMonthData","context","Templates","render","html","js","replaceNode","document","querySelector","dispatchEvent","CustomEvent","js_complete","stopLoading","Notification","exception","changeMonth","url","updateUrl","_len","args","Array","_key","trigger","monthChanged","_len2","_key2","reloadCurrentMonth","courseChanged","_len3","_key3","refreshDayContent","getCalendarDayData","viewingday","showviewselector","reloadCurrentDay","changeDay","_len4","_key4","dayChanged","_len5","_key5","getElementById","fullCalendarView","window","history","pushState","containers","loadingIcon","removeClass","addClass","reloadCurrentUpcoming","getCalendarUpcomingData","viewingupcoming","renderEventSummaryModal","eventId","pendingPromise","getEventById","getEventResponse","Error","eventData","modalParams","title","name","SummaryModal","TYPE","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","ModalFactory","create","modal","getRoot","ModalEvents","destroy","catch","init","view","prefetchStrings","links","eventLink","matches","actions","viewEvent","closest","dataset","preventDefault","stopPropagation","navLink","currentTarget","href","viewSelector","CustomEvents","define","activate","option","classList","contains","courseid","categoryid","registerEventListeners","calendarTable","id"],"mappings":"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"}