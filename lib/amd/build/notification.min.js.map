{"version":3,"file":"notification.min.js","sources":["../src/notification.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification manager for in-page notifications in Moodle.\n *\n * @module     core/notification\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\nimport Pending from 'core/pending';\nimport Log from 'core/log';\n\nlet currentContextId = M.cfg.contextid;\n\nconst notificationTypes = {\n    success:  'core/notification_success',\n    info:     'core/notification_info',\n    warning:  'core/notification_warning',\n    error:    'core/notification_error',\n};\n\nconst notificationRegionId = 'user-notifications';\n\nconst Selectors = {\n    notificationRegion: `#${notificationRegionId}`,\n    fallbackRegionParents: [\n        '#region-main',\n        '[role=\"main\"]',\n        'body',\n    ],\n};\n\nconst setupTargetRegion = () => {\n    let targetRegion = getNotificationRegion();\n    if (targetRegion) {\n        return false;\n    }\n\n    const newRegion = document.createElement('span');\n    newRegion.id = notificationRegionId;\n\n    return Selectors.fallbackRegionParents.some(selector => {\n        const targetRegion = document.querySelector(selector);\n\n        if (targetRegion) {\n            targetRegion.prepend(newRegion);\n            return true;\n        }\n\n        return false;\n    });\n};\n\n/**\n * A notification object displayed to a user.\n *\n * @typedef  {Object} Notification\n * @property {string} message       The body of the notification\n * @property {string} type          The type of notification to add (error, warning, info, success).\n * @property {Boolean} closebutton  Whether to show the close button.\n * @property {Boolean} announce     Whether to announce to screen readers.\n */\n\n/**\n * Poll the server for any new notifications.\n *\n * @method\n * @returns {Promise}\n */\nexport const fetchNotifications = async() => {\n    const Ajax = await import('core/ajax');\n\n    return Ajax.call([{\n        methodname: 'core_fetch_notifications',\n        args: {\n            contextid: currentContextId\n        }\n    }])[0]\n    .then(addNotifications);\n};\n\n/**\n * Add all of the supplied notifications.\n *\n * @method\n * @param {Notification[]} notifications The list of notificaitons\n * @returns {Promise}\n */\nconst addNotifications = notifications => {\n    if (!notifications.length) {\n        return Promise.resolve();\n    }\n\n    const pendingPromise = new Pending('core/notification:addNotifications');\n    notifications.forEach(notification => renderNotification(notification.template, notification.variables));\n\n    return pendingPromise.resolve();\n};\n\n/**\n * Add a notification to the page.\n *\n * Note: This does not cause the notification to be added to the session.\n *\n * @method\n * @param {Notification} notification The notification to add.\n * @returns {Promise}\n */\nexport const addNotification = notification => {\n    const pendingPromise = new Pending('core/notification:addNotifications');\n\n    let template = notificationTypes.error;\n\n    notification = {\n        closebutton:    true,\n        announce:       true,\n        type:           'error',\n        ...notification,\n    };\n\n    if (notification.template) {\n        template = notification.template;\n        delete notification.template;\n    } else if (notification.type) {\n        if (typeof notificationTypes[notification.type] !== 'undefined') {\n            template = notificationTypes[notification.type];\n        }\n        delete notification.type;\n    }\n\n    return renderNotification(template, notification)\n    .then(pendingPromise.resolve);\n};\n\nconst renderNotification = async(template, variables) => {\n    if (typeof variables.message === 'undefined' || !variables.message) {\n        Log.debug('Notification received without content. Skipping.');\n        return;\n    }\n\n    const pendingPromise = new Pending('core/notification:renderNotification');\n    const Templates = await import('core/templates');\n\n    Templates.renderForPromise(template, variables)\n    .then(({html, js = ''}) => {\n        Templates.prependNodeContents(getNotificationRegion(), html, js);\n\n        return;\n    })\n    .then(pendingPromise.resolve)\n    .catch(exception);\n};\n\nconst getNotificationRegion = () => document.querySelector(Selectors.notificationRegion);\n\n/**\n * Alert dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} message\n * @param {String|Promise} cancelText\n * @returns {Promise}\n */\nexport const alert = async(title, message, cancelText) => {\n    var pendingPromise = new Pending('core/notification:alert');\n\n    const ModalFactory = await import('core/modal_factory');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        body: message,\n        title: title,\n        buttons: {\n            cancel: cancelText,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        pendingPromise.resolve();\n        return modal;\n    });\n};\n\n/**\n * The confirm has now been replaced with a save and cancel dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} noLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @returns {Promise}\n */\nexport const confirm = (title, question, saveLabel, noLabel, saveCallback, cancelCallback) =>\n        saveCancel(title, question, saveLabel, saveCallback, cancelCallback);\n\n/**\n * The Save and Cancel dialogue helper.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @param {Object} options\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\n * @returns {Promise}\n */\nexport const saveCancel = async(title, question, saveLabel, saveCallback, cancelCallback, {\n    triggerElement = null,\n} = {}) => {\n    const pendingPromise = new Pending('core/notification:confirm');\n\n    const [\n        ModalFactory,\n        ModalEvents,\n    ] = await Promise.all([\n        import('core/modal_factory'),\n        import('core/modal_events'),\n    ]);\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: title,\n        body: question,\n        buttons: {\n            // Note: The noLabel is no longer supported.\n            save: saveLabel,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        modal.getRoot().on(ModalEvents.save, saveCallback);\n        modal.getRoot().on(ModalEvents.cancel, cancelCallback);\n        modal.getRoot().on(ModalEvents.hidden, () => triggerElement?.focus());\n        pendingPromise.resolve();\n\n        return modal;\n    });\n};\n\n/**\n * Add all of the supplied notifications.\n *\n * @param {Promise|String} title The header of the modal\n * @param {Promise|String} question What do we want the user to confirm\n * @param {Promise|String} saveLabel The modal action link text\n * @param {Object} options\n * @param {HTMLElement} [options.triggerElement=null] The element that triggered the modal (will receive the focus after hidden)\n * @return {Promise}\n */\nexport const saveCancelPromise = (title, question, saveLabel, {\n    triggerElement = null,\n} = {}) => new Promise((resolve, reject) => {\n    saveCancel(title, question, saveLabel, resolve, reject, {triggerElement});\n});\n\n/**\n * Wrap M.core.exception.\n *\n * @method\n * @param {Error} ex\n */\nexport const exception = async ex => {\n    const pendingPromise = new Pending('core/notification:displayException');\n\n    // Fudge some parameters.\n    if (!ex.stack) {\n        ex.stack = '';\n    }\n\n    if (ex.debuginfo) {\n        ex.stack += ex.debuginfo + '\\n';\n    }\n\n    if (!ex.backtrace && ex.stacktrace) {\n        ex.backtrace = ex.stacktrace;\n    }\n\n    if (ex.backtrace) {\n        ex.stack += ex.backtrace;\n        const ln = ex.backtrace.match(/line ([^ ]*) of/);\n        const fn = ex.backtrace.match(/ of ([^:]*): /);\n        if (ln && ln[1]) {\n            ex.lineNumber = ln[1];\n        }\n        if (fn && fn[1]) {\n            ex.fileName = fn[1];\n            if (ex.fileName.length > 30) {\n                ex.fileName = '...' + ex.fileName.substr(ex.fileName.length - 27);\n            }\n        }\n    }\n\n    if (typeof ex.name === 'undefined' && ex.errorcode) {\n        ex.name = ex.errorcode;\n    }\n\n    const Y = await import('core/yui');\n    Y.use('moodle-core-notification-exception', function() {\n        var modal = new M.core.exception(ex);\n\n        modal.show();\n\n        pendingPromise.resolve();\n    });\n};\n\n/**\n * Initialise the page for the suppled context, and displaying the supplied notifications.\n *\n * @method\n * @param {Number} contextId\n * @param {Notification[]} notificationList\n */\nexport const init = (contextId, notificationList) => {\n    currentContextId = contextId;\n\n    // Setup the message target region if it isn't setup already\n    setupTargetRegion();\n\n    // Add provided notifications.\n    addNotifications(notificationList);\n};\n\n// To maintain backwards compatability we export default here.\nexport default {\n    init,\n    fetchNotifications,\n    addNotification,\n    alert,\n    confirm,\n    saveCancel,\n    saveCancelPromise,\n    exception,\n};\n"],"names":["_pending","_interopRequireDefault","_log","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","currentContextId","M","cfg","contextid","notificationTypes","success","info","warning","error","Selectors","notificationRegion","concat","fallbackRegionParents","fetchNotifications","async","define","amd","Promise","resolve","reject","require","module","exports","component","loader","call","methodname","args","then","addNotifications","_exports","notifications","length","pendingPromise","Pending","forEach","notification","renderNotification","template","variables","addNotification","closebutton","announce","type","message","Log","debug","Templates","renderForPromise","_ref","html","js","prependNodeContents","getNotificationRegion","catch","exception","document","querySelector","alert","title","cancelText","ModalFactory","create","types","ALERT","body","buttons","cancel","removeOnClose","modal","show","confirm","question","saveLabel","noLabel","saveCallback","cancelCallback","saveCancel","triggerElement","arguments","undefined","ModalEvents","all","SAVE_CANCEL","save","getRoot","on","hidden","focus","saveCancelPromise","ex","stack","debuginfo","backtrace","stacktrace","ln","match","fn","lineNumber","fileName","substr","name","errorcode","use","core","init","contextId","notificationList","setupTargetRegion","newRegion","createElement","id","some","selector","targetRegion","prepend","_default"],"mappings":"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"}