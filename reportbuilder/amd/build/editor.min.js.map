{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder editor\n *\n * @module      core_reportbuilder/editor\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport 'core/inplace_editable';\nimport {addIconToContainer} from 'core/loadingicon';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {init as columnsEditorInit} from 'core_reportbuilder/local/editor/columns';\nimport {init as conditionsEditorInit} from 'core_reportbuilder/local/editor/conditions';\nimport {init as filtersEditorInit} from 'core_reportbuilder/local/editor/filters';\nimport {init as sortingEditorInit} from 'core_reportbuilder/local/editor/sorting';\nimport {init as cardviewEditorInit} from 'core_reportbuilder/local/editor/card_view';\nimport {getReport} from 'core_reportbuilder/local/repository/reports';\nimport {createReportModal} from 'core_reportbuilder/local/repository/modals';\n\nlet initialized = false;\n\n/**\n * Initialise editor and all it's modules\n */\nexport const init = () => {\n    columnsEditorInit(initialized);\n    conditionsEditorInit(initialized);\n    filtersEditorInit(initialized);\n    sortingEditorInit(initialized);\n    cardviewEditorInit(initialized);\n\n    // Ensure we only add our listeners once (can be called multiple times by mustache template).\n    if (initialized) {\n        return;\n    }\n\n    // Add event handlers to generic report editor elements.\n    document.addEventListener('click', event => {\n\n        // Toggle between edit and preview mode.\n        const toggleEditViewMode = event.target.closest(reportSelectors.actions.toggleEditPreview);\n        if (toggleEditViewMode) {\n            event.preventDefault();\n\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const pendingPromise = new Pending('core_reportbuilder/reports:get');\n            const toggledEditMode = toggleEditViewMode.dataset.editMode !== \"1\";\n\n            let customjs = '';\n\n            addIconToContainer(toggleEditViewMode)\n                .then(() => getReport(reportElement.dataset.reportId, toggledEditMode))\n                .then(response => {\n                    customjs = response.javascript;\n                    return Templates.render('core_reportbuilder/local/dynamictabs/editor', response);\n                })\n                .then((html, js) => {\n                    return Templates.replaceNode(reportElement, html, js + customjs);\n                })\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n\n        // Edit report details modal.\n        const reportEdit = event.target.closest(reportSelectors.actions.reportEdit);\n        if (reportEdit) {\n            event.preventDefault();\n\n            const reportModal = createReportModal(event.target, getString('editreportdetails', 'core_reportbuilder'),\n                reportEdit.dataset.reportId);\n            reportModal.addEventListener(reportModal.events.FORM_SUBMITTED, () => {\n                getString('reportupdated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        return window.location.reload();\n                    })\n                    .catch(Notification.exception);\n            });\n            reportModal.show();\n        }\n    });\n\n    initialized = true;\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","_exports","value","init","_notification","_pending","_templates","reportSelectors","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","initialized","columnsEditorInit","conditionsEditorInit","filtersEditorInit","sortingEditorInit","cardviewEditorInit","document","addEventListener","event","toggleEditViewMode","target","closest","actions","toggleEditPreview","preventDefault","reportElement","regions","report","pendingPromise","Pending","toggledEditMode","dataset","editMode","customjs","addIconToContainer","then","getReport","reportId","response","javascript","Templates","render","html","js","replaceNode","resolve","catch","Notification","exception","reportEdit","reportModal","createReportModal","getString","events","FORM_SUBMITTED","get_string","addToast","add","window","location","reload","show"],"mappings":"irBAgCsE,SAAAA,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAAD,IAAAA,QAAAE,iBAAAF,IAAAA,eAAAF,yBAAA,SAAAC,aAAAA,OAAAA,YAAAG,iBAAAD,oBAAAF,YAAA,CAAA,SAAAI,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA,CATzDG,OAAAC,eAAAC,SAAA,aAAA,CAAAC,OAAA,IAAAD,SAAAE,UAAA,EAIbC,cAAAT,uBAAAS,eACAC,SAAAV,uBAAAU,UACAC,WAAAX,uBAAAW,YAGAC,gBAAsE,SAAAX,IAAAL,aAAAA,IAAAA,aAAAK,KAAAA,IAAAC,WAAAD,OAAAA,IAAAA,GAAAA,OAAAA,KAAAA,iBAAAA,KAAAE,mBAAAF,IAAAE,MAAAA,CAAAA,QAAAF,KAAAY,IAAAA,MAAAlB,yBAAAC,aAAA,GAAAiB,OAAAA,MAAAC,IAAAb,KAAA,OAAAY,MAAAE,IAAAd,KAAA,IAAAe,OAAAC,GAAAA,sBAAAb,OAAAC,gBAAAD,OAAAc,yBAAAC,IAAAA,IAAAA,OAAAlB,IAAAkB,eAAAA,KAAAf,OAAAgB,UAAAC,eAAAC,KAAArB,IAAAkB,KAAA,CAAA,IAAAI,KAAAN,sBAAAb,OAAAc,yBAAAjB,IAAAkB,KAAAI,KAAAA,OAAAA,KAAAR,KAAAQ,KAAAC,KAAApB,OAAAC,eAAAW,OAAAG,IAAAI,MAAAP,OAAAG,KAAAlB,IAAAkB,IAAAH,CAAAA,OAAAb,QAAAF,IAAAY,OAAAA,MAAAW,IAAAvB,IAAAe,eAAAA,MAAA,CAAtES,CAAAb,iBASA,IAAIc,aAAc,EAgEhBpB,SAAAE,KA3DkBA,MAChB,EAAAmB,SAAAA,MAAkBD,cAClB,EAAAE,YAAAA,MAAqBF,cACrB,EAAAG,SAAAA,MAAkBH,cAClB,EAAAI,SAAAA,MAAkBJ,cAClB,EAAAK,WAAAA,MAAmBL,aAGfA,cAKJM,SAASC,iBAAiB,SAASC,QAG/B,MAAMC,mBAAqBD,MAAME,OAAOC,QAAQzB,gBAAgB0B,QAAQC,mBACxE,GAAIJ,mBAAoB,CACpBD,MAAMM,iBAEN,MAAMC,cAAgBP,MAAME,OAAOC,QAAQzB,gBAAgB8B,QAAQC,QAC7DC,eAAiB,IAAIC,SAAO1C,QAAC,kCAC7B2C,gBAA0D,MAAxCX,mBAAmBY,QAAQC,SAEnD,IAAIC,SAAW,IAEf,EAAAC,aAAAA,oBAAmBf,oBACdgB,MAAK,KAAM,EAAAC,SAAAA,WAAUX,cAAcM,QAAQM,SAAUP,mBACrDK,MAAKG,WACFL,SAAWK,SAASC,WACbC,mBAAUC,OAAO,8CAA+CH,aAE1EH,MAAK,CAACO,KAAMC,KACFH,WAAAA,QAAUI,YAAYnB,cAAeiB,KAAMC,GAAKV,YAE1DE,MAAK,IAAMP,eAAeiB,YAC1BC,MAAMC,cAAY5D,QAAC6D,UAC5B,CAGA,MAAMC,WAAa/B,MAAME,OAAOC,QAAQzB,gBAAgB0B,QAAQ2B,YAChE,GAAIA,WAAY,CACZ/B,MAAMM,iBAEN,MAAM0B,aAAc,EAAAC,QAAAA,mBAAkBjC,MAAME,QAAQ,EAAAgC,KAAAA,YAAU,oBAAqB,sBAC/EH,WAAWlB,QAAQM,UACvBa,YAAYjC,iBAAiBiC,YAAYG,OAAOC,gBAAgB,MAC5D,EAAAF,KAASG,YAAC,gBAAiB,sBACtBpB,KAAKqB,OAAQC,KACbtB,MAAK,IACKuB,OAAOC,SAASC,WAE1Bd,MAAMC,cAAY5D,QAAC6D,UAAU,IAEtCE,YAAYW,MAChB,KAGJnD,aAAc,EAAI,CACpB"}