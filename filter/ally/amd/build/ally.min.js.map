{"version":3,"file":"ally.min.js","sources":["../src/ally.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Ally AX library.\n *\n * @package\n * @author    Guy Thomas\n * @copyright Copyright (c) 2016 Open LMS\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/log'], function($, log) {\n    return new function() {\n        var _config = null;\n        var _token = null;\n        var _baseUrl = null;\n\n        /**\n         * Get the base URL for a given url.\n         *\n         * e.g.,  given `https://ally.local/api/v1/20/lti/institution`, this function will return `https://ally.local`.\n         *\n         * @param  {String} url A full URL\n         * @return {String} The base URL of the given `url`.\n         */\n        var getBaseUrl = function(url) {\n            var parser = document.createElement('a');\n            parser.href = url;\n\n            var baseUrl = parser.protocol + '//' + parser.hostname;\n            if (parser.port) {\n                baseUrl += ':' + parser.port;\n            }\n\n            return baseUrl;\n        };\n\n        /**\n         * Initialize the AMD module with the necessary data\n         * @param  {String} jwt    The JWT token\n         * @param  {Object} config The Ally configuration containing the Ally client id and admin URL\n         */\n        this.init = function(jwt, config) {\n            _token = jwt;\n            _config = config;\n            if (!config.adminurl) {\n                // Do not localise - just a debug message.\n                log.info('The Ally admin tool is not configured with a Launch URL. Aborting JS load.');\n                return;\n            }\n            _baseUrl = getBaseUrl(config.adminurl);\n\n            // Load up the Ally script.\n            // Note - this is not to be cached as it is just a loader script.\n            // The target script below loads up the latest version of the amd module which does get cached.\n            $.getScript(_baseUrl + '/integration/moodlerooms/ally.js')\n                .fail(function() {\n                    log.error('Failed to load Ally JS');\n                });\n        };\n\n        /**\n         * Get the JWT token that can be used to authenticate the current user\n         * @return {String} The JWT token\n         */\n        this.token = function() {\n            return _token;\n        };\n\n        /**\n         * Get the Ally configuration containing the Ally client id and base URL\n         * @return {Object} The Ally configuration\n         */\n        this.config = function() {\n            return _config;\n        };\n\n        /**\n         * Get the Ally base URL\n         * @return {String} The Ally base URL\n         */\n        this.getAllyBaseUrl = function() {\n            return _baseUrl;\n        };\n    };\n});\n"],"names":["define","$","log","_config","_token","_baseUrl","init","jwt","config","adminurl","url","parser","document","createElement","href","baseUrl","protocol","hostname","port","getBaseUrl","getScript","fail","error","info","token","getAllyBaseUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBAA,0BAAO,CAAC,SAAU,aAAa,SAASC,EAAGC,YAChC,IAAI,eACHC,QAAU,KACVC,OAAS,KACTC,SAAW,UA2BVC,KAAO,SAASC,IAAKC,QACtBJ,OAASG,IACTJ,QAAUK,OACLA,OAAOC,UAKZJ,SAzBa,SAASK,SAClBC,OAASC,SAASC,cAAc,KACpCF,OAAOG,KAAOJ,QAEVK,QAAUJ,OAAOK,SAAW,KAAOL,OAAOM,gBAC1CN,OAAOO,OACPH,SAAW,IAAMJ,OAAOO,MAGrBH,QAgBII,CAAWX,OAAOC,UAK7BR,EAAEmB,UAAUf,SAAW,oCAClBgB,MAAK,WACFnB,IAAIoB,MAAM,8BAVdpB,IAAIqB,KAAK,oFAkBZC,MAAQ,kBACFpB,aAONI,OAAS,kBACHL,cAONsB,eAAiB,kBACXpB"}