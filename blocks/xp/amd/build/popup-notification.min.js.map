{"version":3,"file":"popup-notification.min.js","sources":["../src/popup-notification.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification popup.\n *\n * @copyright  2022 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/templates', 'core/modal', 'core/modal_events', 'core/notification'], function(\n    Templates,\n    Modal,\n    ModalEvents,\n    Notification\n) {\n    // Trigger pre-loading.\n    Templates.render('block_xp/modal-popup-notification', []);\n\n    /**\n   * Show the modal.\n   *\n   * @param {Object} context The template context.\n   * @param {Object} options The options.\n   */\n    function show(context, options) {\n        options = options || {};\n        Templates.render('block_xp/modal-popup-notification', context)\n            .then((html) => {\n                const modal = new Modal(html);\n\n                // Prevent dismissing by clicking outside.\n                if (typeof ModalEvents.outsideClick !== 'undefined') {\n                    modal.getRoot().on(ModalEvents.outsideClick, (e) => {\n                        e.preventDefault();\n                    });\n                }\n\n                // Broadcast when the modal has been shown.\n                modal.getRoot().on(ModalEvents.shown, () => {\n                    if (options.onShown) {\n                        options.onShown();\n                    }\n                });\n\n                // Broadcast when the modal has been dismissed.\n                modal.getRoot().on(ModalEvents.hidden, () => {\n                    if (options.onDismissed) {\n                        options.onDismissed();\n                    }\n                });\n\n                modal.show();\n                return;\n            })\n            .catch(Notification.exception);\n    }\n\n    return {\n        show,\n    };\n});\n"],"names":["define","Templates","Modal","ModalEvents","Notification","render","show","context","options","then","html","modal","outsideClick","getRoot","on","e","preventDefault","shown","onShown","hidden","onDismissed","catch","exception"],"mappings":";;;;;;;AAuBAA,qCAAO,CAAC,iBAAkB,aAAc,oBAAqB,sBAAsB,SAC/EC,UACAC,MACAC,YACAC,qBAGAH,UAAUI,OAAO,oCAAqC,IAyC/C,CACHC,cAlCUC,QAASC,SACnBA,QAAUA,SAAW,GACrBP,UAAUI,OAAO,oCAAqCE,SACjDE,MAAMC,aACGC,MAAQ,IAAIT,MAAMQ,WAGgB,IAA7BP,YAAYS,cACnBD,MAAME,UAAUC,GAAGX,YAAYS,cAAeG,IAC1CA,EAAEC,oBAKVL,MAAME,UAAUC,GAAGX,YAAYc,OAAO,KAC9BT,QAAQU,SACRV,QAAQU,aAKhBP,MAAME,UAAUC,GAAGX,YAAYgB,QAAQ,KAC/BX,QAAQY,aACRZ,QAAQY,iBAIhBT,MAAML,UAGTe,MAAMjB,aAAakB"}