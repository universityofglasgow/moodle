{"version":3,"file":"quickenrolment.min.js","sources":["../src/quickenrolment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Str from 'core/str';\nimport * as Toast from 'core/toast';\nimport Config from 'core/config';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\nimport Prefetch from 'core/prefetch';\n\nconst Selectors = {\n    cohortSelector: \"#id_cohortlist\",\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n    unwantedHiddenFields: \"input[value='_qf__force_multiselect_submission']\",\n    buttonWrapper: '[data-region=\"wrapper\"]',\n};\n\n/**\n * Get the content of the body for the specified context.\n *\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst getBodyForContext = contextId => {\n    return Fragment.loadFragment('enrol_manual', 'enrol_users_form', contextId, {});\n};\n\n/**\n * Get the dynamic table for the button.\n *\n * @param {HTMLElement} element\n * @returns {HTMLElement}\n */\nconst getDynamicTableForElement = element => {\n    const wrapper = element.closest(Selectors.buttonWrapper);\n\n    return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid);\n};\n\n/**\n * Register the event listeners for this contextid.\n *\n * @param {Number} contextId\n */\nconst registerEventListeners = contextId => {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.triggerButtons)) {\n            e.preventDefault();\n\n            showModal(getDynamicTableForElement(e.target), contextId);\n\n            return;\n        }\n    });\n};\n\n/**\n * Display the modal for this contextId.\n *\n * @param {HTMLElement} dynamicTable The table to beb refreshed when changes are made\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst showModal = (dynamicTable, contextId) => {\n    const pendingPromise = new Pending('enrol_manual/quickenrolment:showModal');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        large: true,\n        title: Str.get_string('enrolusers', 'enrol_manual'),\n        body: getBodyForContext(contextId),\n        buttons: {\n            save: Str.get_string('enrolusers', 'enrol_manual'),\n        }\n    })\n    .then(modal => {\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\n            // is processed.\n            // The actual submit even tis captured in the next handler.\n\n            e.preventDefault();\n            modal.getRoot().find('form').submit();\n        });\n\n        modal.getRoot().on('submit', 'form', e => {\n            e.preventDefault();\n\n            submitFormAjax(dynamicTable, modal);\n        });\n\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => Promise.all([modal, modal.getBodyPromise()]))\n    .then(([modal, body]) => {\n        if (body.get(0).querySelector(Selectors.cohortSelector)) {\n            return modal.setSaveButtonText(Str.get_string('enroluserscohorts', 'enrol_manual')).then(() => modal);\n        }\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the form via ajax.\n *\n * @param {HTMLElement} dynamicTable\n * @param {Object} modal\n */\nconst submitFormAjax = (dynamicTable, modal) => {\n    // Note: We use a jQuery object here so that we can use its serialize functionality.\n    const form = modal.getRoot().find('form');\n\n    // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n    // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n    form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField => hiddenField.remove());\n\n    modal.hide();\n    modal.destroy();\n\n    jQuery.ajax(\n        `${Config.wwwroot}/enrol/manual/ajax.php?${form.serialize()}`,\n        {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\",\n        }\n    )\n    .then(response => {\n        if (response.error) {\n            throw new Error(response.error);\n        }\n\n        return response.count;\n    })\n    .then(count => {\n        return Promise.all([\n            Str.get_string('totalenrolledusers', 'enrol', count),\n            DynamicTable.refreshTableContent(dynamicTable),\n        ]);\n    })\n    .then(([notificationBody]) => notificationBody)\n    .then(notificationBody => Toast.add(notificationBody))\n    .catch(error => {\n        Notification.addNotification({\n            message: error.message,\n            type: 'error',\n        });\n    });\n};\n\n/**\n * Set up quick enrolment for the manual enrolment plugin.\n *\n * @param {Number} contextid The context id to setup for\n */\nexport const init = ({contextid}) => {\n    registerEventListeners(contextid);\n\n    Prefetch.prefetchStrings('enrol_manual', [\n        'enrolusers',\n        'enroluserscohorts',\n    ]);\n\n    Prefetch.prefetchString('enrol', 'totalenrolledusers');\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DynamicTable","Str","Toast","_config","_fragment","_modal_events","_modal_factory","_notification","_jquery","_pending","_prefetch","Selectors","getBodyForContext","contextId","Fragment","loadFragment","registerEventListeners","document","addEventListener","e","target","closest","preventDefault","showModal","element","wrapper","getTableFromId","dataset","tableUniqueid","getDynamicTableForElement","dynamicTable","pendingPromise","Pending","ModalFactory","create","type","types","SAVE_CANCEL","large","title","get_string","body","buttons","save","then","modal","getRoot","on","ModalEvents","find","submit","submitFormAjax","hidden","destroy","show","Promise","all","getBodyPromise","_ref","querySelector","setSaveButtonText","resolve","catch","Notification","exception","form","querySelectorAll","forEach","hiddenField","remove","hide","jQuery","ajax","concat","Config","wwwroot","serialize","processData","contentType","response","error","Error","count","refreshTableContent","_ref2","notificationBody","add","addNotification","message","_exports","init","_ref3","contextid","Prefetch","prefetchStrings","prefetchString"],"mappings":"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"}