{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Autosave plugin for Moodle.\n *\n * @module      tiny_autosave/plugin\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\n\nimport {component, pluginName} from './common';\nimport * as Options from './options';\nimport * as Autosaver from './autosaver';\n\n// Setup the autosave Plugin.\nexport default new Promise(async(resolve) => {\n    const [tinyMCE, pluginMetadata] = await Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n    ]);\n\n    // Note: The PluginManager.add function does not accept a Promise.\n    // Any asynchronous code must be run before this point.\n    tinyMCE.PluginManager.add(pluginName, (editor) => {\n        // Register options.\n        Options.register(editor);\n\n        // Register the Autosaver.\n        Autosaver.register(editor);\n\n        return pluginMetadata;\n    });\n\n    resolve(pluginName);\n});\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Options","Autosaver","_default","Promise","async","tinyMCE","pluginMetadata","all","getTinyMCE","getPluginMetadata","component","pluginName","PluginManager","add","editor","register","resolve","_exports"],"mappings":"qLA2ByC,SAAAA,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAAD,IAAAA,QAAAE,iBAAAF,IAAAA,eAAAF,yBAAA,SAAAC,aAAAA,OAAAA,YAAAG,iBAAAD,oBAAAF,YAAA,CAAA,SAAAI,wBAAAC,IAAAL,aAAAA,IAAAA,aAAAK,KAAAA,IAAAC,WAAAD,OAAAA,IAAAA,GAAAA,OAAAA,KAAAA,iBAAAA,KAAAE,mBAAAF,IAAAE,MAAAA,CAAAA,QAAAF,KAAAG,IAAAA,MAAAT,yBAAAC,aAAA,GAAAQ,OAAAA,MAAAC,IAAAJ,KAAA,OAAAG,MAAAE,IAAAL,KAAA,IAAAM,OAAAC,GAAAA,sBAAAC,OAAAC,gBAAAD,OAAAE,yBAAAC,IAAAA,IAAAA,OAAAX,IAAAW,eAAAA,KAAAH,OAAAI,UAAAC,eAAAC,KAAAd,IAAAW,KAAA,CAAA,IAAAI,KAAAR,sBAAAC,OAAAE,yBAAAV,IAAAW,KAAAI,KAAAA,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAX,IAAAW,IAAAL,QAAAA,OAAAJ,QAAAF,IAAAG,OAAAA,MAAAa,IAAAhB,IAAAM,QAAAA,MAAA;;;;;;;qFADzCW,QAAAlB,wBAAAkB,SACAC,UAAAnB,wBAAAmB,WAZA,IAAAC,SAee,IAAIC,SAAQC,gBACvB,MAAOC,QAASC,sBAAwBH,QAAQI,IAAI,EAChD,EAAAC,QAAUA,eACV,EAAAC,OAAiBA,mBAACC,kBAAWC,QAAAA,cAKjCN,QAAQO,cAAcC,IAAIF,QAAUA,YAAGG,SAEnCd,QAAQe,SAASD,QAGjBb,UAAUc,SAASD,QAEZR,kBAGXU,QAAQL,mBAAW,IACrB,OAAAM,SAAAhC,QAAAiB,SAAAe,SAAAhC,OAAA"}