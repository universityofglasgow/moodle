{"version":3,"file":"edit_browser_storage.min.js","sources":["../src/edit_browser_storage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript Module to handle browser storage for editing interface.\n *\n * @module format_tiles/edit_browser_storage\n * @copyright 2019 David Watson {@link http://evolutioncode.uk}\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since Moodle 3.3\n */\n\n/* eslint space-before-function-paren: 0 */\n\ndefine([\"jquery\", \"format_tiles/browser_storage_set_up\"], function ($, storageSetUp) {\n    \"use strict\";\n    var Selector = {\n        PAGE: '#page',\n        EDITING_COLLAPSE_SECID: \"#collapse\",\n        EDITING_COLLAPSE_SEC: \".collapse-section\",\n        EDITING_EXPAND_SEC: \".expand-section\",\n        EDITING_EXPAND_SECID: \"#expand\",\n        SECTION_CONTENT: \"li.section.main .content\",\n        SECTION_MAIN: \"li.section.main\",\n        SECTION_ID: \"#section-\"\n    };\n\n    var courseId;\n    var userId;\n\n    var StorageKeys = {\n        COURSE_VISIT: \"mdl-tiles-editing-last-visit-course-\",\n        EDITING_COURSE: \"mdl-tiles-editing-course-\",\n        SECTION: \"-section-\",\n        COURSE: \"mdl-tiles-course-\",\n        LAST_SECTION: \"-lastSecId\",\n        USER: \"-user-\",\n        PREFIX: \"mdl-tiles-\",\n        USER_CHOICE_PREFIX: \"mdl-tiles-userPrefStorage-\",\n        CONTENT_SUFFIX: \"-content\",\n        LAST_UPDATED_SUFFIX: \"-lastUpdated\"\n    };\n\n    var StorageValues = {\n        OPEN: \"1\",\n        CLOSED: \"0\"\n    };\n\n    var lastInteractedSection;\n\n    var encodeSectionStatus = function(sectionNum) {\n        return StorageKeys.EDITING_COURSE + courseId + StorageKeys.SECTION + sectionNum + StorageKeys.USER + userId;\n    };\n\n    /**\n     * Find out which sections of this course the user has showing as open in their browser storage.\n     * @param {number} maxSection\n     * @returns {Array}\n     */\n    var getOpenSections = function(maxSection) {\n        if (!maxSection || maxSection > 50) {\n            maxSection = 50; // Do not check more than 50 sections.\n        }\n        var sections = [];\n        var value;\n        for (var secNum = 1; secNum <= maxSection; secNum++) {\n            value = sessionStorage.getItem(encodeSectionStatus(secNum));\n            if (value === StorageValues.OPEN) {\n                sections.push(secNum);\n            }\n        }\n        return sections;\n    };\n\n    /**\n     * Storage key for the last section user was using.\n     * This is the same key as when not editing.\n     * @returns {string}\n     */\n    var lastSectionStorageKey = function () {\n        return StorageKeys.COURSE + courseId +\n        StorageKeys.USER + userId + StorageKeys.LAST_SECTION;\n    };\n\n    /**\n     * Set the last section the user was using.  This is the same key as when not editing.\n     * @param {number} sectionNum\n     */\n    var setLastSection = function(sectionNum) {\n        if (!sectionNum) {\n            localStorage.clear();\n        } else if (sectionNum !== lastInteractedSection && storageSetUp.storageAllowed) {\n            lastInteractedSection = sectionNum;\n            localStorage.setItem(lastSectionStorageKey(), sectionNum.toString());\n        }\n    };\n\n    var getLastSection = function() {\n        if (!lastInteractedSection) {\n            lastInteractedSection = localStorage.getItem(lastSectionStorageKey());\n        }\n         return lastInteractedSection;\n    };\n\n    var setSectionStatus = function(secNum, open) {\n        if (storageSetUp.storageAllowed && open) {\n            sessionStorage.setItem(encodeSectionStatus(secNum), StorageValues.OPEN);\n        } else {\n            sessionStorage.removeItem(encodeSectionStatus(secNum));\n        }\n    };\n\n    /**\n     * If we are editing, we want to clear all stored content on initial page load.\n     * This ensure that, when we go back to not editing, our new content is shown not the old.\n     */\n    var clearStoredContent = function() {\n        Object.keys(sessionStorage).filter(function (key) {\n            return key.indexOf(StorageKeys.PREFIX) === 0 &&\n                (key.indexOf(StorageKeys.CONTENT_SUFFIX) === key.length - StorageKeys.CONTENT_SUFFIX.length\n                    || key.indexOf(StorageKeys.LAST_UPDATED_SUFFIX) === key.length - StorageKeys.LAST_UPDATED_SUFFIX.length);\n        }).forEach(function (item) {\n            // Item does relate to this plugin.\n            // It is not the user's preference about whether to use storage or not (keep that).\n            sessionStorage.removeItem(item);\n        });\n    };\n\n    /**\n     * Clear all browser storage used by this plugin.\n     */\n    var clearStorage = function() {\n        Object.keys(localStorage).filter(function (key) {\n            return key.indexOf(StorageKeys.PREFIX) === 0 && key.indexOf(StorageKeys.USER_CHOICE_PREFIX) === -1;\n        }).forEach(function (item) {\n            // Item does relate to this plugin.\n            // It is not the user's preference about whether to use storage or not (keep that).\n            localStorage.removeItem(item);\n        });\n        Object.keys(sessionStorage).filter(function (key) {\n            return key.indexOf(StorageKeys.PREFIX) === 0 && key.indexOf(StorageKeys.USER_CHOICE_PREFIX) === -1;\n        }).forEach(function (item) {\n            // Item does relate to this plugin.\n            // It is not the user's preference about whether to use storage or not (keep that).\n            sessionStorage.removeItem(item);\n        });\n    };\n\n    return {\n        getOpenSections: function(maxSection) {\n            return getOpenSections(maxSection);\n        },\n        init: function(\n            userIdInit,\n            courseIdInit,\n            assumeDataStoreConsent,\n            lastSectionNum,\n            collapsingAllFromURL\n        ) {\n            courseId = courseIdInit;\n            userId = userIdInit;\n            if (lastSectionNum) {\n                setSectionStatus(lastSectionNum, true);\n            }\n            $(document).ready(function () {\n                storageSetUp.init(userId, assumeDataStoreConsent, clearStorage);\n\n                clearStoredContent();\n                if (storageSetUp.storageAllowed()) {\n                    sessionStorage.setItem(StorageKeys.COURSE_VISIT + courseId + StorageKeys.USER + userId, Date.now().toString());\n\n                    if (collapsingAllFromURL) {\n                        for (var i = 1; i <= lastSectionNum; i++) {\n                            setSectionStatus(i, false);\n                        }\n                    }\n                    // When section content is clicked, update the last visited section.\n                    $(Selector.PAGE).on(\"click\", Selector.SECTION_CONTENT, function(e) {\n                        var currTar = $(e.currentTarget);\n                        var sectionClicked = currTar.closest(Selector.SECTION_MAIN).attr(\"data-section\");\n                        setLastSection(sectionClicked);\n                    });\n                }\n            });\n        },\n        getLastSection: function() {\n            return getLastSection();\n        },\n        setSectionStatus: function(secNum, open) {\n            return setSectionStatus(secNum, open);\n        },\n        setLastSection: function(secNum) {\n            return setLastSection(secNum);\n        }\n    };\n});"],"names":["define","$","storageSetUp","courseId","userId","lastInteractedSection","Selector","StorageKeys","StorageValues","encodeSectionStatus","sectionNum","lastSectionStorageKey","setLastSection","storageAllowed","localStorage","setItem","toString","clear","setSectionStatus","secNum","open","sessionStorage","removeItem","clearStorage","Object","keys","filter","key","indexOf","forEach","item","getOpenSections","maxSection","sections","getItem","push","init","userIdInit","courseIdInit","assumeDataStoreConsent","lastSectionNum","collapsingAllFromURL","document","ready","length","Date","now","i","on","e","sectionClicked","currentTarget","closest","attr","getLastSection"],"mappings":";;;;;;;;AA0BAA,2CAAO,CAAC,SAAU,wCAAwC,SAAUC,EAAGC,kBAa/DC,SACAC,OAoBAC,sBAhCAC,cACM,QADNA,yBAMiB,2BANjBA,sBAOc,kBAOdC,yBACc,uCADdA,2BAEgB,4BAFhBA,oBAGS,YAHTA,mBAIQ,oBAJRA,yBAKc,aALdA,iBAMM,SANNA,mBAOQ,aAPRA,+BAQoB,6BARpBA,2BASgB,WAThBA,gCAUqB,eAGrBC,mBACM,IAMNC,oBAAsB,SAASC,mBACxBH,2BAA6BJ,SAAWI,oBAAsBG,WAAaH,iBAAmBH,QA4BrGO,sBAAwB,kBACjBJ,mBAAqBJ,SAC5BI,iBAAmBH,OAASG,0BAO5BK,gBAAiB,SAASF,YACrBA,WAEMA,aAAeL,uBAAyBH,aAAaW,iBAC5DR,sBAAwBK,WACxBI,aAAaC,QAAQJ,wBAAyBD,WAAWM,aAHzDF,aAAaG,SAcjBC,kBAAmB,SAASC,OAAQC,MAChClB,aAAaW,gBAAkBO,KAC/BC,eAAeN,QAAQN,oBAAoBU,QAASX,oBAEpDa,eAAeC,WAAWb,oBAAoBU,UAuBlDI,aAAe,WACfC,OAAOC,KAAKX,cAAcY,QAAO,SAAUC,YACI,IAApCA,IAAIC,QAAQrB,sBAA8E,IAAjDoB,IAAIC,QAAQrB,mCAC7DsB,SAAQ,SAAUC,MAGjBhB,aAAaQ,WAAWQ,SAE5BN,OAAOC,KAAKJ,gBAAgBK,QAAO,SAAUC,YACE,IAApCA,IAAIC,QAAQrB,sBAA8E,IAAjDoB,IAAIC,QAAQrB,mCAC7DsB,SAAQ,SAAUC,MAGjBT,eAAeC,WAAWQ,gBAI3B,CACHC,gBAAiB,SAASC,mBA1FR,SAASA,cACtBA,YAAcA,WAAa,MAC5BA,WAAa,YAEbC,SAAW,GAENd,OAAS,EAAGA,QAAUa,WAAYb,SAC/BE,eAAea,QAAQzB,oBAAoBU,WACrCX,oBACVyB,SAASE,KAAKhB,eAGfc,SA+EIF,CAAgBC,aAE3BI,KAAM,SACFC,WACAC,aACAC,uBACAC,eACAC,sBAEAtC,SAAWmC,aACXlC,OAASiC,WACLG,gBACAtB,kBAAiBsB,gBAAgB,GAErCvC,EAAEyC,UAAUC,OAAM,cACdzC,aAAakC,KAAKhC,OAAQmC,uBAAwBhB,cAhD1DC,OAAOC,KAAKJ,gBAAgBK,QAAO,SAAUC,YACE,IAApCA,IAAIC,QAAQrB,sBACdoB,IAAIC,QAAQrB,8BAAgCoB,IAAIiB,OAASrC,2BAA2BqC,QAC9EjB,IAAIC,QAAQrB,mCAAqCoB,IAAIiB,OAASrC,gCAAgCqC,WAC1Gf,SAAQ,SAAUC,MAGjBT,eAAeC,WAAWQ,SA4ClB5B,aAAaW,iBAAkB,IAC/BQ,eAAeN,QAAQR,yBAA2BJ,SAAWI,iBAAmBH,OAAQyC,KAAKC,MAAM9B,YAE/FyB,yBACK,IAAIM,EAAI,EAAGA,GAAKP,eAAgBO,IACjC7B,kBAAiB6B,GAAG,GAI5B9C,EAAEK,eAAe0C,GAAG,QAAS1C,0BAA0B,SAAS2C,OAExDC,eADUjD,EAAEgD,EAAEE,eACWC,QAAQ9C,uBAAuB+C,KAAK,gBACjEzC,gBAAesC,wBAK/BI,eAAgB,kBAvFXjD,wBACDA,sBAAwBS,aAAaoB,QAAQvB,0BAEzCN,uBAuFRa,iBAAkB,SAASC,OAAQC,aACxBF,kBAAiBC,OAAQC,OAEpCR,eAAgB,SAASO,eACdP,gBAAeO"}