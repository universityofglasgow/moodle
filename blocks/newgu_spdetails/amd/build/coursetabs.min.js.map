{"version":3,"file":"coursetabs.min.js","sources":["../src/coursetabs.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the Course Tabs section\n *\n * @module     block_newgu_spdetails/coursetabs\n * @author     Greg Pedder <greg.pedder@glasgow.ac.uk>\n * @copyright  2023 University of Glasgow\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport * as Log from 'core/log';\nimport * as Ajax from \"../../../../lib/amd/src/ajax\";\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport sortTable from 'block_newgu_spdetails/sorting';\n\nconst initCourseTabs = () => {\n\n    let activetab = 'current';\n    let page = 0;\n    let sortby = 'shortname';\n    let sortorder = 'asc';\n    let subcatId = null;\n    let activeTab = sessionStorage.getItem('activeTab');\n    let activeCategoryId = sessionStorage.getItem('activeCategoryId');\n\n    // Account for returning to the page, or reloading.\n    if (activeTab) {\n        activetab = activeTab;\n        let currentTab = document.querySelector('#current_tab');\n        let pastTab = document.querySelector('#past_tab');\n\n        switch (activetab) {\n            case 'current':\n                currentTab.classList.add('active');\n                pastTab.classList.remove('active');\n                break;\n            case 'past':\n                currentTab.classList.remove('active');\n                pastTab.classList.add('active');\n                break;\n            default:\n                break;\n        }\n    }\n\n    if (activeCategoryId) {\n        subcatId = activeCategoryId;\n    }\n\n    // Load the assessments for the \"current\" tab to begin with...\n    loadAssessments(activetab, page, sortby, sortorder, subcatId);\n\n    const triggerTabList = document.querySelectorAll('#courses-Tab button');\n\n    // Bind our event listeners.\n    triggerTabList.forEach(triggerEl => {\n        triggerEl.addEventListener('click', handleTabChange);\n        triggerEl.addEventListener('keyup', function(event) {\n            let element = document.activeElement;\n            if (event.keyCode === 13 && element.hasAttribute('tabindex')) {\n                event.preventDefault();\n                element.click();\n            }\n        });\n    });\n};\n\nconst loadAssessments = function(activetab, page, sortby, sortorder, subcategory = null) {\n    let containerBlock = document.querySelector('#course_contents_container');\n\n    let whichTemplate = subcategory === null ? 'coursecategory' : 'coursesubcategory';\n\n    if (containerBlock.children.length > 0) {\n        containerBlock.innerHTML = '';\n    }\n\n    containerBlock.insertAdjacentHTML(\"afterbegin\", \"<div class='loader d-flex justify-content-center'>\\n\" +\n    \"<div class='spinner-border m-5' role='status'><span class='hidden'>Loading...</span></div></div>\");\n\n    let promise = Ajax.call([{\n        methodname: 'block_newgu_spdetails_get_assessments',\n        args: {\n            activetab: activetab,\n            page: page,\n            sortby: sortby,\n            sortorder: sortorder,\n            subcategory: subcategory\n        }\n    }]);\n    promise[0].done(function(response) {\n        document.querySelector('.loader').remove();\n        let coursedata = JSON.parse(response.result);\n        Templates.renderForPromise('block_newgu_spdetails/' + whichTemplate, {data: coursedata})\n        .then(({html, js}) => {\n            Templates.appendNodeContents(containerBlock, html, js);\n            showPastCourseNotification(activetab);\n            hideStatusColumn(activetab);\n            let subCategories = document.querySelectorAll('.subcategory-row');\n            let sortColumns = document.querySelectorAll('#category_table .th-sortable');\n            subCategoryEventHandler(subCategories);\n            subCategoryReturnHandler(coursedata.parent);\n            sortingEventHandler(sortColumns);\n\n            // So we can allow returning to the last item correctly...\n            sessionStorage.setItem('activeTab', activetab);\n            if (subcategory) {\n                sessionStorage.setItem('activeCategoryId', subcategory);\n                document.querySelector('#courseNav-container').classList.add('hidden-container');\n            } else {\n                sessionStorage.removeItem('activeCategoryId');\n                document.querySelector('#courseNav-container').classList.remove('hidden-container');\n            }\n            return true;\n        }).catch((error) => displayException(error));\n    }).fail(function(response) {\n        if (response) {\n            document.querySelector('.loader').remove();\n            let errorContainer = document.createElement('div');\n            errorContainer.classList.add('alert', 'alert-danger');\n\n            if (response.hasOwnProperty('message')) {\n                let errorMsg = document.createElement('p');\n\n                errorMsg.innerHTML = response.message;\n                errorContainer.appendChild(errorMsg);\n                errorMsg.classList.add('errormessage');\n                Log.debug(errorMsg);\n            }\n\n            if (response.hasOwnProperty('moreinfourl')) {\n                let errorLinkContainer = document.createElement('p');\n                let errorLink = document.createElement('a');\n\n                errorLink.setAttribute('href', response.moreinfourl);\n                errorLink.setAttribute('target', '_blank');\n                errorLink.innerHTML = 'More information about this error';\n                errorContainer.appendChild(errorLinkContainer);\n                errorLinkContainer.appendChild(errorLink);\n                errorLinkContainer.classList.add('errorcode');\n            }\n\n            containerBlock.prepend(errorContainer);\n        }\n    });\n};\n\nconst hideStatusColumn = (activetab) => {\n    if (activetab == 'past') {\n        if (document.querySelector('#sortby_status')) {\n            document.querySelector('#sortby_status').classList.add('hidden');\n        }\n    }\n};\n\nconst showPastCourseNotification = (activetab) => {\n    if (activetab == 'past') {\n        let containerDiv = document.createElement('div');\n        containerDiv.classList.add('border', 'rounded', 'my-2', 'p-2');\n        let div = document.createElement('div');\n        let strong = document.createElement('strong');\n        div.classList.add('alert', 'alert-info', 'm-0', 'text-center');\n        strong.append('Past provisional assessment grades will be displayed only for Academic Year 2024/25 onwards.' +\n            ' Any before this, can be accessed from the MyCourses tab on Moodle or your individual course Moodle page.');\n        div.appendChild(strong);\n        containerDiv.appendChild(div);\n        document.querySelector(\"#course_contents_container\").prepend(containerDiv);\n    }\n};\n\nconst subCategoryEventHandler = (rows) => {\n    if (rows.length > 0) {\n        rows.forEach((element) => {\n            element.addEventListener('click', () => showSubcategoryDetails(element));\n        });\n    }\n};\n\nconst showSubcategoryDetails = (object) => {\n    let id = object.parentElement.getAttribute('data-id');\n    if (id !== null) {\n        document.querySelector('#courseNav-container').classList.add('hidden-container');\n        let currentTab = document.querySelector('#current_tab');\n        let activetab = '';\n        if (currentTab.classList.contains('active')) {\n            activetab = 'current';\n        } else {\n            activetab = 'past';\n        }\n        // Ordering by DueDate by default....\n        loadAssessments(activetab, 0, 'duedate', 'asc', id);\n    }\n};\n\nconst subCategoryReturnHandler = (id) => {\n    // The 'return to...' element won't exist on the page at the top most level.\n    if (document.querySelector('#subcategory-return-assessment')) {\n        document.querySelector('#subcategory-return-assessment').addEventListener('click', () => {\n            // We now want to reload the previous level, using the previous id...\n            // In order to display all courses, we pass null back to loadAssessments.\n            if (id == 0 || id === null) {\n                id = null;\n                document.querySelector('#courseNav-container').classList.remove('hidden-container');\n            }\n            let currentTab = document.querySelector('#current_tab');\n            let activetab = '';\n            if (currentTab.classList.contains('active')) {\n                activetab = 'current';\n            } else {\n                activetab = 'past';\n            }\n            loadAssessments(activetab, 0, 'shortname', 'asc', id);\n        });\n\n        document.querySelector('#subcategory-return-assessment').addEventListener('keyup', function(event) {\n            let element = document.activeElement;\n            if (event.keyCode === 13 && element.hasAttribute('tabindex')) {\n                event.preventDefault();\n                element.click();\n            }\n        });\n    }\n};\n\n/**\n * Function to bind click handlers to row headers.\n * @param {*} rows\n */\nconst sortingEventHandler = (rows) => {\n    if (rows.length > 0) {\n        rows.forEach((element) => {\n            element.addEventListener('click', () => sortTable(element.cellIndex, element.getAttribute('data-sortby'),\n            'category_table'));\n        });\n    }\n};\n\n/**\n * Function to bind events to tabs.\n *\n * @param {object} event\n */\nconst handleTabChange = function(event) {\n    event.preventDefault();\n\n    let currentTab = document.querySelector('#current_tab');\n    let pastTab = document.querySelector('#past_tab');\n    let activetab = '';\n    let page = 0;\n    let sortby = 'shortname';\n    let sortorder = 'asc';\n\n    switch (event.target) {\n        case currentTab:\n            activetab = 'current';\n            currentTab.classList.add('active');\n            pastTab.classList.remove('active');\n            break;\n        case pastTab:\n            activetab = 'past';\n            currentTab.classList.remove('active');\n            pastTab.classList.add('active');\n            break;\n        default:\n            break;\n    }\n\n    loadAssessments(activetab, page, sortby, sortorder);\n};\n\n\n/**\n * @constructor\n */\nexport const init = () => {\n    initCourseTabs();\n};"],"names":["loadAssessments","activetab","page","sortby","sortorder","subcategory","containerBlock","document","querySelector","whichTemplate","children","length","innerHTML","insertAdjacentHTML","promise","Ajax","call","methodname","args","done","response","remove","coursedata","JSON","parse","result","renderForPromise","data","then","_ref","html","js","appendNodeContents","showPastCourseNotification","hideStatusColumn","subCategories","querySelectorAll","sortColumns","subCategoryEventHandler","subCategoryReturnHandler","parent","sortingEventHandler","sessionStorage","setItem","classList","add","removeItem","catch","error","fail","errorContainer","createElement","hasOwnProperty","errorMsg","message","appendChild","Log","debug","errorLinkContainer","errorLink","setAttribute","moreinfourl","prepend","containerDiv","div","strong","append","rows","forEach","element","addEventListener","showSubcategoryDetails","object","id","parentElement","getAttribute","contains","event","activeElement","keyCode","hasAttribute","preventDefault","click","cellIndex","handleTabChange","currentTab","pastTab","target","subcatId","activeTab","getItem","activeCategoryId","triggerEl","initCourseTabs"],"mappings":"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"}