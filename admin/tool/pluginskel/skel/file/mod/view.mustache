{{!
    view.php

    * component
    * copyright
}}
{{< common/boilerplate_php }}
{{$ description }}Prints an instance of {{ component }}.{{/ description }}
{{$ package }}{{ component }}{{/ package }}
{{$ copyright }}{{ copyright }}{{/ copyright }}
{{/ common/boilerplate_php }}
require_once(__DIR__.'/lib.php');

// Course_module ID, or
$id = optional_param('id', 0, PARAM_INT);

// ... module instance id.
${{ self.component_name_first_character }}  = optional_param('{{ self.component_name_first_character }}', 0, PARAM_INT);

if ($id) {
    $cm             = get_coursemodule_from_id('{{ component_name }}', $id, 0, false, MUST_EXIST);
    $course         = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);
    $moduleinstance = $DB->get_record('{{ component_name }}', array('id' => $cm->instance), '*', MUST_EXIST);
} else if (${{ self.component_name_first_character }}) {
    $moduleinstance = $DB->get_record('{{ component_name }}', array('id' => $n), '*', MUST_EXIST);
    $course         = $DB->get_record('course', array('id' => $moduleinstance->course), '*', MUST_EXIST);
    $cm             = get_coursemodule_from_instance('{{ component_name }}', $moduleinstance->id, $course->id, false, MUST_EXIST);
} else {
    print_error(get_string('missingidandcmid', '{{ component }}'));
}

require_login($course, true, $cm);

$modulecontext = context_module::instance($cm->id);

$event = \{{component_type}}_{{ component_name }}\event\course_module_viewed::create(array(
    'objectid' => $moduleinstance->id,
    'context' => $modulecontext
));
$event->add_record_snapshot('course', $course);
$event->add_record_snapshot('{{ component_name }}', $moduleinstance);
$event->trigger();

$PAGE->set_url('/mod/{{ component_name }}/view.php', array('id' => $cm->id));
$PAGE->set_title(format_string($moduleinstance->name));
$PAGE->set_heading(format_string($course->fullname));
$PAGE->set_context($modulecontext);

echo $OUTPUT->header();

echo $OUTPUT->footer();
