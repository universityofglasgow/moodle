{"version":3,"file":"popup-notification.min.js","sources":["../src/popup-notification.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification popup.\n *\n * @copyright  2022 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\n\n// Trigger pre-loading.\nTemplates.render('block_xp/modal-popup-notification', []);\n\n/**\n * Show the modal.\n *\n * @param {Object} context The template context.\n * @param {Object} options The options.\n */\nfunction show(context, options) {\n    options = options || {};\n    Templates.render('block_xp/modal-popup-notification', context).then((html) => {\n        const modal = new Modal(html);\n\n        // Prevent dismissing by clicking outside.\n        if (typeof ModalEvents.outsideClick !== 'undefined') {\n            modal.getRoot().on(ModalEvents.outsideClick, e => {\n                e.preventDefault();\n            });\n        }\n\n        // Broadcast when the modal has been shown.\n        modal.getRoot().on(ModalEvents.shown, () => {\n            if (options.onShown) {\n                options.onShown();\n            }\n        });\n\n        // Broadcast when the modal has been dismissed.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            if (options.onDismissed) {\n                options.onDismissed();\n            }\n        });\n\n        modal.show();\n        return;\n    }).catch(Notification.exception);\n}\n\nexport {show};\n"],"names":["context","options","render","then","html","modal","Modal","ModalEvents","outsideClick","getRoot","on","e","preventDefault","shown","onShown","hidden","onDismissed","show","catch","Notification","exception"],"mappings":";;;;;;;oFAqCcA,QAASC,SACnBA,QAAUA,SAAW,sBACXC,OAAO,oCAAqCF,SAASG,MAAMC,aAC3DC,MAAQ,IAAIC,eAAMF,WAGgB,IAA7BG,sBAAYC,cACnBH,MAAMI,UAAUC,GAAGH,sBAAYC,cAAcG,IACzCA,EAAEC,oBAKVP,MAAMI,UAAUC,GAAGH,sBAAYM,OAAO,KAC9BZ,QAAQa,SACRb,QAAQa,aAKhBT,MAAMI,UAAUC,GAAGH,sBAAYQ,QAAQ,KAC/Bd,QAAQe,aACRf,QAAQe,iBAIhBX,MAAMY,UAEPC,MAAMC,sBAAaC,2NApChBlB,OAAO,oCAAqC"}