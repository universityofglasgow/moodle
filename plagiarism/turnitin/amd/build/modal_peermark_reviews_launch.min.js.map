{"version":3,"file":"modal_peermark_reviews_launch.min.js","sources":["../src/modal_peermark_reviews_launch.js"],"sourcesContent":["/**\n * Javascript controller for Peermark Reviews launcher\n *\n * @copyright Turnitin\n * @author 2019 David Winn <dwinn@turnitin.com>\n * @module plagiarism_turnitin/modal_peermark_reviews_launch\n */\n\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/custom_interaction_events',\n        'core/modal',\n        'core/modal_registry',\n        'core/modal_events'\n    ],\n    function($, Ajax, Notification, CustomEvents, Modal, ModalRegistry, ModalEvents) {\n\n        var registered = false;\n        var SELECTORS = {\n            HIDE_BUTTON: '[data-action=\"hide\"]',\n            MODAL: '[data-region=\"modal\"]'\n        };\n\n        /**\n         * Constructor for the Modal.\n         *\n         * @param {object} root The root jQuery element for the modal\n         */\n        var ModalPeermarkReviewsLaunch = function(root) {\n            Modal.call(this, root);\n        };\n\n        ModalPeermarkReviewsLaunch.TYPE = 'plagiarism_turnitin-modal_peermark_reviews_launch';\n        ModalPeermarkReviewsLaunch.prototype = Object.create(Modal.prototype);\n        ModalPeermarkReviewsLaunch.prototype.constructor = ModalPeermarkReviewsLaunch;\n\n        /**\n         * Set up all of the event handling for the modal.\n         *\n         * @method registerEventListeners\n         */\n        ModalPeermarkReviewsLaunch.prototype.registerEventListeners = function() {\n            // Apply parent event listeners.\n            Modal.prototype.registerEventListeners.call(this);\n\n            // On cancel, then hide the modal.\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.HIDE_BUTTON, function(e, data) {\n                var cancelEvent = $.Event(ModalEvents.cancel);\n                this.getRoot().trigger(cancelEvent, this);\n\n                if (!cancelEvent.isDefaultPrevented()) {\n                    this.hide();\n                    data.originalEvent.preventDefault();\n                }\n            }.bind(this));\n        };\n\n        // Automatically register with the modal registry the first time this module is imported so that\n        // you can create modals of this type using the modal factory.\n        if (!registered) {\n            ModalRegistry.register(ModalPeermarkReviewsLaunch.TYPE,\n                ModalPeermarkReviewsLaunch,\n                'plagiarism_turnitin/modal_peermark_reviews_launch');\n            registered = true;\n        }\n\n        return ModalPeermarkReviewsLaunch;\n    }\n);"],"names":["define","$","Ajax","Notification","CustomEvents","Modal","ModalRegistry","ModalEvents","registered","SELECTORS","ModalPeermarkReviewsLaunch","root","call","this","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","e","data","cancelEvent","Event","cancel","getRoot","trigger","isDefaultPrevented","hide","originalEvent","preventDefault","bind","register"],"mappings":"AAQAA,2DACI,CACI,SACA,YACA,oBACA,iCACA,aACA,sBACA,sBAEJ,SAASC,EAAGC,KAAMC,aAAcC,aAAcC,MAAOC,cAAeC,iBAE5DC,YAAa,EACbC,sBACa,uBASbC,2BAA6B,SAASC,MACtCN,MAAMO,KAAKC,KAAMF,cAGrBD,2BAA2BI,KAAO,qDAClCJ,2BAA2BK,UAAYC,OAAOC,OAAOZ,MAAMU,YACtBG,YAAcR,2BAOnDA,2BAA2BK,UAAUI,uBAAyB,WAE1Dd,MAAMU,UAAUI,uBAAuBP,KAAKC,WAGvCO,WAAWC,GAAGjB,aAAakB,OAAOC,SAAUd,sBAAuB,SAASe,EAAGC,UAC5EC,YAAczB,EAAE0B,MAAMpB,YAAYqB,aACjCC,UAAUC,QAAQJ,YAAab,MAE/Ba,YAAYK,4BACRC,OACLP,KAAKQ,cAAcC,mBAEzBC,KAAKtB,QAKNL,aACDF,cAAc8B,SAAS1B,2BAA2BI,KAC9CJ,2BACA,qDACJF,YAAa,GAGVE"}