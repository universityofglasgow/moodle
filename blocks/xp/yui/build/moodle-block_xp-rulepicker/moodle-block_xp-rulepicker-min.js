YUI.add("moodle-block_xp-rulepicker",function(e,t){var t="moodle-block_xp-rulepicker",n="block_xp",r={PREFIX:"block_xp-rulepicker",RULE:"rule"},i={RULE:".rule button"},s=function(){s.superclass.constructor.apply(this,arguments)};e.namespace("M.block_xp").RulePicker=e.extend(s,M.core.dialogue,{prepared:!1,initializer:function(){this.publish("picked")},close:function(){this.hide()},display:function(){this.prepared||this.prepare(),this.show()},picked:function(e){e.preventDefault(),this.close(),this.fire("picked",e.currentTarget.getData("id"))},prepare:function(){var t,n,s;s="<div>",s+=" {{#rules}}",s+=' <div class="{{../CSS.RULE}}">',s+='  <button data-id="{{id}}" class="btn btn-default">{{name}}</button>',s+=" </div>",s+=" {{/rules}}",s+="</div>",n=e.Handlebars.compile(s),this.getStdModNode(e.WidgetStdMod.HEADER).prepend(e.Node.create("<h1>"+this.get("title")+"</h1>")),t=e.Node.create(n({CSS:r,rules:this.get("rules")})),this.setStdModContent(e.WidgetStdMod.BODY,t,e.WidgetStdMod.REPLACE),this.get("boundingBox").one(".moodle-dialogue-wrap").addClass("moodle-dialogue-content"),this.get("boundingBox").delegate("click",this.picked,i.RULE,this),this.prepared=!0}},{NAME:t,CSS_PREFIX:r.PREFIX,ATTRS:{rules:{validator:e.Lang.isObject,value:null}}}),e.Base.modifyAttrs(e.namespace("M.block_xp.RulePicker"),{modal:{value:!0},render:{value:!0},title:{valueFn:function(){return M.util.get_string("pickaconditiontype",n)}},visible:{value:!1}}),e.namespace("M.block_xp.RulePicker").init=function(e){return new s(e)}},"@VERSION@",{requires:["base","node","handlebars","moodle-core-notification-dialogue"]});
