{"version":3,"file":"coursetabs.min.js","sources":["../src/coursetabs.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the Course Tabs section\n *\n * @module     block_newgu_spdetails/coursetabs\n * @author     Greg Pedder <greg.pedder@glasgow.ac.uk>\n * @copyright  2023 University of Glasgow\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport * as Log from 'core/log';\nimport * as Ajax from \"../../../../lib/amd/src/ajax\";\nimport { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\nimport sortTable from 'block_newgu_spdetails/sorting';\nimport * as fetchAssessmentSummary from 'block_newgu_spdetails/assessmentsummary';\nimport * as fetchAssessmentsDueSoon from 'block_newgu_spdetails/assessmentsduesoon';\n\nconst initCourseTabs = () => {\n\n    let activetab = 'current';\n    let page = 0;\n    let sortby = 'shortname';\n    let sortorder = 'asc';\n    let subcatId = null;\n    let activeTab = sessionStorage.getItem('activeTab');\n    let activeCategoryId = sessionStorage.getItem('activeCategoryId');\n    // MGU-971 - last minute CR - throw in a course filter!\n    let coursefilter = sessionStorage.getItem('coursefilter') !== null ?\n    sessionStorage.getItem('coursefilter') : 'creditcourses';\n\n    // Account for returning to the page, or reloading.\n    if (activeTab) {\n        activetab = activeTab;\n        let currentTab = document.querySelector('#current_tab');\n        let pastTab = document.querySelector('#past_tab');\n\n        switch (activetab) {\n            case 'current':\n                currentTab.classList.add('active');\n                pastTab.classList.remove('active');\n                break;\n            case 'past':\n                currentTab.classList.remove('active');\n                pastTab.classList.add('active');\n                break;\n            default:\n                break;\n        }\n    }\n\n    if (activeCategoryId) {\n        subcatId = activeCategoryId;\n    }\n\n    // Load the assessments for the \"current\" tab to begin with...\n    loadAssessments(activetab, page, sortby, sortorder, subcatId, coursefilter);\n\n    const triggerTabList = document.querySelectorAll('#courses-Tab button');\n\n    // Bind our event listeners.\n    triggerTabList.forEach(triggerEl => {\n        triggerEl.addEventListener('click', handleTabChange);\n        triggerEl.addEventListener('keyup', function(event) {\n            let element = document.activeElement;\n            if (event.keyCode === 13 && element.hasAttribute('tabindex')) {\n                event.preventDefault();\n                element.click();\n            }\n        });\n    });\n};\n\n/**\n *\n * @param {*} activetab\n * @param {*} page\n * @param {*} sortby\n * @param {*} sortorder\n * @param {*} subcategory\n * @param {string} coursefilter which course types do we want to see.\n */\nconst loadAssessments = function(activetab, page, sortby, sortorder, subcategory = null,\n    coursefilter = 'creditcourses') {\n    let containerBlock = document.querySelector('#course_contents_container');\n\n    let whichTemplate = subcategory === null ? 'coursecategory' : 'coursesubcategory';\n\n    if (containerBlock.children.length > 0) {\n        containerBlock.innerHTML = '';\n    }\n\n    containerBlock.insertAdjacentHTML(\"afterbegin\", \"<div class='loader d-flex justify-content-center'>\\n\" +\n    \"<div class='spinner-border m-5' role='status'><span class='hidden'>Loading...</span></div></div>\");\n\n    let promise = Ajax.call([{\n        methodname: 'block_newgu_spdetails_get_assessments',\n        args: {\n            activetab: activetab,\n            page: page,\n            sortby: sortby,\n            sortorder: sortorder,\n            subcategory: subcategory,\n            coursefilter: coursefilter\n        }\n    }]);\n    promise[0].done(function(response) {\n        document.querySelector('.loader').remove();\n        let coursedata = JSON.parse(response.result);\n        // MGU-971 - jam in the selected course filter option\n        coursedata[`${coursefilter}`] = true;\n        Templates.renderForPromise('block_newgu_spdetails/' + whichTemplate, {data: coursedata})\n        .then(({html, js}) => {\n            Templates.appendNodeContents(containerBlock, html, js);\n            showPastCourseNotification(activetab);\n            hideStatusColumn(activetab);\n            let subCategories = document.querySelectorAll('.subcategory-row');\n            let sortColumns = document.querySelectorAll('#category_table .th-sortable');\n            subCategoryEventHandler(subCategories);\n            subCategoryReturnHandler(coursedata.parent);\n            sortingEventHandler(sortColumns);\n            courseFilterEventHandler(activetab, page, sortby, sortorder, subcategory);\n\n            // So we can allow returning to the last item correctly...\n            sessionStorage.setItem('activeTab', activetab);\n            if (subcategory) {\n                sessionStorage.setItem('activeCategoryId', subcategory);\n                document.querySelector('#courseNav-container').classList.add('hidden-container');\n            } else {\n                sessionStorage.removeItem('activeCategoryId');\n                document.querySelector('#courseNav-container').classList.remove('hidden-container');\n            }\n            return true;\n        }).catch((error) => displayException(error));\n    }).fail(function(response) {\n        if (response) {\n            document.querySelector('.loader').remove();\n            let errorContainer = document.createElement('div');\n            errorContainer.classList.add('alert', 'alert-danger');\n\n            if (response.hasOwnProperty('message')) {\n                let errorMsg = document.createElement('p');\n\n                errorMsg.innerHTML = response.message;\n                errorContainer.appendChild(errorMsg);\n                errorMsg.classList.add('errormessage');\n                Log.debug(errorMsg);\n            }\n\n            if (response.hasOwnProperty('moreinfourl')) {\n                let errorLinkContainer = document.createElement('p');\n                let errorLink = document.createElement('a');\n\n                errorLink.setAttribute('href', response.moreinfourl);\n                errorLink.setAttribute('target', '_blank');\n                errorLink.innerHTML = 'More information about this error';\n                errorContainer.appendChild(errorLinkContainer);\n                errorLinkContainer.appendChild(errorLink);\n                errorLinkContainer.classList.add('errorcode');\n            }\n\n            containerBlock.prepend(errorContainer);\n        }\n    });\n};\n\nconst hideStatusColumn = (activetab) => {\n    if (activetab == 'past') {\n        if (document.querySelector('#sortby_status')) {\n            document.querySelector('#sortby_status').classList.add('hidden');\n        }\n    }\n};\n\nconst showPastCourseNotification = (activetab) => {\n    if (activetab == 'past') {\n        let containerDiv = document.createElement('div');\n        containerDiv.classList.add('border', 'rounded', 'my-2', 'p-2');\n        let div = document.createElement('div');\n        let strong = document.createElement('strong');\n        div.classList.add('alert', 'alert-info', 'm-0', 'text-center');\n        strong.append('Past provisional assessment grades will be displayed only for Academic Year 2024/25 onwards.' +\n            ' Any before this, can be accessed from the MyCourses tab on Moodle or your individual course Moodle page.');\n        div.appendChild(strong);\n        containerDiv.appendChild(div);\n        document.querySelector(\"#course_contents_container\").prepend(containerDiv);\n    }\n};\n\nconst subCategoryEventHandler = (rows) => {\n    if (rows.length > 0) {\n        rows.forEach((element) => {\n            element.addEventListener('click', () => showSubcategoryDetails(element));\n        });\n    }\n};\n\nconst showSubcategoryDetails = (object) => {\n    let id = object.parentElement.getAttribute('data-id');\n    if (id !== null) {\n        document.querySelector('#courseNav-container').classList.add('hidden-container');\n        let currentTab = document.querySelector('#current_tab');\n        let activetab = '';\n        if (currentTab.classList.contains('active')) {\n            activetab = 'current';\n        } else {\n            activetab = 'past';\n        }\n        // MGU-971 - last minute CR - throw in a course filter!\n        let coursefilter = sessionStorage.getItem('coursefilter') !== null ?\n            sessionStorage.getItem('coursefilter') : 'creditcourses';\n        // Ordering by DueDate by default....\n        loadAssessments(activetab, 0, 'duedate', 'asc', id, coursefilter);\n    }\n};\n\nconst subCategoryReturnHandler = (id) => {\n    // The 'return to...' element won't exist on the page at the top most level.\n    if (document.querySelector('#subcategory-return-assessment')) {\n        document.querySelector('#subcategory-return-assessment').addEventListener('click', () => {\n            // We now want to reload the previous level, using the previous id...\n            // In order to display all courses, we pass null back to loadAssessments.\n            if (id == 0 || id === null) {\n                id = null;\n                document.querySelector('#courseNav-container').classList.remove('hidden-container');\n            }\n            let currentTab = document.querySelector('#current_tab');\n            let activetab = '';\n            if (currentTab.classList.contains('active')) {\n                activetab = 'current';\n            } else {\n                activetab = 'past';\n            }\n            // MGU-971 - last minute CR - throw in a course filter!\n            let coursefilter = sessionStorage.getItem('coursefilter') !== null ?\n                sessionStorage.getItem('coursefilter') : 'creditcourses';\n            loadAssessments(activetab, 0, 'shortname', 'asc', id, coursefilter);\n        });\n\n        document.querySelector('#subcategory-return-assessment').addEventListener('keyup', function(event) {\n            let element = document.activeElement;\n            if (event.keyCode === 13 && element.hasAttribute('tabindex')) {\n                event.preventDefault();\n                element.click();\n            }\n        });\n    }\n};\n\n/**\n * Function to bind click handlers to row headers.\n * @param {*} rows\n */\nconst sortingEventHandler = (rows) => {\n    if (rows.length > 0) {\n        rows.forEach((element) => {\n            element.addEventListener('click', () => sortTable(element.cellIndex, element.getAttribute('data-sortby'),\n            'category_table'));\n        });\n    }\n};\n\n/**\n * Function to now allow filtering courses on the category name, i.e. summative/formative.\n * @see https://uofglasgow.atlassian.net/browse/MGU-971 for further insight.\n * @param {*} activetab\n * @param {*} page\n * @param {*} sortby\n * @param {*} sortorder\n * @param {*} subcatId\n */\nconst courseFilterEventHandler = (activetab, page, sortby, sortorder, subcatId) => {\n    let selector = document.querySelectorAll('#course_contents_container [data-region=\"filter\"] ul li');\n    selector.forEach((element) => {\n        element.addEventListener('click', (e) => {\n            const option = e.target;\n\n            if (option.classList.contains('active')) {\n                // If it's already active then we don't need to do anything.\n                return;\n            }\n            // Remove the previous value.\n            sessionStorage.removeItem('coursefilter');\n            const coursefilter = option.getAttribute('data-value');\n            sessionStorage.setItem('coursefilter', coursefilter);\n\n            loadAssessments(activetab, page, sortby, sortorder, subcatId, coursefilter, true);\n            fetchAssessmentSummary.init(activetab, coursefilter);\n            fetchAssessmentsDueSoon.init(activetab, coursefilter);\n\n            // This stops the page from jumping back to the top.\n            e.preventDefault();\n        });\n    });\n\n    selector.forEach((element) => {\n        element.addEventListener('keyup', function(event) {\n            let element = document.activeElement;\n            if (event.keyCode === 13) {\n                event.preventDefault();\n                element.click();\n            }\n        });\n    });\n};\n\n/**\n * Function to bind events to tabs.\n *\n * @param {object} event\n */\nconst handleTabChange = function(event) {\n    let currentTab = document.querySelector('#current_tab');\n    let pastTab = document.querySelector('#past_tab');\n    let activetab = '';\n    let page = 0;\n    let sortby = 'shortname';\n    let sortorder = 'asc';\n\n    switch (event.target) {\n        case currentTab:\n            activetab = 'current';\n            currentTab.classList.add('active');\n            pastTab.classList.remove('active');\n            break;\n        case pastTab:\n            activetab = 'past';\n            currentTab.classList.remove('active');\n            pastTab.classList.add('active');\n            break;\n        default:\n            break;\n    }\n    // MGU-971 - last minute CR - throw in a course filter!\n    let coursefilter = sessionStorage.getItem('coursefilter') !== null ?\n    sessionStorage.getItem('coursefilter') : 'creditcourses';\n    loadAssessments(activetab, page, sortby, sortorder, null, coursefilter);\n    fetchAssessmentSummary.init(activetab, coursefilter);\n    fetchAssessmentsDueSoon.init(activetab, coursefilter);\n    event.preventDefault();\n};\n\n\n/**\n * @constructor\n */\nexport const init = () => {\n    initCourseTabs();\n};"],"names":["loadAssessments","activetab","page","sortby","sortorder","subcategory","coursefilter","containerBlock","document","querySelector","whichTemplate","children","length","innerHTML","insertAdjacentHTML","promise","Ajax","call","methodname","args","done","response","remove","coursedata","JSON","parse","result","renderForPromise","data","then","_ref","html","js","appendNodeContents","showPastCourseNotification","hideStatusColumn","subCategories","querySelectorAll","sortColumns","subCategoryEventHandler","subCategoryReturnHandler","parent","sortingEventHandler","courseFilterEventHandler","sessionStorage","setItem","classList","add","removeItem","catch","error","fail","errorContainer","createElement","hasOwnProperty","errorMsg","message","appendChild","Log","debug","errorLinkContainer","errorLink","setAttribute","moreinfourl","prepend","containerDiv","div","strong","append","rows","forEach","element","addEventListener","showSubcategoryDetails","object","id","parentElement","getAttribute","contains","getItem","event","activeElement","keyCode","hasAttribute","preventDefault","click","cellIndex","subcatId","selector","e","option","target","fetchAssessmentSummary","init","fetchAssessmentsDueSoon","handleTabChange","currentTab","pastTab","activeTab","activeCategoryId","triggerEl","initCourseTabs"],"mappings":"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"}