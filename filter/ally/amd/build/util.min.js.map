{"version":3,"file":"util.min.js","sources":["../src/util.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Utility lib.\n *\n * @package\n * @author    Guy Thomas / Branden Visser\n * @copyright Copyright (c) 2017 Open LMS\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return new function() {\n\n        /**\n         * When evaluateFunction returns true.\n         * @author Guy Thomas\n         * @param {function} evaluateFunction\n         * @param {integer} maxIterations\n         * @returns {promise} jQuery promise\n         */\n        this.whenTrue = function(evaluateFunction, maxIterations) {\n\n            maxIterations = !maxIterations ? 10 : maxIterations;\n\n            var dfd = $.Deferred();\n            var i = 0;\n\n            // Maintains a handle to the interval timer, so it can be cleaned up when the element is removed.\n            var intervalHandle = null;\n\n            /*!\n             * The function that will be used to try the evaluation repeatedly.\n             */\n            var loop = function() {\n                i++;\n                if (i > maxIterations) {\n                    dfd.reject();\n                    if (intervalHandle) {\n                        // Cleanup the interval.\n                        clearInterval(intervalHandle);\n                        intervalHandle = null;\n                    }\n                    return;\n                }\n                if (evaluateFunction()) {\n                    dfd.resolve();\n                    if (intervalHandle) {\n                        // Cleanup the interval.\n                        clearInterval(intervalHandle);\n                        intervalHandle = null;\n                    }\n                    return;\n                }\n            };\n\n            intervalHandle = setInterval(loop, 200);\n\n            return dfd.promise();\n        };\n\n        /**\n         * Listen for the offset/size of a given element to change. Whenever it changes, invoke the given function.\n         * @author Branden Visser\n         * @param  {jQuery}     $el                     The element to watch\n         * @param  {Function}   callback                The function that is invoked when the coords change\n         * @param  {Object}     callback.coords         The new set of coords\n         * @param  {Number}     callback.coords.top     The top offset of the element\n         * @param  {Number}     callback.coords.right   The right offset of the element\n         * @param  {Number}     callback.coords.bottom  The bottom offset of the element\n         * @param  {Number}     callback.coords.left    The left offset of the element\n         * @api private\n         */\n        this.onCoordsChange = function($el, callback) {\n\n            // Maintains the last known set of coords\n            var lastCoords = {};\n\n            // Maintains a handle to the interval timer, so it can be cleaned up when the element is removed\n            var intervalHandle = null;\n\n            /*!\n             * The function that is continuously run to determine if there was a change in coords\n             */\n            var _loop = function() {\n                var offset = $el.offset();\n                var width = $el.width();\n                var height = $el.height();\n\n                var currCoords = {\n                    'top': offset.top,\n                    'right': offset.left + width,\n                    'bottom': offset.top + height,\n                    'left': offset.left\n                };\n\n                // Only continue if the coordinates have changed. Otherwise we do nothing\n                if (currCoords.top !== lastCoords.top || currCoords.right !== lastCoords.right ||\n                    currCoords.bottom !== lastCoords.bottom || currCoords.left !== lastCoords.left) {\n                    // Set the new set of coords\n                    lastCoords = currCoords;\n\n                    // First ensure the element is still on the DOM. If not, we're going to clean everything up here\n                    if (!$.contains(document.documentElement, $el[0])) {\n                        if (intervalHandle) {\n                            clearInterval(intervalHandle);\n                            intervalHandle = null;\n                        }\n                        return;\n                    }\n\n                    // Finally, run the callback\n                    return callback(lastCoords);\n                }\n            };\n\n            // Start the interval timer\n            intervalHandle = setInterval(_loop, 200);\n\n            // Perform an immediate initial run\n            _loop();\n        };\n\n        /**\n         * Builds an object which contains all the parameters passed in a URL.\n         * @param {string} url URL which has parameters\n         * @returns {Object}\n         */\n        this.getQuery = function(url) {\n            var query = {};\n\n            url.replace(/[?&](.+?)=([^&#]*)/g, function (_, key, value) {\n                query[key] = decodeURI(value).replace(/\\+/g, ' ');\n            });\n\n            return query;\n        };\n\n        /**\n         * Taken from underscore.js - debounce function to prevent function spamming on event triggers.\n         * Modified by GThomas to implement deferred.\n         * @param {function} func\n         * @param {int} wait\n         * @param {boolean} immediate\n         * @returns Deferred\n         */\n        this.debounce = function (func, wait, immediate) {\n            var timeout;\n            return function() {\n                var dfd = $.Deferred();\n                var context = this, args = arguments;\n                var later = function() {\n                    timeout = null;\n                    if (!immediate) { dfd.resolve(func.apply(context, args)); }\n                };\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n                if (callNow) {\n                    dfd.resolve(func.apply(context, args));\n                }\n                return dfd;\n            };\n        };\n    };\n});\n"],"names":["define","$","whenTrue","evaluateFunction","maxIterations","dfd","Deferred","i","intervalHandle","setInterval","reject","clearInterval","resolve","promise","onCoordsChange","$el","callback","lastCoords","_loop","offset","width","height","currCoords","top","left","right","bottom","contains","document","documentElement","getQuery","url","query","replace","_","key","value","decodeURI","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBAA,0BAAO,CAAC,WAAW,SAASC,UACjB,IAAI,gBASFC,SAAW,SAASC,iBAAkBC,eAEvCA,cAAiBA,eAAgB,OAE7BC,IAAMJ,EAAEK,WACRC,EAAI,EAGJC,eAAiB,YA2BrBA,eAAiBC,aAtBN,mBACPF,EACQH,eACJC,IAAIK,cACAF,iBAEAG,cAAcH,gBACdA,eAAiB,QAIrBL,oBACAE,IAAIO,eACAJ,iBAEAG,cAAcH,gBACdA,eAAiB,iBAMM,KAE5BH,IAAIQ,gBAeVC,eAAiB,SAASC,IAAKC,cAG5BC,WAAa,GAGbT,eAAiB,KAKjBU,MAAQ,eACJC,OAASJ,IAAII,SACbC,MAAQL,IAAIK,QACZC,OAASN,IAAIM,SAEbC,WAAa,KACNH,OAAOI,UACLJ,OAAOK,KAAOJ,aACbD,OAAOI,IAAMF,YACfF,OAAOK,SAIfF,WAAWC,MAAQN,WAAWM,KAAOD,WAAWG,QAAUR,WAAWQ,OACrEH,WAAWI,SAAWT,WAAWS,QAAUJ,WAAWE,OAASP,WAAWO,YAE1EP,WAAaK,WAGRrB,EAAE0B,SAASC,SAASC,gBAAiBd,IAAI,IASvCC,SAASC,iBARRT,iBACAG,cAAcH,gBACdA,eAAiB,QAWjCA,eAAiBC,YAAYS,MAAO,KAGpCA,cAQCY,SAAW,SAASC,SACjBC,MAAQ,UAEZD,IAAIE,QAAQ,uBAAuB,SAAUC,EAAGC,IAAKC,OACjDJ,MAAMG,KAAOE,UAAUD,OAAOH,QAAQ,MAAO,QAG1CD,YAWNM,SAAW,SAAUC,KAAMC,KAAMC,eAC9BC,eACG,eACCrC,IAAMJ,EAAEK,WACRqC,QAAUC,KAAMC,KAAOC,UACvBC,MAAQ,WACRL,QAAU,KACLD,WAAapC,IAAIO,QAAQ2B,KAAKS,MAAML,QAASE,QAElDI,QAAUR,YAAcC,eAC5BQ,aAAaR,SACbA,QAAUS,WAAWJ,MAAOP,MACxBS,SACA5C,IAAIO,QAAQ2B,KAAKS,MAAML,QAASE,OAE7BxC"}