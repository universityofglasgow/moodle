{"version":3,"sources":["../src/jsme.js"],"names":["define","$","t","max_loading_waits","insert_applet","containerid","topselector","feedback","readonly","nostereo","autoez","jmeoptions","push","show_jsme","remainingloadingwaits","topnode","jme","jsmeApplet","JSApplet","setTimeout","html","removeClass","JSME","join","name","find","val","readMolecule","parents","on","smiles","jmeFile","molFile"],"mappings":"yQA0BAA,OAAM,wBAAC,CAAC,QAAD,CAAD,CAAa,SAASC,CAAT,CAAY,CAE3B,aAKA,GAAIC,CAAAA,CAAC,CAAG,CACJC,iBAAiB,CAAE,EADf,CAGJC,aAAa,CAAE,uBAAUC,CAAV,CAAuBC,CAAvB,CAAoCC,CAApC,CAA8CC,CAA9C,CAAwDC,CAAxD,CAAkEC,CAAlE,CAA0E,CACrF,GAAIC,CAAAA,CAAU,CAAG,EAAjB,CACA,GAAIF,CAAJ,CAAc,CACVE,CAAU,CAACC,IAAX,CAAgB,UAAhB,CACH,CACD,GAAIF,CAAJ,CAAY,CACRC,CAAU,CAACC,IAAX,CAAgB,QAAhB,CACH,CACD,GAAIJ,CAAJ,CAAc,CACVG,CAAU,CAACC,IAAX,CAAgB,QAAhB,CACH,CACDV,CAAC,CAACW,SAAF,CAAYP,CAAZ,CAAyBD,CAAzB,CAAsCM,CAAtC,CAAkDT,CAAC,CAACC,iBAApD,CACH,CAfG,CAiBJU,SAAS,CAAE,mBAAUP,CAAV,CAAuBD,CAAvB,CAAoCM,CAApC,CAAgDG,CAAhD,CAAuE,CAC9E,GAAIC,CAAAA,CAAO,CAAGd,CAAC,CAACK,CAAD,CAAf,CACIU,CAAG,GADP,CAEIC,CAAU,GAFd,CAKA,GAAwB,QAApB,uBAAOC,CAAAA,QAAP,qBAAOA,QAAP,IAAwD,CAAxB,CAAAJ,CAApC,CAA+D,CAC3DK,UAAU,CAAC,UAAY,CACnBjB,CAAC,CAACW,SAAF,CAAYP,CAAZ,CAAyBD,CAAzB,CAAsCM,CAAtC,CAAkDG,CAAqB,CAAG,CAA1E,CACH,CAFS,CAEP,GAFO,CAAV,CAGA,MACH,CAGDb,CAAC,CAAC,IAAMI,CAAP,CAAD,CAAqBe,IAArB,CAA0B,EAA1B,EACAnB,CAAC,CAAC,IAAMI,CAAP,CAAD,CAAqBgB,WAArB,CAAiC,gCAAjC,EAGAJ,CAAU,CAAG,GAAIC,CAAAA,QAAQ,CAACI,IAAb,CAAkBjB,CAAlB,CAA+B,OAA/B,CAAwC,OAAxC,CAAiD,CAAC,QAAWM,CAAU,CAACY,IAAX,CAAgB,GAAhB,CAAZ,CAAjD,CAAb,CACAN,CAAU,CAACO,IAAX,CAAkBnB,CAAlB,CAGAW,CAAG,CAAGD,CAAO,CAACU,IAAR,CAAa,WAAb,EAA0BC,GAA1B,EAAN,CACA,GAAIV,CAAJ,CAAS,CACLC,CAAU,CAACU,YAAX,CAAwBX,CAAxB,CACH,CAGDD,CAAO,CAACa,OAAR,CAAgB,MAAhB,EAAwBC,EAAxB,CAA2B,QAA3B,CAAqC,UAAY,CAC7Cd,CAAO,CAACU,IAAR,CAAa,cAAb,EAA6BC,GAA7B,CAAiCT,CAAU,CAACa,MAAX,EAAjC,EACAf,CAAO,CAACU,IAAR,CAAa,WAAb,EAA0BC,GAA1B,CAA8BT,CAAU,CAACc,OAAX,EAA9B,EACAhB,CAAO,CAACU,IAAR,CAAa,WAAb,EAA0BC,GAA1B,CAA8BT,CAAU,CAACe,OAAX,EAA9B,CACH,CAJD,CAKH,CAlDG,CAAR,CAoDA,MAAO9B,CAAAA,CACV,CA5DK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling JSME initialisation in pmatchjme forms.\n *\n * @package    qtype\n * @subpackage pmatchjme\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/*global JSApplet*/\n\ndefine(['jquery'], function($) {\n\n    \"use strict\";\n\n    /**\n     * @alias qtype_pmatchjme/jsme\n     */\n    var t = {\n        max_loading_waits: 10,\n\n        insert_applet: function (containerid, topselector, feedback, readonly, nostereo, autoez) {\n            var jmeoptions = [];\n            if (nostereo) {\n                jmeoptions.push(\"nostereo\");\n            }\n            if (autoez) {\n                jmeoptions.push(\"autoez\");\n            }\n            if (readonly) {\n                jmeoptions.push(\"depict\");\n            }\n            t.show_jsme(topselector, containerid, jmeoptions, t.max_loading_waits);\n        },\n\n        show_jsme: function (topselector, containerid, jmeoptions, remainingloadingwaits) {\n            var topnode = $(topselector),\n                jme = false,\n                jsmeApplet = false;\n\n            // Ensure the JSME code is loaded properly. IE 8 struggles.\n            if (typeof JSApplet !== 'object' && remainingloadingwaits > 0) {\n                setTimeout(function () {\n                    t.show_jsme(topselector, containerid, jmeoptions, remainingloadingwaits - 1);\n                }, 100);\n                return;\n            }\n\n            // Hide the loading message.\n            $('#' + containerid).html('');\n            $('#' + containerid).removeClass('qtype_pmatchjme-applet-warning');\n\n            // Instantiate a new JSME.\n            jsmeApplet = new JSApplet.JSME(containerid, '368px', '312px', {\"options\": jmeoptions.join(',')});\n            jsmeApplet.name = containerid;\n\n            // If molecule data is supplied display it.\n            jme = topnode.find('input.jme').val();\n            if (jme) {\n                jsmeApplet.readMolecule(jme);\n            }\n\n            // Add event handler to save the values on form submit.\n            topnode.parents('form').on('submit', function () {\n                topnode.find('input.answer').val(jsmeApplet.smiles());\n                topnode.find('input.jme').val(jsmeApplet.jmeFile());\n                topnode.find('input.mol').val(jsmeApplet.molFile());\n            });\n        }\n    };\n    return t;\n});\n"],"file":"jsme.min.js"}