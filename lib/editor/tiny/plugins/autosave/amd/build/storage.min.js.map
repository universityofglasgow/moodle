{"version":3,"file":"storage.min.js","sources":["../src/storage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Storage helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/plugin\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from \"./repository\";\nimport Pending from 'core/pending';\nimport {\n    markInitialised,\n    getBackoffTime,\n} from \"./options\";\nimport Log from 'core/log';\nimport {getLogSource} from './common';\n\n/** @property {Map} A map of debounced draft saves */\nconst saveDebounceMap = new Map();\n\n/**\n * Attempt to restore a draft into the editor\n *\n * @param {TinyMCE} editor The Editor to restore a draft for\n */\nexport const restoreDraft = async(editor) => {\n    const pendingPromise = new Pending('tiny_autosave/restoreDraft');\n    try {\n        const session = await Repository.resumeAutosaveSession(editor);\n        if (session && session.drafttext) {\n            editor.undoManager.ignore(() => {\n                editor.setContent(session.drafttext);\n                editor.save();\n            });\n        }\n    } catch (error) {\n        // Ignore any errors as drafts are optional.\n        Log.warn(`Failed to restore draft: ${error}`, getLogSource(editor));\n    }\n    markInitialised(editor);\n    pendingPromise.resolve();\n};\n\n/**\n * Save the current content of the editor as a draft.\n *\n * @param {TinyMCE} editor\n */\nexport const saveDraft = (editor) => {\n    const timerId = saveDebounceMap.get(editor);\n    if (timerId) {\n        clearTimeout(timerId);\n    }\n    saveDebounceMap.set(editor, setTimeout(() => {\n        Log.debug(`Saving draft`, getLogSource(editor));\n        Repository.updateAutosaveSession(editor)\n        .catch((error) => window.console.warn(error));\n    }, getBackoffTime(editor)));\n};\n\n/**\n * Delete the draft for the current editor.\n *\n * @param {TinyMCE} editor\n */\nexport const removeAutosaveSession = (editor) => {\n    Log.debug(`Removing Autosave session`, getLogSource(editor));\n    Repository.removeAutosaveSession(editor);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Repository","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_pending","_log","saveDebounceMap","Map","_exports","restoreDraft","async","pendingPromise","Pending","session","resumeAutosaveSession","editor","drafttext","undoManager","ignore","setContent","save","error","Log","warn","concat","getLogSource","markInitialised","resolve","saveDraft","timerId","clearTimeout","setTimeout","debug","updateAutosaveSession","catch","window","console","getBackoffTime","removeAutosaveSession"],"mappings":"yKA6B2B,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA,CAAA,SAAAG,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAAD,IAAAA,QAAAE,iBAAAF,IAAAA,eAAAF,yBAAA,SAAAC,aAAAA,OAAAA,YAAAG,iBAAAD,oBAAAF,YAAA,wIAN3BI,WAM2B,SAAAR,IAAAI,aAAAA,IAAAA,aAAAJ,KAAAA,IAAAC,WAAAD,OAAAA,IAAAA,GAAAA,OAAAA,KAAAA,iBAAAA,KAAAE,mBAAAF,IAAAE,MAAAA,CAAAA,QAAAF,KAAAS,IAAAA,MAAAN,yBAAAC,aAAA,GAAAK,OAAAA,MAAAC,IAAAV,KAAA,OAAAS,MAAAE,IAAAX,KAAA,IAAAY,OAAAC,GAAAA,sBAAAC,OAAAC,gBAAAD,OAAAE,yBAAAC,IAAAA,IAAAA,OAAAjB,IAAAiB,eAAAA,KAAAH,OAAAI,UAAAC,eAAAC,KAAApB,IAAAiB,KAAA,CAAA,IAAAI,KAAAR,sBAAAC,OAAAE,yBAAAhB,IAAAiB,KAAAI,KAAAA,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAjB,IAAAiB,IAAAL,CAAAA,OAAAV,QAAAF,IAAAS,OAAAA,MAAAa,IAAAtB,IAAAY,eAAAA,MAAA;;;;;;;KAN3BW,CAAAf,YACAgB,SAAAzB,uBAAAyB,UAKAC,KAAA1B,uBAAA0B,MAIA,MAAMC,gBAAkB,IAAIC,IAuB1BC,SAAAC,aAhB0BC,eACxB,MAAMC,eAAiB,IAAIC,SAAO9B,QAAC,8BACnC,IACI,MAAM+B,cAAgBzB,WAAW0B,sBAAsBC,QACnDF,SAAWA,QAAQG,WACnBD,OAAOE,YAAYC,QAAO,KACtBH,OAAOI,WAAWN,QAAQG,WAC1BD,OAAOK,MAAM,GAGxB,CAAC,MAAOC,OAELC,KAAAA,QAAIC,KAAIC,4BAAAA,OAA6BH,QAAS,EAAAI,QAAYA,cAACV,QAC/D,EACA,EAAAW,SAAAA,iBAAgBX,QAChBJ,eAAegB,SAAS,EAkB1BnB,SAAAoB,UAVwBb,SACtB,MAAMc,QAAUvB,gBAAgBf,IAAIwB,QAChCc,SACAC,aAAaD,SAEjBvB,gBAAgBJ,IAAIa,OAAQgB,YAAW,KACnCT,KAAGxC,QAACkD,MAAsB,gBAAA,EAAAP,sBAAaV,SACvC3B,WAAW6C,sBAAsBlB,QAChCmB,OAAOb,OAAUc,OAAOC,QAAQb,KAAKF,QAAO,IAC9C,EAAAgB,SAAAA,gBAAetB,SAAS,EAW7BP,SAAA8B,sBAHoCvB,SAClCO,KAAGxC,QAACkD,MAAmC,6BAAA,EAAAP,sBAAaV,SACpD3B,WAAWkD,sBAAsBvB,OAAO,CAC1C"}