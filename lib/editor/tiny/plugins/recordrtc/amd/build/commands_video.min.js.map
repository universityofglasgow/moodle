{"version":3,"file":"commands_video.min.js","sources":["../src/commands_video.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Record RTC - record video command.\n *\n * @module      tiny_recordrtc/recordVideoCommands\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {getButtonImage as getVideoIcon} from 'editor_tiny/utils';\nimport {\n    videoButtonName,\n    component\n} from './common';\nimport {isVideoAllowed} from './options';\nimport Recorder from './video_recorder';\n\nexport default async() => {\n    if (!Recorder.isBrowserCompatible()) {\n        // The browser doesn't support the plugin, so just don't show it.\n        return () => false;\n    }\n\n    const [\n        videoButtonTitle,\n        buttonImage,\n    ] = await Promise.all([\n        getString('videobuttontitle', component),\n        getVideoIcon('video', component),\n    ]);\n\n    return (editor) => {\n        if (!isVideoAllowed(editor)) {\n            return;\n        }\n\n        const icon = 'video';\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        editor.ui.registry.addButton(videoButtonName, {\n            icon,\n            tooltip: videoButtonTitle,\n            onAction: () => Recorder.display(editor),\n        });\n\n        editor.ui.registry.addMenuItem(videoButtonName, {\n            icon,\n            text: videoButtonTitle,\n            onAction: () => Recorder.display(editor),\n        });\n    };\n};\n"],"names":["obj","_video_recorder","__esModule","default","_exports","async","Recorder","isBrowserCompatible","videoButtonTitle","buttonImage","Promise","all","getString","component","getVideoIcon","editor","isVideoAllowed","ui","registry","addIcon","html","addButton","videoButtonName","icon","tooltip","onAction","display","addMenuItem","text"],"mappings":"6LA8BwC,IAAAA;;;;;;;qFAAxCC,iBAAwCD,IAAxCC,kBAAwCD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAoCvC,OAAAI,SAAAD,QAlCcE,UACX,IAAKC,gBAAAA,QAASC,sBAEV,MAAO,KAAM,EAGjB,MACIC,iBACAC,mBACMC,QAAQC,IAAI,EAClB,EAAAC,KAAAA,YAAU,mBAAoBC,QAAAA,YAC9B,EAAAC,OAAAA,gBAAa,QAASD,QAAAA,aAG1B,OAAQE,SACJ,KAAK,EAAAC,SAAAA,gBAAeD,QAChB,OAIJA,OAAOE,GAAGC,SAASC,QADN,QACoBV,YAAYW,MAE7CL,OAAOE,GAAGC,SAASG,UAAUC,wBAAiB,CAC1CC,KAJS,QAKTC,QAAShB,iBACTiB,SAAUA,IAAMnB,wBAASoB,QAAQX,UAGrCA,OAAOE,GAAGC,SAASS,YAAYL,wBAAiB,CAC5CC,KAVS,QAWTK,KAAMpB,iBACNiB,SAAUA,IAAMnB,wBAASoB,QAAQX,SACnC,CACL,EACJX,SAAAD,OAAA"}