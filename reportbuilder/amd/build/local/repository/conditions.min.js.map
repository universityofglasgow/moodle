{"version":3,"file":"conditions.min.js","sources":["../../../src/local/repository/conditions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to handle condition AJAX requests\n *\n * @module      core_reportbuilder/local/repository/conditions\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Reset all conditions for given report\n *\n * @param {Number} reportId\n * @return {Promise}\n */\nexport const resetConditions = reportId => {\n    const request = {\n        methodname: 'core_reportbuilder_conditions_reset',\n        args: {reportid: reportId}\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Add condition to given report\n *\n * @param {Number} reportId\n * @param {String} uniqueIdentifier\n * @return {Promise}\n */\nexport const addCondition = (reportId, uniqueIdentifier) => {\n    const request = {\n        methodname: 'core_reportbuilder_conditions_add',\n        args: {reportid: reportId, uniqueidentifier: uniqueIdentifier}\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Remove condition from given report\n *\n * @param {Number} reportId\n * @param {Number} conditionId\n * @return {Promise}\n */\nexport const deleteCondition = (reportId, conditionId) => {\n    const request = {\n        methodname: 'core_reportbuilder_conditions_delete',\n        args: {reportid: reportId, conditionid: conditionId}\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Reorder a condition in a given report\n *\n * @param {Number} reportId\n * @param {Number} conditionId\n * @param {Number} position\n * @return {Promise}\n */\nexport const reorderCondition = (reportId, conditionId, position) => {\n    const request = {\n        methodname: 'core_reportbuilder_conditions_reorder',\n        args: {reportid: reportId, conditionid: conditionId, position: position}\n    };\n\n    return Ajax.call([request])[0];\n};\n"],"names":["obj","_ajax","__esModule","default","_exports","resetConditions","reportId","request","methodname","args","reportid","Ajax","call","addCondition","uniqueIdentifier","uniqueidentifier","deleteCondition","conditionId","conditionid","reorderCondition","position"],"mappings":"0GAuB6B,IAAAA;;;;;;;sKAA7BC,OAA6BD,IAA7BC,QAA6BD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAe3BI,SAAAC,gBAP6BC,WAC3B,MAAMC,QAAU,CACZC,WAAY,sCACZC,KAAM,CAACC,SAAUJ,WAGrB,OAAOK,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,EAiBhCH,SAAAS,aAP0BA,CAACP,SAAUQ,oBACnC,MAAMP,QAAU,CACZC,WAAY,oCACZC,KAAM,CAACC,SAAUJ,SAAUS,iBAAkBD,mBAGjD,OAAOH,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,EAiBhCH,SAAAY,gBAP6BA,CAACV,SAAUW,eACtC,MAAMV,QAAU,CACZC,WAAY,uCACZC,KAAM,CAACC,SAAUJ,SAAUY,YAAaD,cAG5C,OAAON,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,EAkBhCH,SAAAe,iBAP8BA,CAACb,SAAUW,YAAaG,YACpD,MAAMb,QAAU,CACZC,WAAY,wCACZC,KAAM,CAACC,SAAUJ,SAAUY,YAAaD,YAAaG,SAAUA,WAGnE,OAAOT,MAAAA,QAAKC,KAAK,CAACL,UAAU,EAAE,CAChC"}