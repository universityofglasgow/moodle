name: MyGrades Student Dashboard Actions

run-name: ${{ github.actor }} is running GitHub Actions

on: [push, pull_request]

jobs:
  plugin-build-tests:
    runs-on: ubuntu-22.04
    
    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3 --expose 3306
    
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        moodle-branch: ['gu44']
        database: [mariadb]
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          # If you are not using code coverage, keep "none". Otherwise, use "pcov" (Moodle 3.10 and up) or "xdebug".
          # If you try to use code coverage with "none", it will fallback to phpdbg (which has known problems).
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist --ignore-platform-reqs moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV
          sudo apt-get install maxima

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci add-plugin universityofglasgow/moodle-local_gugrades
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
          moodle-plugin-ci add-config 'define("QTYPE_STACK_TEST_CONFIG_PLATFORM", "none");'
        env:
          DB: ${{ matrix.database }}
          MOODLE_REPO: https://github.com/universityofglasgow/moodle.git
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
          IGNORE_NAMES: '*_test.php, *_testcase.php'

      - name: PHP Lint
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phplint

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpcs --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpdoc --max-warnings 0

      - name: Validating
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci validate

      - name: Mustache Lint
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci mustache

      - name: PHPUnit tests
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpunit --fail-on-warning
      - run: echo "This job's status is ${{ job.status }}."

      - name: Mark cancelled jobs as failed.
        if: ${{ cancelled() }}
        run: exit 1
