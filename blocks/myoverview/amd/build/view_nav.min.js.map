{"version":3,"file":"view_nav.min.js","sources":["../src/view_nav.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline view navigation for the overview block.\n *\n * @copyright  2018 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport * as Repository from 'block_myoverview/repository';\nimport * as View from 'block_myoverview/view';\nimport SELECTORS from 'block_myoverview/selectors';\n\n/**\n * Update the user preference for the block.\n *\n * @param {String} filter The type of filter: display/sort/grouping.\n * @param {String} value The current preferred value.\n */\nconst updatePreferences = (filter, value) => {\n    let type = null;\n    if (filter === 'display') {\n        type = 'block_myoverview_user_view_preference';\n    } else if (filter === 'sort') {\n        type = 'block_myoverview_user_sort_preference';\n    } else if (filter === 'customfieldvalue') {\n        type = 'block_myoverview_user_grouping_customfieldvalue_preference';\n    } else {\n        type = 'block_myoverview_user_grouping_preference';\n    }\n\n    Repository.updateUserPreferences({\n        preferences: [\n            {\n                type: type,\n                value: value\n            }\n        ]\n    });\n};\n\n/**\n * Event listener for the Display filter (cards, list).\n *\n * @param {object} root The root element for the overview block\n */\nconst registerSelector = root => {\n\n    const Selector = root.find(SELECTORS.FILTERS);\n\n    CustomEvents.define(Selector, [CustomEvents.events.activate]);\n    Selector.on(\n        CustomEvents.events.activate,\n        SELECTORS.FILTER_OPTION,\n        (e, data) => {\n            const option = $(e.target);\n\n            if (option.hasClass('active')) {\n                // If it's already active then we don't need to do anything.\n                return;\n            }\n\n            const filter = option.attr('data-filter');\n            const pref = option.attr('data-pref');\n            const customfieldvalue = option.attr('data-customfieldvalue');\n\n            root.find(SELECTORS.courseView.region).attr('data-' + filter, option.attr('data-value'));\n            updatePreferences(filter, pref);\n\n            if (customfieldvalue) {\n                root.find(SELECTORS.courseView.region).attr('data-customfieldvalue', customfieldvalue);\n                updatePreferences('customfieldvalue', customfieldvalue);\n            }\n\n            // Reset the views.\n\n            // Check if the user is currently in a searching state, if so we'll reset it.\n            const page = document.querySelector(SELECTORS.region.selectBlock);\n            const input = page.querySelector(SELECTORS.region.searchInput);\n            if (input.value !== '') {\n                const clearIcon = page.querySelector(SELECTORS.region.clearIcon);\n                input.value = '';\n                // Triggers the init so wont need to call it again.\n                View.clearSearch(clearIcon, root);\n            } else {\n                View.init(root);\n            }\n\n            data.originalEvent.preventDefault();\n        }\n    );\n\n    Selector.on(\n        CustomEvents.events.activate,\n        SELECTORS.DISPLAY_OPTION,\n        (e, data) => {\n            const option = $(e.target);\n\n            if (option.hasClass('active')) {\n                return;\n            }\n\n            const filter = option.attr('data-display-option');\n            const pref = option.attr('data-pref');\n\n            root.find(SELECTORS.courseView.region).attr('data-display', option.attr('data-value'));\n            updatePreferences(filter, pref);\n            View.reset(root);\n            data.originalEvent.preventDefault();\n        }\n    );\n};\n\n/**\n * Initialise the timeline view navigation by adding event listeners to\n * the navigation elements.\n *\n * @param {object} root The root element for the myoverview block\n */\nexport const init = root => {\n    root = $(root);\n    registerSelector(root);\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_jquery","CustomEvents","Repository","View","_selectors","updatePreferences","filter","value","type","updateUserPreferences","preferences","_exports","init","root","Selector","find","SELECTORS","FILTERS","define","events","activate","on","FILTER_OPTION","e","data","option","$","target","hasClass","attr","pref","customfieldvalue","courseView","region","page","document","querySelector","selectBlock","input","searchInput","clearIcon","clearSearch","originalEvent","preventDefault","DISPLAY_OPTION","reset","registerSelector"],"mappings":"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"}