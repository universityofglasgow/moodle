{"version":3,"file":"cmitem.min.js","sources":["../../../../src/local/content/section/cmitem.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course course module item component.\n *\n * This component is used to control specific course modules interactions like drag and drop.\n *\n * @module     core_courseformat/local/content/section/cmitem\n * @class      core_courseformat/local/content/section/cmitem\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DndCmItem from 'core_courseformat/local/courseeditor/dndcmitem';\n\nexport default class extends DndCmItem {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_section_cmitem';\n        // Default query selectors.\n        this.selectors = {\n            DRAGICON: `.editing_move`,\n        };\n        // Most classes will be loaded later by DndCmItem.\n        this.classes = {\n            LOCKED: 'editinprogress',\n        };\n        // We need our id to watch specific events.\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Initial state ready method.\n     */\n    stateReady() {\n        this.configDragDrop(this.id);\n        this.getElement(this.selectors.DRAGICON)?.classList.add(this.classes.DRAGICON);\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `cm[${this.id}]:deleted`, handler: this.unregister},\n            {watch: `cm[${this.id}]:updated`, handler: this._refreshCm},\n        ];\n    }\n\n    /**\n     * Update a course index cm using the state information.\n     *\n     * @param {object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshCm({element}) {\n        // Update classes.\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\n        this.locked = element.locked;\n    }\n}\n"],"names":["obj","_dndcmitem","__esModule","default","_default","DndCmItem","create","this","name","selectors","DRAGICON","classes","LOCKED","id","element","dataset","stateReady","_this$getElement","configDragDrop","getElement","classList","add","getWatchers","watch","concat","handler","unregister","_refreshCm","_ref","_element$dragging","_element$locked","toggle","DRAGGING","dragging","locked","_exports"],"mappings":"oJA0BuE,IAAAA;;;;;;;;;;qFAAvEC,YAAuED,IAAvEC,aAAuED,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAExD,MAAAI,iBAAcC,WAAAA,QAKzBC,SAEIC,KAAKC,KAAO,yBAEZD,KAAKE,UAAY,CACbC,SAAQ,iBAGZH,KAAKI,QAAU,CACXC,OAAQ,kBAGZL,KAAKM,GAAKN,KAAKO,QAAQC,QAAQF,EACnC,CAKAG,aAAa,IAAAC,iBACTV,KAAKW,eAAeX,KAAKM,IACe,QAAxCI,iBAAIV,KAACY,WAAWZ,KAAKE,UAAUC,iBAA/BO,IAAwCA,kBAAxCA,iBAA0CG,UAAUC,IAAId,KAAKI,QAAQD,SACzE,CAOAY,cACI,MAAO,CACH,CAACC,YAAKC,OAAQjB,KAAKM,GAAa,aAAEY,QAASlB,KAAKmB,YAChD,CAACH,YAAKC,OAAQjB,KAAKM,GAAa,aAAEY,QAASlB,KAAKoB,YAExD,CAQAA,WAAUC,MAAY,IAAAC,kBAAAC,gBAAA,IAAXhB,QAACA,SAAQc,KAEhBrB,KAAKO,QAAQM,UAAUW,OAAOxB,KAAKI,QAAQqB,SAA0B,QAAlBH,kBAAEf,QAAQmB,gBAAQJ,IAAAA,mBAAAA,mBACrEtB,KAAKO,QAAQM,UAAUW,OAAOxB,KAAKI,QAAQC,OAAsB,QAAhBkB,gBAAEhB,QAAQoB,cAAMJ,IAAAA,iBAAAA,iBACjEvB,KAAK2B,OAASpB,QAAQoB,MAC1B,EACH,OAAAC,SAAAhC,QAAAC,SAAA+B,SAAAhC,OAAA"}