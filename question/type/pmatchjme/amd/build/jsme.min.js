function _typeof(a){if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){_typeof=function(a){return typeof a}}else{_typeof=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return _typeof(a)}define ("qtype_pmatchjme/jsme",["jquery"],function(a){"use strict";var b={max_loading_waits:10,insert_applet:function insert_applet(a,c,d,e,f,g){var h=[];if(f){h.push("nostereo")}if(g){h.push("autoez")}if(e){h.push("depict")}b.show_jsme(c,a,h,b.max_loading_waits)},show_jsme:function show_jsme(c,d,e,f){var g=a(c),h=!1,i=!1;if("object"!==("undefined"==typeof JSApplet?"undefined":_typeof(JSApplet))&&0<f){setTimeout(function(){b.show_jsme(c,d,e,f-1)},100);return}a("#"+d).html("");a("#"+d).removeClass("qtype_pmatchjme-applet-warning");i=new JSApplet.JSME(d,"368px","312px",{options:e.join(",")});i.name=d;h=g.find("input.jme").val();if(h){i.readMolecule(h)}g.parents("form").on("submit",function(){g.find("input.answer").val(i.smiles());g.find("input.jme").val(i.jmeFile());g.find("input.mol").val(i.molFile())})}};return b});
//# sourceMappingURL=jsme.min.js.map
