{"version":3,"sources":["../src/unlock-editing.js"],"names":["define","$","Ajax","Str","Notification","strings","key","component","init","submissionSelector","graderSelector","stringsPromise","get_strings","catch","exception","on","e","preventDefault","node","currentTarget","submissionId","data","then","title","yesLabel","noLabel","qSubmission","confirm","hide","call","methodname","args","submissionid","remove","show","peerworkId","graderId","graderName","M","util","get_string","nodes","filter","peerworkid","graderid"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Support for unlocking editing of a student or submission.\n *\n * @copyright  2020 Xi'an Jiaotong-Liverpool University\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'], function($, Ajax, Str, Notification) {\n\n    const strings = [\n        {key: 'areyousure', component: 'core'},\n        {key: 'yes', component: 'core'},\n        {key: 'no', component: 'core'},\n        {key: 'confirmunlockeditingsubmission', component: 'mod_peerwork'},\n        {key: 'confirmunlockeditinggrader', component: 'mod_peerwork'},\n    ];\n\n    /**\n     * Init function.\n     *\n     * @param {String} submissionSelector The submission selector.\n     * @param {String} graderSelector The grader selector.\n     */\n    function init(submissionSelector, graderSelector) {\n\n        // Preload strings.\n        const stringsPromise = Str.get_strings(strings).catch(Notification.exception);\n\n        // Find the submission selector.\n        $(submissionSelector).on('click', (e) => {\n            e.preventDefault();\n            const node = $(e.currentTarget);\n            const submissionId = node.data('submissionid');\n\n            stringsPromise.then(([title, yesLabel, noLabel, qSubmission]) => {\n                return Notification.confirm(title, qSubmission, yesLabel, noLabel, () => {\n                    node.hide();\n                    Ajax.call([{\n                        methodname: 'mod_peerwork_unlock_submission',\n                        args: {submissionid: submissionId}\n                    }])[0].then(() => {\n                        node.remove();\n                        return;\n                    }).catch((e) => {\n                        node.show();\n                        return Notification.exception(e);\n                    });\n                });\n            }).catch(Notification.exception);\n        });\n\n        // Find the grader selectors.\n        $(graderSelector).on('click', (e) => {\n            e.preventDefault();\n            const node = $(e.currentTarget);\n            const peerworkId = node.data('peerworkid');\n            const graderId = node.data('graderid');\n            const graderName = node.data('graderfullname');\n\n            stringsPromise.then(([title, yesLabel, noLabel]) => {\n                return Notification.confirm(\n                    title,\n                    M.util.get_string('confirmunlockeditinggrader', 'mod_peerwork', graderName),\n                    yesLabel,\n                    noLabel,\n                    () => {\n                        const nodes = $(graderSelector).filter(`[data-graderid=${graderId}]`);\n                        nodes.hide();\n                        Ajax.call([{\n                            methodname: 'mod_peerwork_unlock_grader',\n                            args: {peerworkid: peerworkId, graderid: graderId}\n                        }])[0].then(() => {\n                            nodes.remove();\n                            return;\n                        }).catch((e) => {\n                            nodes.show();\n                            return Notification.exception(e);\n                        });\n                    }\n                );\n            }).catch(Notification.exception);\n        });\n\n    }\n\n    return {\n        init: init\n    };\n\n});\n"],"file":"unlock-editing.min.js"}