{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Options for the Moodle tiny_teamsmeeting plugin.\n *\n * @package     tiny_teamsmeeting\n * @copyright   2023 Enovation Solutions\n * @author      Oliwer Banach <oliwer.banach@enovation.ie>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\nconst appurl = getPluginOptionName(pluginName, 'appurl');\nconst clientdomain = getPluginOptionName(pluginName, 'clientdomain');\nconst localevalue = getPluginOptionName(pluginName, 'localevalue');\nconst msession = getPluginOptionName(pluginName, 'msession');\n\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    registerOption(appurl, {\n        processor: 'string',\n    });\n    registerOption(clientdomain, {\n        processor: 'string',\n    });\n    registerOption(localevalue, {\n        processor: 'string',\n    });\n    registerOption(msession, {\n        processor: 'string',\n    });\n};\n\n/**\n * Fetch the myFirstProperty value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the myFirstProperty option\n */\nexport const getAppurl = (editor) => editor.options.get(appurl);\nexport const getClientdomain = (editor) => editor.options.get(clientdomain);\nexport const getLocaleValue = (editor) => editor.options.get(localevalue);\nexport const getMsession = (editor) => editor.options.get(msession);\n"],"names":["appurl","pluginName","clientdomain","localevalue","msession","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;;MA2BMA,QAAS,gCAAoBC,mBAAY,UACzCC,cAAe,gCAAoBD,mBAAY,gBAC/CE,aAAc,gCAAoBF,mBAAY,eAC9CG,UAAW,gCAAoBH,mBAAY,8BAExBI,eACfC,eAAiBD,OAAOE,QAAQC,SAEtCF,eAAeN,OAAQ,CACnBS,UAAW,WAEfH,eAAeJ,aAAc,CACzBO,UAAW,WAEfH,eAAeH,YAAa,CACxBM,UAAW,WAEfH,eAAeF,SAAU,CACrBK,UAAW,+BAUOJ,QAAWA,OAAOE,QAAQG,IAAIV,iCACxBK,QAAWA,OAAOE,QAAQG,IAAIR,sCAC/BG,QAAWA,OAAOE,QAAQG,IAAIP,kCACjCE,QAAWA,OAAOE,QAAQG,IAAIN"}